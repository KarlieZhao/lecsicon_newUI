module.exports = {

"[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var util_exports = {};
__export(util_exports, {
    MingoError: ()=>MingoError,
    ValueMap: ()=>ValueMap,
    assert: ()=>assert,
    cloneDeep: ()=>cloneDeep,
    compare: ()=>compare,
    ensureArray: ()=>ensureArray,
    filterMissing: ()=>filterMissing,
    findInsertIndex: ()=>findInsertIndex,
    flatten: ()=>flatten,
    groupBy: ()=>groupBy,
    has: ()=>has,
    hashCode: ()=>hashCode,
    intersection: ()=>intersection,
    into: ()=>into,
    isArray: ()=>isArray,
    isBoolean: ()=>isBoolean,
    isDate: ()=>isDate,
    isEmpty: ()=>isEmpty,
    isEqual: ()=>isEqual,
    isFunction: ()=>isFunction,
    isNil: ()=>isNil,
    isNotNaN: ()=>isNotNaN,
    isNumber: ()=>isNumber,
    isObject: ()=>isObject,
    isObjectLike: ()=>isObjectLike,
    isOperator: ()=>isOperator,
    isRegExp: ()=>isRegExp,
    isString: ()=>isString,
    isSymbol: ()=>isSymbol,
    merge: ()=>merge,
    normalize: ()=>normalize,
    removeValue: ()=>removeValue,
    resolve: ()=>resolve,
    resolveGraph: ()=>resolveGraph,
    setValue: ()=>setValue,
    stringify: ()=>stringify,
    truthy: ()=>truthy,
    typeOf: ()=>typeOf,
    unique: ()=>unique,
    walk: ()=>walk
});
module.exports = __toCommonJS(util_exports);
class MingoError extends Error {
}
const MISSING = Symbol("missing");
const CYCLE_FOUND_ERROR = Object.freeze(new Error("mingo: cycle detected while processing object/array"));
const DEFAULT_HASH_FUNCTION = (value)=>{
    const s = stringify(value);
    let hash = 0;
    let i = s.length;
    while(i)hash = (hash << 5) - hash ^ s.charCodeAt(--i);
    return hash >>> 0;
};
const objectProto = Object.prototype;
const arrayProto = Array.prototype;
const getPrototypeOf = Object.getPrototypeOf;
const isPrimitive = (v)=>typeof v !== "object" && typeof v !== "function" || v === null;
const isScalar = (v)=>isPrimitive(v) || isDate(v) || isRegExp(v);
const SORT_ORDER = {
    undefined: 1,
    null: 2,
    number: 3,
    string: 4,
    symbol: 5,
    object: 6,
    array: 7,
    arraybuffer: 8,
    boolean: 9,
    date: 10,
    regexp: 11,
    function: 12
};
const compare = (a, b)=>{
    if (a === MISSING) a = void 0;
    if (b === MISSING) b = void 0;
    const [u, v] = [
        a,
        b
    ].map((n)=>SORT_ORDER[typeOf(n)]);
    if (u !== v) return u - v;
    if (isEqual(a, b)) return 0;
    if (a < b) return -1;
    if (a > b) return 1;
    return 0;
};
class ValueMap extends Map {
    // The hash function
    #hashFn = DEFAULT_HASH_FUNCTION;
    // maps the hashcode to key set
    #keyMap = /* @__PURE__ */ new Map();
    // returns a tuple of [<masterKey>, <hash>]. Expects an object key.
    #unpack = (key)=>{
        const hash = this.#hashFn(key);
        return [
            (this.#keyMap.get(hash) || []).find((k)=>isEqual(k, key)),
            hash
        ];
    };
    constructor(){
        super();
    }
    /**
   * Returns a new {@link ValueMap} object.
   * @param fn An optional custom hash function
   */ static init(fn) {
        const m = new ValueMap();
        if (fn) m.#hashFn = fn;
        return m;
    }
    clear() {
        super.clear();
        this.#keyMap.clear();
    }
    /**
   * @returns true if an element in the Map existed and has been removed, or false if the element does not exist.
   */ delete(key) {
        if (isPrimitive(key)) return super.delete(key);
        const [masterKey, hash] = this.#unpack(key);
        if (!super.delete(masterKey)) return false;
        this.#keyMap.set(hash, this.#keyMap.get(hash).filter((k)=>!isEqual(k, masterKey)));
        return true;
    }
    /**
   * Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.
   * @returns Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.
   */ get(key) {
        if (isPrimitive(key)) return super.get(key);
        const [masterKey, _] = this.#unpack(key);
        return super.get(masterKey);
    }
    /**
   * @returns boolean indicating whether an element with the specified key exists or not.
   */ has(key) {
        if (isPrimitive(key)) return super.has(key);
        const [masterKey, _] = this.#unpack(key);
        return super.has(masterKey);
    }
    /**
   * Adds a new element with a specified key and value to the Map. If an element with the same key already exists, the element will be updated.
   */ set(key, value) {
        if (isPrimitive(key)) return super.set(key, value);
        const [masterKey, hash] = this.#unpack(key);
        if (super.has(masterKey)) {
            super.set(masterKey, value);
        } else {
            super.set(key, value);
            const keys = this.#keyMap.get(hash) || [];
            keys.push(key);
            this.#keyMap.set(hash, keys);
        }
        return this;
    }
    /**
   * @returns the number of elements in the Map.
   */ get size() {
        return super.size;
    }
}
function assert(condition, message) {
    if (!condition) throw new MingoError(message);
}
const typeOf = (v)=>{
    const s = objectProto.toString.call(v);
    const t = s.substring(8, s.length - 1).toLowerCase();
    if (t !== "object") return t;
    const ctor = v.constructor;
    return ctor == null || ctor === Object ? t : ctor.name;
};
const isBoolean = (v)=>typeof v === "boolean";
const isString = (v)=>typeof v === "string";
const isSymbol = (v)=>typeof v === "symbol";
const isNumber = (v)=>!isNaN(v) && typeof v === "number";
const isNotNaN = (v)=>!(isNaN(v) && typeof v === "number");
const isArray = Array.isArray;
const isObject = (v)=>{
    if (!v) return false;
    const p = Object.getPrototypeOf(v);
    return (p === Object.prototype || p === null) && typeOf(v) === "object";
};
const isObjectLike = (v)=>!isPrimitive(v);
const isDate = (v)=>v instanceof Date;
const isRegExp = (v)=>v instanceof RegExp;
const isFunction = (v)=>typeof v === "function";
const isNil = (v)=>v === null || v === void 0;
const truthy = (arg, strict = true)=>!!arg || strict && arg === "";
const isEmpty = (x)=>isNil(x) || isString(x) && !x || isArray(x) && x.length === 0 || isObject(x) && Object.keys(x).length === 0;
const ensureArray = (x)=>isArray(x) ? x : [
        x
    ];
const has = (obj, prop)=>!!obj && objectProto.hasOwnProperty.call(obj, prop);
const isTypedArray = (v)=>typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView(v);
const cloneDeep = (v, refs)=>{
    if (isNil(v) || isBoolean(v) || isNumber(v) || isString(v)) return v;
    if (isDate(v)) return new Date(v);
    if (isRegExp(v)) return new RegExp(v);
    if (isTypedArray(v)) {
        const ctor = v.constructor;
        return new ctor(v);
    }
    if (!(refs instanceof Set)) refs = /* @__PURE__ */ new Set();
    if (refs.has(v)) throw CYCLE_FOUND_ERROR;
    refs.add(v);
    try {
        if (isArray(v)) {
            const arr = new Array(v.length);
            for(let i = 0; i < v.length; i++)arr[i] = cloneDeep(v[i], refs);
            return arr;
        }
        if (isObject(v)) {
            const obj = {};
            for (const k of Object.keys(v))obj[k] = cloneDeep(v[k], refs);
            return obj;
        }
    } finally{
        refs.delete(v);
    }
    return v;
};
const isMissing = (v)=>v === MISSING;
function merge(target, input) {
    if (isMissing(target) || isNil(target)) return input;
    if (isMissing(input) || isNil(input)) return target;
    if (isPrimitive(target) || isPrimitive(input)) return input;
    if (isArray(target) && isArray(input)) {
        assert(target.length === input.length, "arrays must be of equal length to merge.");
    }
    for (const k of Object.keys(input)){
        target[k] = merge(target[k], input[k]);
    }
    return target;
}
function intersection(input, hashFunction = DEFAULT_HASH_FUNCTION) {
    const vmaps = [
        ValueMap.init(hashFunction),
        ValueMap.init(hashFunction)
    ];
    if (input.length === 0) return [];
    if (input.some((arr)=>arr.length === 0)) return [];
    if (input.length === 1) return [
        ...input
    ];
    input[input.length - 1].forEach((v)=>vmaps[0].set(v, true));
    for(let i = input.length - 2; i > -1; i--){
        input[i].forEach((v)=>{
            if (vmaps[0].has(v)) vmaps[1].set(v, true);
        });
        if (vmaps[1].size === 0) return [];
        vmaps.reverse();
        vmaps[1].clear();
    }
    return Array.from(vmaps[0].keys());
}
function flatten(xs, depth = 1) {
    const arr = new Array();
    function flatten2(ys, n) {
        for(let i = 0, len = ys.length; i < len; i++){
            if (isArray(ys[i]) && (n > 0 || n < 0)) {
                flatten2(ys[i], Math.max(-1, n - 1));
            } else {
                arr.push(ys[i]);
            }
        }
    }
    flatten2(xs, depth);
    return arr;
}
function isEqual(a, b) {
    if (a === b || Object.is(a, b)) return true;
    const ctor = !!a && a.constructor || a;
    if (a === null || b === null || a === void 0 || b === void 0 || ctor !== b.constructor || ctor === Function) {
        return false;
    }
    if (ctor === Array || ctor === Object) {
        const aKeys = Object.keys(a);
        const bKeys = Object.keys(b);
        if (aKeys.length !== bKeys.length) return false;
        if (/* @__PURE__ */ new Set([
            ...aKeys,
            ...bKeys
        ]).size != aKeys.length) return false;
        for (const k of aKeys)if (!isEqual(a[k], b[k])) return false;
        return true;
    }
    const proto = getPrototypeOf(a);
    const cmp = isTypedArray(a) || proto !== objectProto && proto !== arrayProto && has(proto, "toString");
    return cmp && a.toString() === b.toString();
}
function unique(input, hashFunction = DEFAULT_HASH_FUNCTION) {
    const m = ValueMap.init(hashFunction);
    input.forEach((v)=>m.set(v, true));
    return Array.from(m.keys());
}
const stringify = (v, refs)=>{
    if (v === null) return "null";
    if (v === void 0) return "undefined";
    if (isString(v) || isNumber(v) || isBoolean(v)) return JSON.stringify(v);
    if (isDate(v)) return v.toISOString();
    if (isRegExp(v) || isSymbol(v) || isFunction(v)) return v.toString();
    if (isTypedArray(v)) return typeOf(v) + "[" + v.toString() + "]";
    if (!(refs instanceof Set)) refs = /* @__PURE__ */ new Set();
    if (refs.has(v)) throw CYCLE_FOUND_ERROR;
    try {
        refs.add(v);
        if (isArray(v)) return "[" + v.map((s)=>stringify(s, refs)).join(",") + "]";
        if (isObject(v)) {
            const keys = Object.keys(v).sort();
            return "{" + keys.map((k)=>`${k}:${stringify(v[k], refs)}`).join() + "}";
        }
        const proto = Object.getPrototypeOf(v);
        if (proto !== objectProto && proto !== arrayProto && has(proto, "toString")) {
            return typeOf(v) + "(" + JSON.stringify(v.toString()) + ")";
        }
        throw new Error("mingo: cannot stringify custom type without explicit toString() method.");
    } finally{
        refs.delete(v);
    }
};
function hashCode(value, hashFunction) {
    if (isNil(value)) return null;
    hashFunction = hashFunction || DEFAULT_HASH_FUNCTION;
    return hashFunction(value);
}
function groupBy(collection, keyFn, hashFunction = DEFAULT_HASH_FUNCTION) {
    if (collection.length < 1) return /* @__PURE__ */ new Map();
    const lookup = /* @__PURE__ */ new Map();
    const result = /* @__PURE__ */ new Map();
    for(let i = 0; i < collection.length; i++){
        const obj = collection[i];
        const key = keyFn(obj, i);
        const hash = hashCode(key, hashFunction);
        if (hash === null) {
            if (result.has(null)) {
                result.get(null).push(obj);
            } else {
                result.set(null, [
                    obj
                ]);
            }
        } else {
            const existingKey = lookup.has(hash) ? lookup.get(hash).find((k)=>isEqual(k, key)) : null;
            if (isNil(existingKey)) {
                result.set(key, [
                    obj
                ]);
                if (lookup.has(hash)) {
                    lookup.get(hash).push(key);
                } else {
                    lookup.set(hash, [
                        key
                    ]);
                }
            } else {
                result.get(existingKey).push(obj);
            }
        }
    }
    return result;
}
const MAX_ARRAY_PUSH = 5e4;
function into(target, ...rest) {
    if (isArray(target)) {
        for (const arr of rest){
            let i = Math.ceil(arr.length / MAX_ARRAY_PUSH);
            let begin = 0;
            while(i-- > 0){
                Array.prototype.push.apply(target, arr.slice(begin, begin + MAX_ARRAY_PUSH));
                begin += MAX_ARRAY_PUSH;
            }
        }
        return target;
    } else {
        return rest.filter(isObjectLike).reduce((acc, item)=>{
            Object.assign(acc, item);
            return acc;
        }, target);
    }
}
function getValue(obj, key) {
    return isArray(obj) || isObject(obj) ? obj[key] : void 0;
}
function unwrap(arr, depth) {
    if (depth < 1) return arr;
    while(depth-- && arr.length === 1)arr = arr[0];
    return arr;
}
function resolve(obj, selector, options) {
    let depth = 0;
    function resolve2(o, path) {
        let value = o;
        for(let i = 0; i < path.length; i++){
            const field = path[i];
            const isText = /^\d+$/.exec(field) === null;
            if (isText && isArray(value)) {
                if (i === 0 && depth > 0) break;
                depth += 1;
                const subpath = path.slice(i);
                value = value.reduce((acc, item)=>{
                    const v = resolve2(item, subpath);
                    if (v !== void 0) acc.push(v);
                    return acc;
                }, []);
                break;
            } else {
                value = getValue(value, field);
            }
            if (value === void 0) break;
        }
        return value;
    }
    const res = isScalar(obj) ? obj : resolve2(obj, selector.split("."));
    return isArray(res) && options?.unwrapArray ? unwrap(res, depth) : res;
}
function resolveGraph(obj, selector, options) {
    const sep = selector.indexOf(".");
    const key = sep == -1 ? selector : selector.substring(0, sep);
    const next = selector.substring(sep + 1);
    const hasNext = sep != -1;
    if (isArray(obj)) {
        const isIndex = /^\d+$/.test(key);
        const arr = isIndex && options?.preserveIndex ? [
            ...obj
        ] : [];
        if (isIndex) {
            const index = parseInt(key);
            let value2 = getValue(obj, index);
            if (hasNext) {
                value2 = resolveGraph(value2, next, options);
            }
            if (options?.preserveIndex) {
                arr[index] = value2;
            } else {
                arr.push(value2);
            }
        } else {
            for (const item of obj){
                const value2 = resolveGraph(item, selector, options);
                if (options?.preserveMissing) {
                    arr.push(value2 == void 0 ? MISSING : value2);
                } else if (value2 != void 0 || options?.preserveIndex) {
                    arr.push(value2);
                }
            }
        }
        return arr;
    }
    const res = options?.preserveKeys ? {
        ...obj
    } : {};
    let value = getValue(obj, key);
    if (hasNext) {
        value = resolveGraph(value, next, options);
    }
    if (value === void 0) return void 0;
    res[key] = value;
    return res;
}
function filterMissing(obj) {
    if (isArray(obj)) {
        for(let i = obj.length - 1; i >= 0; i--){
            if (obj[i] === MISSING) {
                obj.splice(i, 1);
            } else {
                filterMissing(obj[i]);
            }
        }
    } else if (isObject(obj)) {
        for(const k in obj){
            if (has(obj, k)) {
                filterMissing(obj[k]);
            }
        }
    }
}
const NUMBER_RE = /^\d+$/;
function walk(obj, selector, fn, options) {
    const names = selector.split(".");
    const key = names[0];
    const next = names.slice(1).join(".");
    if (names.length === 1) {
        if (isObject(obj) || isArray(obj) && NUMBER_RE.test(key)) {
            fn(obj, key);
        }
    } else {
        if (options?.buildGraph && isNil(obj[key])) {
            obj[key] = {};
        }
        const item = obj[key];
        if (!item) return;
        const isNextArrayIndex = !!(names.length > 1 && NUMBER_RE.test(names[1]));
        if (isArray(item) && options?.descendArray && !isNextArrayIndex) {
            item.forEach((e)=>walk(e, next, fn, options));
        } else {
            walk(item, next, fn, options);
        }
    }
}
function setValue(obj, selector, value) {
    walk(obj, selector, (item, key)=>{
        item[key] = isFunction(value) ? value(item[key]) : value;
    }, {
        buildGraph: true
    });
}
function removeValue(obj, selector, options) {
    walk(obj, selector, (item, key)=>{
        if (isArray(item)) {
            if (/^\d+$/.test(key)) {
                item.splice(parseInt(key), 1);
            } else if (options && options.descendArray) {
                for (const elem of item){
                    if (isObject(elem)) {
                        delete elem[key];
                    }
                }
            }
        } else if (isObject(item)) {
            delete item[key];
        }
    }, options);
}
const OPERATOR_NAME_PATTERN = /^\$[a-zA-Z0-9_]+$/;
function isOperator(name) {
    return OPERATOR_NAME_PATTERN.test(name);
}
function normalize(expr) {
    if (isScalar(expr)) {
        return isRegExp(expr) ? {
            $regex: expr
        } : {
            $eq: expr
        };
    }
    if (isObjectLike(expr)) {
        if (!Object.keys(expr).some(isOperator)) return {
            $eq: expr
        };
        if (has(expr, "$regex")) {
            const newExpr = {
                ...expr
            };
            newExpr["$regex"] = new RegExp(expr["$regex"], expr["$options"]);
            delete newExpr["$options"];
            return newExpr;
        }
    }
    return expr;
}
function findInsertIndex(sorted, item, comparator = compare) {
    let lo = 0;
    let hi = sorted.length - 1;
    while(lo <= hi){
        const mid = Math.round(lo + (hi - lo) / 2);
        if (comparator(item, sorted[mid]) < 0) {
            hi = mid - 1;
        } else if (comparator(item, sorted[mid]) > 0) {
            lo = mid + 1;
        } else {
            return mid;
        }
    }
    return lo;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    MingoError,
    ValueMap,
    assert,
    cloneDeep,
    compare,
    ensureArray,
    filterMissing,
    findInsertIndex,
    flatten,
    groupBy,
    has,
    hashCode,
    intersection,
    into,
    isArray,
    isBoolean,
    isDate,
    isEmpty,
    isEqual,
    isFunction,
    isNil,
    isNotNaN,
    isNumber,
    isObject,
    isObjectLike,
    isOperator,
    isRegExp,
    isString,
    isSymbol,
    merge,
    normalize,
    removeValue,
    resolve,
    resolveGraph,
    setValue,
    stringify,
    truthy,
    typeOf,
    unique,
    walk
});
}}),
"[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var core_exports = {};
__export(core_exports, {
    ComputeOptions: ()=>ComputeOptions,
    Context: ()=>Context,
    OperatorType: ()=>OperatorType,
    ProcessingMode: ()=>ProcessingMode,
    computeValue: ()=>computeValue,
    getOperator: ()=>getOperator,
    initOptions: ()=>initOptions,
    redact: ()=>redact,
    useOperators: ()=>useOperators
});
module.exports = __toCommonJS(core_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var ProcessingMode = /* @__PURE__ */ ((ProcessingMode2)=>{
    ProcessingMode2["CLONE_ALL"] = "CLONE_ALL";
    ProcessingMode2["CLONE_INPUT"] = "CLONE_INPUT";
    ProcessingMode2["CLONE_OUTPUT"] = "CLONE_OUTPUT";
    ProcessingMode2["CLONE_OFF"] = "CLONE_OFF";
    return ProcessingMode2;
})(ProcessingMode || {});
class ComputeOptions {
    #options;
    /** Reference to the root object when processing subgraphs of the object. */ #root;
    #local;
    constructor(options, root, local){
        this.#options = options;
        this.update(root, local);
    }
    /**
   * Initialize new ComputeOptions.
   *
   * @param options
   * @param root
   * @param local
   * @returns {ComputeOptions}
   */ static init(options, root, local) {
        return options instanceof ComputeOptions ? new ComputeOptions(options.#options, options.root ?? root, {
            ...options.#local,
            ...local,
            // retain existing variables
            variables: Object.assign({}, options.#local?.variables, local?.variables)
        }) : new ComputeOptions(options, root, local);
    }
    /**
   * Updates the internal state.
   *
   * @param root The new root context for this object.
   * @param local The new local state to merge into current if it exists.
   * @returns
   */ update(root, local) {
        this.#root = root;
        const variables = Object.assign({}, this.#local?.variables, local?.variables);
        if (Object.keys(variables).length) {
            this.#local = {
                ...local,
                variables
            };
        } else {
            this.#local = local ?? {};
        }
        return this;
    }
    getOptions() {
        return Object.freeze({
            ...this.#options,
            context: Context.from(this.#options.context)
        });
    }
    get root() {
        return this.#root;
    }
    get local() {
        return this.#local;
    }
    get idKey() {
        return this.#options.idKey;
    }
    get collation() {
        return this.#options?.collation;
    }
    get processingMode() {
        return this.#options?.processingMode || "CLONE_OFF" /* CLONE_OFF */ ;
    }
    get useStrictMode() {
        return this.#options?.useStrictMode;
    }
    get scriptEnabled() {
        return this.#options?.scriptEnabled;
    }
    get useGlobalContext() {
        return this.#options?.useGlobalContext;
    }
    get hashFunction() {
        return this.#options?.hashFunction;
    }
    get collectionResolver() {
        return this.#options?.collectionResolver;
    }
    get jsonSchemaValidator() {
        return this.#options?.jsonSchemaValidator;
    }
    get variables() {
        return this.#options?.variables;
    }
    get context() {
        return this.#options?.context;
    }
}
function initOptions(options) {
    return options instanceof ComputeOptions ? options.getOptions() : Object.freeze({
        idKey: "_id",
        scriptEnabled: true,
        useStrictMode: true,
        useGlobalContext: true,
        processingMode: "CLONE_OFF" /* CLONE_OFF */ ,
        ...options,
        context: options?.context ? Context.from(options?.context) : Context.init()
    });
}
var OperatorType = /* @__PURE__ */ ((OperatorType2)=>{
    OperatorType2["ACCUMULATOR"] = "accumulator";
    OperatorType2["EXPRESSION"] = "expression";
    OperatorType2["PIPELINE"] = "pipeline";
    OperatorType2["PROJECTION"] = "projection";
    OperatorType2["QUERY"] = "query";
    OperatorType2["WINDOW"] = "window";
    return OperatorType2;
})(OperatorType || {});
class Context {
    #operators = /* @__PURE__ */ new Map();
    constructor(){}
    static init() {
        return new Context();
    }
    static from(ctx) {
        const instance = Context.init();
        if ((0, import_util.isNil)(ctx)) return instance;
        ctx.#operators.forEach((v, k)=>instance.addOperators(k, v));
        return instance;
    }
    addOperators(type, operators) {
        if (!this.#operators.has(type)) this.#operators.set(type, {});
        for (const [name, fn] of Object.entries(operators)){
            if (!this.getOperator(type, name)) {
                this.#operators.get(type)[name] = fn;
            }
        }
        return this;
    }
    getOperator(type, name) {
        const ops = this.#operators.get(type) ?? {};
        return ops[name] ?? null;
    }
    addAccumulatorOps(ops) {
        return this.addOperators("accumulator", ops);
    }
    addExpressionOps(ops) {
        return this.addOperators("expression", ops);
    }
    addQueryOps(ops) {
        return this.addOperators("query", ops);
    }
    addPipelineOps(ops) {
        return this.addOperators("pipeline", ops);
    }
    addProjectionOps(ops) {
        return this.addOperators("projection", ops);
    }
    addWindowOps(ops) {
        return this.addOperators("window", ops);
    }
}
const GLOBAL_CONTEXT = Context.init();
function useOperators(type, operators) {
    for (const [name, fn] of Object.entries(operators)){
        (0, import_util.assert)((0, import_util.isFunction)(fn) && (0, import_util.isOperator)(name), `'${name}' is not a valid operator`);
        const currentFn = getOperator(type, name, null);
        (0, import_util.assert)(!currentFn || fn === currentFn, `${name} already exists for '${type}' operators. Cannot change operator function once registered.`);
    }
    switch(type){
        case "accumulator":
            GLOBAL_CONTEXT.addAccumulatorOps(operators);
            break;
        case "expression":
            GLOBAL_CONTEXT.addExpressionOps(operators);
            break;
        case "pipeline":
            GLOBAL_CONTEXT.addPipelineOps(operators);
            break;
        case "projection":
            GLOBAL_CONTEXT.addProjectionOps(operators);
            break;
        case "query":
            GLOBAL_CONTEXT.addQueryOps(operators);
            break;
        case "window":
            GLOBAL_CONTEXT.addWindowOps(operators);
            break;
    }
}
function getOperator(type, name, options) {
    const { context: ctx, useGlobalContext: fallback } = options || {};
    const fn = ctx ? ctx.getOperator(type, name) : null;
    return !fn && fallback ? GLOBAL_CONTEXT.getOperator(type, name) : fn;
}
function computeValue(obj, expr, operator, options) {
    const copts = ComputeOptions.init(options, obj);
    return !!operator && (0, import_util.isOperator)(operator) ? computeOperator(obj, expr, operator, copts) : computeExpression(obj, expr, copts);
}
const SYSTEM_VARS = [
    "$$ROOT",
    "$$CURRENT",
    "$$REMOVE",
    "$$NOW"
];
function computeExpression(obj, expr, options) {
    if ((0, import_util.isString)(expr) && expr.length > 0 && expr[0] === "$") {
        if (REDACT_ACTIONS.includes(expr)) return expr;
        let ctx = options.root;
        const arr = expr.split(".");
        if (SYSTEM_VARS.includes(arr[0])) {
            switch(arr[0]){
                case "$$ROOT":
                    break;
                case "$$CURRENT":
                    ctx = obj;
                    break;
                case "$$REMOVE":
                    ctx = void 0;
                    break;
                case "$$NOW":
                    ctx = /* @__PURE__ */ new Date();
                    break;
            }
            expr = expr.slice(arr[0].length + 1);
        } else if (arr[0].slice(0, 2) === "$$") {
            ctx = Object.assign({}, // global vars
            options.variables, // current item is added before local variables because the binding may be changed.
            {
                this: obj
            }, // local vars
            options?.local?.variables);
            const name = arr[0].slice(2);
            (0, import_util.assert)((0, import_util.has)(ctx, name), `Use of undefined variable: ${name}`);
            expr = expr.slice(2);
        } else {
            expr = expr.slice(1);
        }
        return expr === "" ? ctx : (0, import_util.resolve)(ctx, expr);
    }
    if ((0, import_util.isArray)(expr)) {
        return expr.map((item)=>computeExpression(obj, item, options));
    }
    if ((0, import_util.isObject)(expr)) {
        const result = {};
        const elems = Object.entries(expr);
        for (const [key, val] of elems){
            if ((0, import_util.isOperator)(key)) {
                (0, import_util.assert)(elems.length == 1, "expression must have single operator.");
                return computeOperator(obj, val, key, options);
            }
            result[key] = computeExpression(obj, val, options);
        }
        return result;
    }
    return expr;
}
function computeOperator(obj, expr, operator, options) {
    const callExpression = getOperator("expression", operator, options);
    if (callExpression) return callExpression(obj, expr, options);
    const callAccumulator = getOperator("accumulator", operator, options);
    (0, import_util.assert)(!!callAccumulator, `accumulator '${operator}' is not registered.`);
    if (!(0, import_util.isArray)(obj)) {
        obj = computeExpression(obj, expr, options);
        expr = null;
    }
    (0, import_util.assert)((0, import_util.isArray)(obj), `arguments must resolve to array for ${operator}.`);
    return callAccumulator(obj, expr, options.update(null, options.local));
}
const REDACT_ACTIONS = [
    "$$KEEP",
    "$$PRUNE",
    "$$DESCEND"
];
function redact(obj, expr, options) {
    const action = computeValue(obj, expr, null, options);
    switch(action){
        case "$$KEEP":
            return obj;
        case "$$PRUNE":
            return void 0;
        case "$$DESCEND":
            {
                if (!(0, import_util.has)(expr, "$cond")) return obj;
                const output = {};
                for (const [key, value] of Object.entries(obj)){
                    if ((0, import_util.isArray)(value)) {
                        const res = new Array();
                        for (let elem of value){
                            if ((0, import_util.isObject)(elem)) {
                                elem = redact(elem, expr, options.update(elem));
                            }
                            if (!(0, import_util.isNil)(elem)) res.push(elem);
                        }
                        output[key] = res;
                    } else if ((0, import_util.isObject)(value)) {
                        const res = redact(value, expr, options.update(value));
                        if (!(0, import_util.isNil)(res)) output[key] = res;
                    } else {
                        output[key] = value;
                    }
                }
                return output;
            }
        default:
            return action;
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ComputeOptions,
    Context,
    OperatorType,
    ProcessingMode,
    computeValue,
    getOperator,
    initOptions,
    redact,
    useOperators
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/and.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var and_exports = {};
__export(and_exports, {
    $and: ()=>$and
});
module.exports = __toCommonJS(and_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $and = (obj, expr, options)=>{
    const value = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_util.truthy)(value, options.useStrictMode) && value.every((v)=>(0, import_util.truthy)(v, options.useStrictMode));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $and
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/not.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var not_exports = {};
__export(not_exports, {
    $not: ()=>$not
});
module.exports = __toCommonJS(not_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $not = (obj, expr, options)=>{
    const booleanExpr = (0, import_util.ensureArray)(expr);
    if (booleanExpr.length == 0) return false;
    (0, import_util.assert)(booleanExpr.length == 1, "Expression $not takes exactly 1 argument");
    return !(0, import_core.computeValue)(obj, booleanExpr[0], null, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $not
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/or.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var or_exports = {};
__export(or_exports, {
    $or: ()=>$or
});
module.exports = __toCommonJS(or_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $or = (obj, expr, options)=>{
    const value = (0, import_core.computeValue)(obj, expr, null, options);
    const strict = options.useStrictMode;
    return (0, import_util.truthy)(value, strict) && value.some((v)=>(0, import_util.truthy)(v, strict));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $or
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var boolean_exports = {};
module.exports = __toCommonJS(boolean_exports);
__reExport(boolean_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/and.js [app-ssr] (ecmascript)"), module.exports);
__reExport(boolean_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/not.js [app-ssr] (ecmascript)"), module.exports);
__reExport(boolean_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/or.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/and.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/not.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/or.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/cmp.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var cmp_exports = {};
__export(cmp_exports, {
    $cmp: ()=>$cmp
});
module.exports = __toCommonJS(cmp_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $cmp = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(args) && args.length == 2, "$cmp: expression must resolve to array of size 2.");
    return (0, import_util.compare)(args[0], args[1]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $cmp
});
}}),
"[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lazy_exports = {};
__export(lazy_exports, {
    Iterator: ()=>Iterator,
    Lazy: ()=>Lazy,
    concat: ()=>concat
});
module.exports = __toCommonJS(lazy_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
function Lazy(source) {
    return source instanceof Iterator ? source : new Iterator(source);
}
function concat(...iterators) {
    let index = 0;
    return Lazy(()=>{
        while(index < iterators.length){
            const o = iterators[index].next();
            if (!o.done) return o;
            index++;
        }
        return {
            done: true
        };
    });
}
function isGenerator(o) {
    return !!o && typeof o === "object" && o?.next instanceof Function;
}
function dropItem(array, i) {
    const rest = array.slice(i + 1);
    array.splice(i);
    Array.prototype.push.apply(array, rest);
}
const DONE = new Error();
var Action = /* @__PURE__ */ ((Action2)=>{
    Action2[Action2["MAP"] = 0] = "MAP";
    Action2[Action2["FILTER"] = 1] = "FILTER";
    Action2[Action2["TAKE"] = 2] = "TAKE";
    Action2[Action2["DROP"] = 3] = "DROP";
    return Action2;
})(Action || {});
function createCallback(nextFn, iteratees, buffer) {
    let done = false;
    let index = -1;
    let bufferIndex = 0;
    return function(storeResult) {
        try {
            outer: while(!done){
                let o = nextFn();
                index++;
                let i = -1;
                const size = iteratees.length;
                let innerDone = false;
                while(++i < size){
                    const r = iteratees[i];
                    switch(r.action){
                        case 0 /* MAP */ :
                            o = r.func(o, index);
                            break;
                        case 1 /* FILTER */ :
                            if (!r.func(o, index)) continue outer;
                            break;
                        case 2 /* TAKE */ :
                            --r.count;
                            if (!r.count) innerDone = true;
                            break;
                        case 3 /* DROP */ :
                            --r.count;
                            if (!r.count) dropItem(iteratees, i);
                            continue outer;
                        default:
                            break outer;
                    }
                }
                done = innerDone;
                if (storeResult) {
                    buffer[bufferIndex++] = o;
                } else {
                    return {
                        value: o,
                        done: false
                    };
                }
            }
        } catch (e) {
            if (e !== DONE) throw e;
        }
        done = true;
        return {
            done
        };
    };
}
class Iterator {
    /**
   * @param {*} source An iterable object or function.
   *    Array - return one element per cycle
   *    Object{next:Function} - call next() for the next value (this also handles generator functions)
   *    Function - call to return the next value
   * @param {Function} fn An optional transformation function
   */ constructor(source){
        this.#iteratees = [];
        this.#yieldedValues = [];
        this.isDone = false;
        let nextVal;
        if (source instanceof Function) {
            source = {
                next: source
            };
        }
        if (isGenerator(source)) {
            const src = source;
            nextVal = ()=>{
                const o = src.next();
                if (o.done) throw DONE;
                return o.value;
            };
        } else if ((0, import_util.isArray)(source)) {
            const data = source;
            const size = data.length;
            let index = 0;
            nextVal = ()=>{
                if (index < size) return data[index++];
                throw DONE;
            };
        } else if (!(source instanceof Function)) {
            throw new import_util.MingoError(`Lazy must be initialized with an array, generator, or function.`);
        }
        this.#getNext = createCallback(nextVal, this.#iteratees, this.#yieldedValues);
    }
    #iteratees;
    #yieldedValues;
    #getNext;
    /**
   * Add an iteratee to this lazy sequence
   */ push(action, value) {
        if (typeof value === "function") {
            this.#iteratees.push({
                action,
                func: value
            });
        } else if (typeof value === "number") {
            this.#iteratees.push({
                action,
                count: value
            });
        }
        return this;
    }
    next() {
        return this.#getNext();
    }
    // Iteratees methods
    /**
   * Transform each item in the sequence to a new value
   * @param {Function} f
   */ map(f) {
        return this.push(0 /* MAP */ , f);
    }
    /**
   * Select only items matching the given predicate
   * @param {Function} pred
   */ filter(predicate) {
        return this.push(1 /* FILTER */ , predicate);
    }
    /**
   * Take given numbe for values from sequence
   * @param {Number} n A number greater than 0
   */ take(n) {
        return n > 0 ? this.push(2 /* TAKE */ , n) : this;
    }
    /**
   * Drop a number of values from the sequence
   * @param {Number} n Number of items to drop greater than 0
   */ drop(n) {
        return n > 0 ? this.push(3 /* DROP */ , n) : this;
    }
    // Transformations
    /**
   * Returns a new lazy object with results of the transformation
   * The entire sequence is realized.
   *
   * @param {Callback<Source, Any[]>} fn Tranform function of type (Array) => (Any)
   */ transform(fn) {
        const self = this;
        let iter;
        return Lazy(()=>{
            if (!iter) {
                iter = Lazy(fn(self.value()));
            }
            return iter.next();
        });
    }
    // Terminal methods
    /**
   * Returns the fully realized values of the iterators.
   * The return value will be an array unless `lazy.first()` was used.
   * The realized values are cached for subsequent calls.
   */ value() {
        if (!this.isDone) {
            this.isDone = this.#getNext(true).done;
        }
        return this.#yieldedValues;
    }
    /**
   * Execute the funcion for each value. Will stop when an execution returns false.
   * @param {Function} f
   * @returns {Boolean} false iff `f` return false for AnyVal execution, otherwise true
   */ each(f) {
        for(;;){
            const o = this.next();
            if (o.done) break;
            if (f(o.value) === false) return false;
        }
        return true;
    }
    /**
   * Returns the reduction of sequence according the reducing function
   *
   * @param {*} f a reducing function
   * @param {*} initialValue
   */ reduce(f, initialValue) {
        let o = this.next();
        if (initialValue === void 0 && !o.done) {
            initialValue = o.value;
            o = this.next();
        }
        while(!o.done){
            initialValue = f(initialValue, o.value);
            o = this.next();
        }
        return initialValue;
    }
    /**
   * Returns the number of matched items in the sequence
   */ size() {
        return this.reduce((acc, _)=>++acc, 0);
    }
    [Symbol.iterator]() {
        return this;
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    Iterator,
    Lazy,
    concat
});
}}),
"[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var aggregator_exports = {};
__export(aggregator_exports, {
    Aggregator: ()=>Aggregator
});
module.exports = __toCommonJS(aggregator_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
class Aggregator {
    #pipeline;
    #options;
    constructor(pipeline, options){
        this.#pipeline = pipeline;
        this.#options = (0, import_core.initOptions)(options);
    }
    /**
   * Returns an {@link Iterator} for lazy evaluation of the pipeline.
   *
   * @param {*} collection An array or iterator object
   * @returns {Iterator} an iterator object
   */ stream(collection, options) {
        let iterator = (0, import_lazy.Lazy)(collection);
        const opts = options ?? this.#options;
        const mode = opts.processingMode;
        if (mode == import_core.ProcessingMode.CLONE_ALL || mode == import_core.ProcessingMode.CLONE_INPUT) {
            iterator.map(import_util.cloneDeep);
        }
        const stages = new Array();
        if (!(0, import_util.isEmpty)(this.#pipeline)) {
            for (const operator of this.#pipeline){
                const operatorKeys = Object.keys(operator);
                const opName = operatorKeys[0];
                const call = (0, import_core.getOperator)("pipeline", opName, opts);
                (0, import_util.assert)(operatorKeys.length === 1 && !!call, `invalid pipeline operator ${opName}`);
                stages.push(opName);
                iterator = call(iterator, operator[opName], opts);
            }
        }
        if (mode == import_core.ProcessingMode.CLONE_OUTPUT || mode == import_core.ProcessingMode.CLONE_ALL && !!(0, import_util.intersection)([
            [
                "$group",
                "$unwind"
            ],
            stages
        ]).length) {
            iterator.map(import_util.cloneDeep);
        }
        return iterator;
    }
    /**
   * Return the results of the aggregation as an array.
   *
   * @param collection
   */ run(collection, options) {
        return this.stream(collection, options).value();
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    Aggregator
});
}}),
"[project]/node_modules/mingo/dist/cjs/cursor.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var cursor_exports = {};
__export(cursor_exports, {
    Cursor: ()=>Cursor
});
module.exports = __toCommonJS(cursor_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
class Cursor {
    #source;
    #predicate;
    #projection;
    #options;
    #operators = [];
    #result = null;
    #buffer = [];
    constructor(source, predicate, projection, options){
        this.#source = source;
        this.#predicate = predicate;
        this.#projection = projection;
        this.#options = options;
    }
    /** Returns the iterator from running the query */ fetch() {
        if (this.#result) return this.#result;
        if ((0, import_util.isObject)(this.#projection)) {
            this.#operators.push({
                $project: this.#projection
            });
        }
        this.#result = (0, import_lazy.Lazy)(this.#source).filter(this.#predicate);
        if (this.#operators.length > 0) {
            this.#result = new import_aggregator.Aggregator(this.#operators, this.#options).stream(this.#result);
        }
        return this.#result;
    }
    /** Returns an iterator with the buffered data included */ fetchAll() {
        const buffered = (0, import_lazy.Lazy)([
            ...this.#buffer
        ]);
        this.#buffer = [];
        return (0, import_lazy.concat)(buffered, this.fetch());
    }
    /**
   * Return remaining objects in the cursor as an array. This method exhausts the cursor
   * @returns {Array}
   */ all() {
        return this.fetchAll().value();
    }
    /**
   * Returns the number of objects return in the cursor. This method exhausts the cursor
   * @returns {Number}
   */ count() {
        return this.all().length;
    }
    /**
   * Returns a cursor that begins returning results only after passing or skipping a number of documents.
   * @param {Number} n the number of results to skip.
   * @return {Cursor} Returns the cursor, so you can chain this call.
   */ skip(n) {
        this.#operators.push({
            $skip: n
        });
        return this;
    }
    /**
   * Constrains the size of a cursor's result set.
   * @param {Number} n the number of results to limit to.
   * @return {Cursor} Returns the cursor, so you can chain this call.
   */ limit(n) {
        this.#operators.push({
            $limit: n
        });
        return this;
    }
    /**
   * Returns results ordered according to a sort specification.
   * @param {AnyObject} modifier an object of key and values specifying the sort order. 1 for ascending and -1 for descending
   * @return {Cursor} Returns the cursor, so you can chain this call.
   */ sort(modifier) {
        this.#operators.push({
            $sort: modifier
        });
        return this;
    }
    /**
   * Specifies the collation for the cursor returned by the `mingo.Query.find`
   * @param {*} spec
   */ collation(spec) {
        this.#options = {
            ...this.#options,
            collation: spec
        };
        return this;
    }
    /**
   * Returns the next document in a cursor.
   * @returns {AnyObject | Boolean}
   */ next() {
        if (this.#buffer.length > 0) {
            return this.#buffer.pop();
        }
        const o = this.fetch().next();
        if (o.done) return;
        return o.value;
    }
    /**
   * Returns true if the cursor has documents and can be iterated.
   * @returns {boolean}
   */ hasNext() {
        if (this.#buffer.length > 0) return true;
        const o = this.fetch().next();
        if (o.done) return false;
        this.#buffer.push(o.value);
        return true;
    }
    /**
   * Applies a function to each document in a cursor and collects the return values in an array.
   * @param fn
   * @returns {Array}
   */ map(fn) {
        return this.all().map(fn);
    }
    /**
   * Applies a JavaScript function for every document in a cursor.
   * @param fn
   */ forEach(fn) {
        this.all().forEach(fn);
    }
    [Symbol.iterator]() {
        return this.fetchAll();
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    Cursor
});
}}),
"[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var query_exports = {};
__export(query_exports, {
    Query: ()=>Query
});
module.exports = __toCommonJS(query_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_cursor = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/cursor.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const TOP_LEVEL_OPS = new Set(Array.from([
    "$and",
    "$or",
    "$nor",
    "$expr",
    "$jsonSchema"
]));
class Query {
    #compiled;
    #options;
    #condition;
    constructor(condition, options){
        this.#condition = condition;
        this.#options = (0, import_core.initOptions)(options);
        this.#compiled = [];
        this.compile();
    }
    compile() {
        (0, import_util.assert)((0, import_util.isObject)(this.#condition), `query criteria must be an object: ${JSON.stringify(this.#condition)}`);
        const whereOperator = {};
        for (const [field, expr] of Object.entries(this.#condition)){
            if ("$where" === field) {
                Object.assign(whereOperator, {
                    field,
                    expr
                });
            } else if (TOP_LEVEL_OPS.has(field)) {
                this.processOperator(field, field, expr);
            } else {
                (0, import_util.assert)(!(0, import_util.isOperator)(field), `unknown top level operator: ${field}`);
                for (const [operator, val] of Object.entries((0, import_util.normalize)(expr))){
                    this.processOperator(field, operator, val);
                }
            }
            if (whereOperator.field) {
                this.processOperator(whereOperator.field, whereOperator.field, whereOperator.expr);
            }
        }
    }
    processOperator(field, operator, value) {
        const call = (0, import_core.getOperator)("query", operator, this.#options);
        if (!call) {
            throw new import_util.MingoError(`unknown query operator ${operator}`);
        }
        const fn = call(field, value, this.#options);
        this.#compiled.push(fn);
    }
    /**
   * Checks if the object passes the query criteria. Returns true if so, false otherwise.
   *
   * @param obj The object to test
   * @returns {boolean} True or false
   */ test(obj) {
        for(let i = 0, len = this.#compiled.length; i < len; i++){
            if (!this.#compiled[i](obj)) {
                return false;
            }
        }
        return true;
    }
    /**
   * Returns a cursor to select matching documents from the input source.
   *
   * @param source A source providing a sequence of documents
   * @param projection An optional projection criteria
   * @returns {Cursor} A Cursor for iterating over the results
   */ find(collection, projection) {
        return new import_cursor.Cursor(collection, (x)=>this.test(x), projection || {}, this.#options);
    }
    /**
   * Remove matched documents from the collection returning the remainder
   *
   * @param collection An array of documents
   * @returns {Array} A new array with matching elements removed
   */ remove(collection) {
        return collection.reduce((acc, obj)=>{
            if (!this.test(obj)) acc.push(obj);
            return acc;
        }, []);
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    Query
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var predicates_exports = {};
__export(predicates_exports, {
    $all: ()=>$all,
    $elemMatch: ()=>$elemMatch,
    $eq: ()=>$eq,
    $exists: ()=>$exists,
    $gt: ()=>$gt,
    $gte: ()=>$gte,
    $in: ()=>$in,
    $lt: ()=>$lt,
    $lte: ()=>$lte,
    $mod: ()=>$mod,
    $ne: ()=>$ne,
    $nin: ()=>$nin,
    $regex: ()=>$regex,
    $size: ()=>$size,
    $type: ()=>$type,
    createExpressionOperator: ()=>createExpressionOperator,
    createQueryOperator: ()=>createQueryOperator
});
module.exports = __toCommonJS(predicates_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
function createQueryOperator(predicate) {
    const f = (selector, value, options)=>{
        const opts = {
            unwrapArray: true
        };
        const depth = Math.max(1, selector.split(".").length - 1);
        return (obj)=>{
            const lhs = (0, import_util.resolve)(obj, selector, opts);
            return predicate(lhs, value, {
                ...options,
                depth
            });
        };
    };
    f.op = "query";
    return f;
}
function createExpressionOperator(predicate) {
    return (obj, expr, options)=>{
        const args = (0, import_core.computeValue)(obj, expr, null, options);
        return predicate(...args);
    };
}
function $eq(a, b, options) {
    if ((0, import_util.isEqual)(a, b)) return true;
    if ((0, import_util.isNil)(a) && (0, import_util.isNil)(b)) return true;
    if ((0, import_util.isArray)(a)) {
        return a.some((v)=>(0, import_util.isEqual)(v, b)) || (0, import_util.flatten)(a, options?.depth).some((v)=>(0, import_util.isEqual)(v, b));
    }
    return false;
}
function $ne(a, b, options) {
    return !$eq(a, b, options);
}
function $in(a, b, options) {
    if ((0, import_util.isNil)(a)) return b.some((v)=>v === null);
    return (0, import_util.intersection)([
        (0, import_util.ensureArray)(a),
        b
    ], options?.hashFunction).length > 0;
}
function $nin(a, b, options) {
    return !$in(a, b, options);
}
function $lt(a, b, _options) {
    return compare(a, b, (x, y)=>(0, import_util.compare)(x, y) < 0);
}
function $lte(a, b, _options) {
    return compare(a, b, (x, y)=>(0, import_util.compare)(x, y) <= 0);
}
function $gt(a, b, _options) {
    return compare(a, b, (x, y)=>(0, import_util.compare)(x, y) > 0);
}
function $gte(a, b, _options) {
    return compare(a, b, (x, y)=>(0, import_util.compare)(x, y) >= 0);
}
function $mod(a, b, _options) {
    return (0, import_util.ensureArray)(a).some((x)=>b.length === 2 && x % b[0] === b[1]);
}
function $regex(a, b, options) {
    const lhs = (0, import_util.ensureArray)(a);
    const match = (x)=>(0, import_util.isString)(x) && (0, import_util.truthy)(b.exec(x), options?.useStrictMode);
    return lhs.some(match) || (0, import_util.flatten)(lhs, 1).some(match);
}
function $exists(a, b, _options) {
    return (b === false || b === 0) && a === void 0 || (b === true || b === 1) && a !== void 0;
}
function $all(values, queries, options) {
    if (!(0, import_util.isArray)(values) || !(0, import_util.isArray)(queries) || !values.length || !queries.length) {
        return false;
    }
    let matched = true;
    for (const query of queries){
        if (!matched) break;
        if ((0, import_util.isObject)(query) && Object.keys(query).includes("$elemMatch")) {
            matched = $elemMatch(values, query["$elemMatch"], options);
        } else if ((0, import_util.isRegExp)(query)) {
            matched = values.some((s)=>typeof s === "string" && query.test(s));
        } else {
            matched = values.some((v)=>(0, import_util.isEqual)(query, v));
        }
    }
    return matched;
}
function $size(a, b, _options) {
    return Array.isArray(a) && a.length === b;
}
function isNonBooleanOperator(name) {
    return (0, import_util.isOperator)(name) && [
        "$and",
        "$or",
        "$nor"
    ].indexOf(name) === -1;
}
function $elemMatch(a, b, options) {
    if ((0, import_util.isArray)(a) && !(0, import_util.isEmpty)(a)) {
        let format = (x)=>x;
        let criteria = b;
        if (Object.keys(b).every(isNonBooleanOperator)) {
            criteria = {
                temp: b
            };
            format = (x)=>({
                    temp: x
                });
        }
        const query = new import_query.Query(criteria, options);
        for(let i = 0, len = a.length; i < len; i++){
            if (query.test(format(a[i]))) {
                return true;
            }
        }
    }
    return false;
}
const isNull = (a)=>a === null;
const compareFuncs = {
    array: import_util.isArray,
    boolean: import_util.isBoolean,
    bool: import_util.isBoolean,
    date: import_util.isDate,
    number: import_util.isNumber,
    int: import_util.isNumber,
    long: import_util.isNumber,
    double: import_util.isNumber,
    decimal: import_util.isNumber,
    null: isNull,
    object: import_util.isObject,
    regexp: import_util.isRegExp,
    regex: import_util.isRegExp,
    string: import_util.isString,
    // added for completeness
    undefined: import_util.isNil,
    // deprecated
    function: (_)=>{
        throw new import_util.MingoError("unsupported type key `function`.");
    },
    // Mongo identifiers
    1: import_util.isNumber,
    //double
    2: import_util.isString,
    3: import_util.isObject,
    4: import_util.isArray,
    6: import_util.isNil,
    // deprecated
    8: import_util.isBoolean,
    9: import_util.isDate,
    10: isNull,
    11: import_util.isRegExp,
    16: import_util.isNumber,
    //int
    18: import_util.isNumber,
    //long
    19: import_util.isNumber
};
function compareType(a, b, _) {
    const f = compareFuncs[b];
    return f ? f(a) : false;
}
function $type(a, b, options) {
    return (0, import_util.isArray)(b) ? b.findIndex((t)=>compareType(a, t, options)) >= 0 : compareType(a, b, options);
}
function compare(a, b, f) {
    return (0, import_util.ensureArray)(a).some((x)=>(0, import_util.typeOf)(x) === (0, import_util.typeOf)(b) && f(x, b));
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $all,
    $elemMatch,
    $eq,
    $exists,
    $gt,
    $gte,
    $in,
    $lt,
    $lte,
    $mod,
    $ne,
    $nin,
    $regex,
    $size,
    $type,
    createExpressionOperator,
    createQueryOperator
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/eq.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var eq_exports = {};
__export(eq_exports, {
    $eq: ()=>$eq
});
module.exports = __toCommonJS(eq_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $eq = (0, import_predicates.createExpressionOperator)(import_predicates.$eq);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $eq
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/gt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var gt_exports = {};
__export(gt_exports, {
    $gt: ()=>$gt
});
module.exports = __toCommonJS(gt_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $gt = (0, import_predicates.createExpressionOperator)(import_predicates.$gt);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $gt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/gte.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var gte_exports = {};
__export(gte_exports, {
    $gte: ()=>$gte
});
module.exports = __toCommonJS(gte_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $gte = (0, import_predicates.createExpressionOperator)(import_predicates.$gte);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $gte
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/lt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lt_exports = {};
__export(lt_exports, {
    $lt: ()=>$lt
});
module.exports = __toCommonJS(lt_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $lt = (0, import_predicates.createExpressionOperator)(import_predicates.$lt);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/lte.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lte_exports = {};
__export(lte_exports, {
    $lte: ()=>$lte
});
module.exports = __toCommonJS(lte_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $lte = (0, import_predicates.createExpressionOperator)(import_predicates.$lte);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lte
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/ne.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var ne_exports = {};
__export(ne_exports, {
    $ne: ()=>$ne
});
module.exports = __toCommonJS(ne_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $ne = (0, import_predicates.createExpressionOperator)(import_predicates.$ne);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $ne
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var comparison_exports = {};
module.exports = __toCommonJS(comparison_exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/cmp.js [app-ssr] (ecmascript)"), module.exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/eq.js [app-ssr] (ecmascript)"), module.exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/gt.js [app-ssr] (ecmascript)"), module.exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/gte.js [app-ssr] (ecmascript)"), module.exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/lt.js [app-ssr] (ecmascript)"), module.exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/lte.js [app-ssr] (ecmascript)"), module.exports);
__reExport(comparison_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/ne.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/cmp.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/eq.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/gt.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/gte.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/lt.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/lte.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/ne.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/addFields.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var addFields_exports = {};
__export(addFields_exports, {
    $addFields: ()=>$addFields
});
module.exports = __toCommonJS(addFields_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $addFields = (collection, expr, options)=>{
    const newFields = Object.keys(expr);
    if (newFields.length === 0) return collection;
    return collection.map((obj)=>{
        const newObj = {
            ...obj
        };
        for (const field of newFields){
            const newValue = (0, import_core.computeValue)(obj, expr[field], null, options);
            if (newValue !== void 0) {
                (0, import_util.setValue)(newObj, field, newValue);
            } else {
                (0, import_util.removeValue)(newObj, field);
            }
        }
        return newObj;
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $addFields
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/bucket.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bucket_exports = {};
__export(bucket_exports, {
    $bucket: ()=>$bucket
});
module.exports = __toCommonJS(bucket_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $bucket = (collection, expr, options)=>{
    const bounds = [
        ...expr.boundaries
    ];
    const defaultKey = expr.default;
    const lower = bounds[0];
    const upper = bounds[bounds.length - 1];
    const outputExpr = expr.output || {
        count: {
            $sum: 1
        }
    };
    (0, import_util.assert)(bounds.length > 1, "$bucket must specify at least two boundaries.");
    const isValid = bounds.every((v, i)=>i === 0 || (0, import_util.typeOf)(v) === (0, import_util.typeOf)(bounds[i - 1]) && (0, import_util.compare)(v, bounds[i - 1]) > 0);
    (0, import_util.assert)(isValid, `$bucket: bounds must be of same type and in ascending order`);
    if (!(0, import_util.isNil)(defaultKey) && (0, import_util.typeOf)(defaultKey) === (0, import_util.typeOf)(lower)) {
        (0, import_util.assert)((0, import_util.compare)(defaultKey, upper) >= 0 || (0, import_util.compare)(defaultKey, lower) < 0, "$bucket 'default' expression must be out of boundaries range");
    }
    const createBuckets = ()=>{
        const buckets = /* @__PURE__ */ new Map();
        for(let i = 0; i < bounds.length - 1; i++){
            buckets.set(bounds[i], []);
        }
        if (!(0, import_util.isNil)(defaultKey)) buckets.set(defaultKey, []);
        collection.each((obj)=>{
            const key = (0, import_core.computeValue)(obj, expr.groupBy, null, options);
            if ((0, import_util.isNil)(key) || (0, import_util.compare)(key, lower) < 0 || (0, import_util.compare)(key, upper) >= 0) {
                (0, import_util.assert)(!(0, import_util.isNil)(defaultKey), "$bucket require a default for out of range values");
                buckets.get(defaultKey).push(obj);
            } else {
                (0, import_util.assert)((0, import_util.compare)(key, lower) >= 0 && (0, import_util.compare)(key, upper) < 0, "$bucket 'groupBy' expression must resolve to a value in range of boundaries");
                const index = (0, import_util.findInsertIndex)(bounds, key);
                const boundKey = bounds[Math.max(0, index - 1)];
                buckets.get(boundKey).push(obj);
            }
        });
        bounds.pop();
        if (!(0, import_util.isNil)(defaultKey)) bounds.push(defaultKey);
        (0, import_util.assert)(buckets.size === bounds.length, "bounds and groups must be of equal size.");
        return (0, import_lazy.Lazy)(bounds).map((key)=>{
            return {
                ...(0, import_core.computeValue)(buckets.get(key), outputExpr, null, options),
                _id: key
            };
        });
    };
    let iterator;
    return (0, import_lazy.Lazy)(()=>{
        if (!iterator) iterator = createBuckets();
        return iterator.next();
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bucket
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/bucketAuto.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bucketAuto_exports = {};
__export(bucketAuto_exports, {
    $bucketAuto: ()=>$bucketAuto
});
module.exports = __toCommonJS(bucketAuto_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $bucketAuto = (collection, expr, options)=>{
    const { buckets: bucketCount, groupBy: groupByExpr, output: optOutputExpr, // Available only if the all groupBy values are numeric and none of them are NaN.
    granularity } = expr;
    const outputExpr = optOutputExpr ?? {
        count: {
            $sum: 1
        }
    };
    (0, import_util.assert)(bucketCount > 0, `$bucketAuto: 'buckets' field must be greater than 0, but found: ${bucketCount}`);
    if (granularity) {
        (0, import_util.assert)(/^(POWERSOF2|1-2-5|E(6|12|24|48|96|192)|R(5|10|20|40|80))$/.test(granularity), `$bucketAuto: invalid granularity '${granularity}'.`);
    }
    const keyMap = /* @__PURE__ */ new Map();
    const setKey = !granularity ? (o, k)=>keyMap.set(o, k) : (_, _2)=>{};
    const sorted = collection.map((o)=>{
        const k = (0, import_core.computeValue)(o, groupByExpr, null, options) ?? null;
        (0, import_util.assert)(!granularity || (0, import_util.isNumber)(k), "$bucketAuto: groupBy values must be numeric when granularity is specified.");
        setKey(o, k ?? null);
        return [
            k ?? null,
            o
        ];
    }).value();
    sorted.sort((x, y)=>{
        if ((0, import_util.isNil)(x[0])) return -1;
        if ((0, import_util.isNil)(y[0])) return 1;
        return (0, import_util.compare)(x[0], y[0]);
    });
    let getNext;
    if (!granularity) {
        getNext = granularityDefault(sorted, bucketCount, keyMap);
    } else if (granularity == "POWERSOF2") {
        getNext = granularityPowerOfTwo(sorted, bucketCount);
    } else {
        getNext = granularityPreferredSeries(sorted, bucketCount, granularity);
    }
    let terminate = false;
    return (0, import_lazy.Lazy)(()=>{
        if (terminate) return {
            done: true
        };
        const { min, max, bucket, done } = getNext();
        terminate = done;
        const outFields = (0, import_core.computeValue)(bucket, outputExpr, null, options);
        for (const [k, v] of Object.entries(outFields)){
            if ((0, import_util.isArray)(v)) outFields[k] = v.filter((v2)=>v2 !== void 0);
        }
        return {
            done: false,
            value: {
                ...outFields,
                _id: {
                    min,
                    max
                }
            }
        };
    });
};
function granularityDefault(sorted, bucketCount, keyMap) {
    const size = sorted.length;
    const approxBucketSize = Math.max(1, Math.round(sorted.length / bucketCount));
    let index = 0;
    let nBuckets = 0;
    return ()=>{
        const isLastBucket = ++nBuckets == bucketCount;
        const bucket = new Array();
        while(index < size && (isLastBucket || bucket.length < approxBucketSize || index > 0 && (0, import_util.isEqual)(sorted[index - 1][0], sorted[index][0]))){
            bucket.push(sorted[index++][1]);
        }
        const min = keyMap.get(bucket[0]);
        let max;
        if (index < size) {
            max = sorted[index][0];
        } else {
            max = keyMap.get(bucket[bucket.length - 1]);
        }
        (0, import_util.assert)((0, import_util.isNil)(max) || (0, import_util.isNil)(min) || min <= max, `error: $bucketAuto boundary must be in order.`);
        return {
            min,
            max,
            bucket,
            done: index >= size
        };
    };
}
function granularityPowerOfTwo(sorted, bucketCount) {
    const size = sorted.length;
    const approxBucketSize = Math.max(1, Math.round(sorted.length / bucketCount));
    const roundUp2 = (n)=>n === 0 ? 0 : 2 ** (Math.floor(Math.log2(n)) + 1);
    let index = 0;
    let min = 0;
    let max = 0;
    return ()=>{
        const bucket = new Array();
        const boundValue = roundUp2(max);
        min = index > 0 ? max : 0;
        while(bucket.length < approxBucketSize && index < size && (max === 0 || sorted[index][0] < boundValue)){
            bucket.push(sorted[index++][1]);
        }
        max = max == 0 ? roundUp2(sorted[index - 1][0]) : boundValue;
        while(index < size && sorted[index][0] < max){
            bucket.push(sorted[index++][1]);
        }
        return {
            min,
            max,
            bucket,
            done: index >= size
        };
    };
}
const PREFERRED_NUMBERS = Object.freeze({
    // "Least rounded" Renard number series, taken from Wikipedia page on preferred
    // numbers: https://en.wikipedia.org/wiki/Preferred_number#Renard_numbers
    R5: [
        10,
        16,
        25,
        40,
        63
    ],
    R10: [
        100,
        125,
        160,
        200,
        250,
        315,
        400,
        500,
        630,
        800
    ],
    R20: [
        100,
        112,
        125,
        140,
        160,
        180,
        200,
        224,
        250,
        280,
        315,
        355,
        400,
        450,
        500,
        560,
        630,
        710,
        800,
        900
    ],
    R40: [
        100,
        106,
        112,
        118,
        125,
        132,
        140,
        150,
        160,
        170,
        180,
        190,
        200,
        212,
        224,
        236,
        250,
        265,
        280,
        300,
        315,
        355,
        375,
        400,
        425,
        450,
        475,
        500,
        530,
        560,
        600,
        630,
        670,
        710,
        750,
        800,
        850,
        900,
        950
    ],
    R80: [
        103,
        109,
        115,
        122,
        128,
        136,
        145,
        155,
        165,
        175,
        185,
        195,
        206,
        218,
        230,
        243,
        258,
        272,
        290,
        307,
        325,
        345,
        365,
        387,
        412,
        437,
        462,
        487,
        515,
        545,
        575,
        615,
        650,
        690,
        730,
        775,
        825,
        875,
        925,
        975
    ],
    // https://en.wikipedia.org/wiki/Preferred_number#1-2-5_series
    "1-2-5": [
        10,
        20,
        50
    ],
    // E series, taken from Wikipedia page on preferred numbers:
    // https://en.wikipedia.org/wiki/Preferred_number#E_series
    E6: [
        10,
        15,
        22,
        33,
        47,
        68
    ],
    E12: [
        10,
        12,
        15,
        18,
        22,
        27,
        33,
        39,
        47,
        56,
        68,
        82
    ],
    E24: [
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        20,
        22,
        24,
        27,
        30,
        33,
        36,
        39,
        43,
        47,
        51,
        56,
        62,
        68,
        75,
        82,
        91
    ],
    E48: [
        100,
        105,
        110,
        115,
        121,
        127,
        133,
        140,
        147,
        154,
        162,
        169,
        178,
        187,
        196,
        205,
        215,
        226,
        237,
        249,
        261,
        274,
        287,
        301,
        316,
        332,
        348,
        365,
        383,
        402,
        422,
        442,
        464,
        487,
        511,
        536,
        562,
        590,
        619,
        649,
        681,
        715,
        750,
        787,
        825,
        866,
        909,
        953
    ],
    E96: [
        100,
        102,
        105,
        107,
        110,
        113,
        115,
        118,
        121,
        124,
        127,
        130,
        133,
        137,
        140,
        143,
        147,
        150,
        154,
        158,
        162,
        165,
        169,
        174,
        178,
        182,
        187,
        191,
        196,
        200,
        205,
        210,
        215,
        221,
        226,
        232,
        237,
        243,
        249,
        255,
        261,
        267,
        274,
        280,
        287,
        294,
        301,
        309,
        316,
        324,
        332,
        340,
        348,
        357,
        365,
        374,
        383,
        392,
        402,
        412,
        422,
        432,
        442,
        453,
        464,
        475,
        487,
        499,
        511,
        523,
        536,
        549,
        562,
        576,
        590,
        604,
        619,
        634,
        649,
        665,
        681,
        698,
        715,
        732,
        750,
        768,
        787,
        806,
        825,
        845,
        866,
        887,
        909,
        931,
        953,
        976
    ],
    E192: [
        100,
        101,
        102,
        104,
        105,
        106,
        107,
        109,
        110,
        111,
        113,
        114,
        115,
        117,
        118,
        120,
        121,
        123,
        124,
        126,
        127,
        129,
        130,
        132,
        133,
        135,
        137,
        138,
        140,
        142,
        143,
        145,
        147,
        149,
        150,
        152,
        154,
        156,
        158,
        160,
        162,
        164,
        165,
        167,
        169,
        172,
        174,
        176,
        178,
        180,
        182,
        184,
        187,
        189,
        191,
        193,
        196,
        198,
        200,
        203,
        205,
        208,
        210,
        213,
        215,
        218,
        221,
        223,
        226,
        229,
        232,
        234,
        237,
        240,
        243,
        246,
        249,
        252,
        255,
        258,
        261,
        264,
        267,
        271,
        274,
        277,
        280,
        284,
        287,
        291,
        294,
        298,
        301,
        305,
        309,
        312,
        316,
        320,
        324,
        328,
        332,
        336,
        340,
        344,
        348,
        352,
        357,
        361,
        365,
        370,
        374,
        379,
        383,
        388,
        392,
        397,
        402,
        407,
        412,
        417,
        422,
        427,
        432,
        437,
        442,
        448,
        453,
        459,
        464,
        470,
        475,
        481,
        487,
        493,
        499,
        505,
        511,
        517,
        523,
        530,
        536,
        542,
        549,
        556,
        562,
        569,
        576,
        583,
        590,
        597,
        604,
        612,
        619,
        626,
        634,
        642,
        649,
        657,
        665,
        673,
        681,
        690,
        698,
        706,
        715,
        723,
        732,
        741,
        750,
        759,
        768,
        777,
        787,
        796,
        806,
        816,
        825,
        835,
        845,
        856,
        866,
        876,
        887,
        898,
        909,
        920,
        931,
        942,
        953,
        965,
        976,
        988
    ]
});
const roundUp = (n, granularity)=>{
    if (n == 0) return 0;
    const series = PREFERRED_NUMBERS[granularity];
    const first = series[0];
    const last = series[series.length - 1];
    let multiplier = 1;
    while(n >= last * multiplier){
        multiplier *= 10;
    }
    let previousMin = 0;
    while(n < first * multiplier){
        previousMin = first * multiplier;
        multiplier /= 10;
        if (n >= last * multiplier) {
            return previousMin;
        }
    }
    (0, import_util.assert)(n >= first * multiplier && n < last * multiplier, "$bucketAuto: number out of range of series.");
    const i = (0, import_util.findInsertIndex)(series, n, (a, b)=>{
        b *= multiplier;
        if (a < b) return -1;
        if (a > b) return 1;
        return 0;
    });
    const seriesNumber = series[i] * multiplier;
    return n == seriesNumber ? series[i + 1] * multiplier : seriesNumber;
};
function granularityPreferredSeries(sorted, bucketCount, granularity) {
    const size = sorted.length;
    const approxBucketSize = Math.max(1, Math.round(sorted.length / bucketCount));
    let index = 0;
    let nBuckets = 0;
    let min = 0;
    let max = 0;
    return ()=>{
        const isLastBucket = ++nBuckets == bucketCount;
        const bucket = new Array();
        min = index > 0 ? max : 0;
        while(index < size && (isLastBucket || bucket.length < approxBucketSize)){
            bucket.push(sorted[index++][1]);
        }
        max = roundUp(sorted[index - 1][0], granularity);
        const nItems = bucket.length;
        while(index < size && (isLastBucket || sorted[index][0] < max)){
            bucket.push(sorted[index++][1]);
        }
        if (nItems != bucket.length) {
            max = roundUp(sorted[index - 1][0], granularity);
        }
        (0, import_util.assert)(min < max, `$bucketAuto: ${min} < ${max}.`);
        return {
            min,
            max,
            bucket,
            done: index >= size
        };
    };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bucketAuto
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/count.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var count_exports = {};
__export(count_exports, {
    $count: ()=>$count
});
module.exports = __toCommonJS(count_exports);
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $count = (collection, expr, _options)=>{
    (0, import_util.assert)((0, import_util.isString)(expr) && !(0, import_util.isEmpty)(expr) && expr.indexOf(".") === -1 && expr.trim()[0] !== "$", "Invalid expression value for $count");
    return (0, import_lazy.Lazy)([
        {
            [expr]: collection.size()
        }
    ]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $count
});
}}),
"[project]/node_modules/mingo/dist/cjs/types.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var types_exports = {};
__export(types_exports, {
    TIME_UNITS: ()=>TIME_UNITS
});
module.exports = __toCommonJS(types_exports);
const TIME_UNITS = [
    "year",
    "quarter",
    "month",
    "week",
    "day",
    "hour",
    "minute",
    "second",
    "millisecond"
];
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    TIME_UNITS
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    DATE_FORMAT: ()=>DATE_FORMAT,
    DATE_PART_INTERVAL: ()=>DATE_PART_INTERVAL,
    DATE_SYM_TABLE: ()=>DATE_SYM_TABLE,
    DAYS_OF_WEEK: ()=>DAYS_OF_WEEK,
    DAYS_OF_WEEK_SET: ()=>DAYS_OF_WEEK_SET,
    DAYS_PER_WEEK: ()=>DAYS_PER_WEEK,
    LEAP_YEAR_REF_POINT: ()=>LEAP_YEAR_REF_POINT,
    MILLIS_PER_DAY: ()=>MILLIS_PER_DAY,
    MINUTES_PER_HOUR: ()=>MINUTES_PER_HOUR,
    TIMEUNIT_IN_MILLIS: ()=>TIMEUNIT_IN_MILLIS,
    adjustDate: ()=>adjustDate,
    computeDate: ()=>computeDate,
    dateAdd: ()=>dateAdd,
    dateDiffDay: ()=>dateDiffDay,
    dateDiffHour: ()=>dateDiffHour,
    dateDiffMonth: ()=>dateDiffMonth,
    dateDiffQuarter: ()=>dateDiffQuarter,
    dateDiffWeek: ()=>dateDiffWeek,
    dateDiffYear: ()=>dateDiffYear,
    dayOfYear: ()=>dayOfYear,
    daysBetweenYears: ()=>daysBetweenYears,
    daysInMonth: ()=>daysInMonth,
    daysInYear: ()=>daysInYear,
    formatTimezone: ()=>formatTimezone,
    isLeapYear: ()=>isLeapYear,
    isoWeek: ()=>isoWeek,
    isoWeekYear: ()=>isoWeekYear,
    isoWeekday: ()=>isoWeekday,
    padDigits: ()=>padDigits,
    parseTimezone: ()=>parseTimezone
});
module.exports = __toCommonJS(internal_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const LEAP_YEAR_REF_POINT = -1e9;
const DAYS_PER_WEEK = 7;
const isLeapYear = (y)=>(y & 3) == 0 && (y % 100 != 0 || y % 400 == 0);
const DAYS_IN_YEAR = [
    365,
    366
];
const daysInYear = (year)=>DAYS_IN_YEAR[+isLeapYear(year)];
const DAYS_IN_MONTH = [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
];
const daysInMonth = (d)=>DAYS_IN_MONTH[d.getUTCMonth()] + Number(d.getUTCMonth() === 1 && isLeapYear(d.getUTCFullYear()));
const YEAR_DAYS_OFFSET = [
    [
        0,
        31,
        59,
        90,
        120,
        151,
        181,
        212,
        243,
        273,
        304,
        334
    ],
    [
        0,
        31,
        60,
        91,
        121,
        152,
        182,
        213,
        244,
        274,
        305,
        335
    ]
];
const dayOfYear = (d)=>YEAR_DAYS_OFFSET[+isLeapYear(d.getUTCFullYear())][d.getUTCMonth()] + d.getUTCDate();
const isoWeekday = (date, startOfWeek = "sun")=>{
    const dow = date.getUTCDay() || 7;
    return (dow - ISO_WEEKDAY_MAP[startOfWeek] + DAYS_PER_WEEK) % DAYS_PER_WEEK;
};
const p = (y)=>(y + Math.floor(y / 4) - Math.floor(y / 100) + Math.floor(y / 400)) % 7;
const weeks = (y)=>52 + Number(p(y) == 4 || p(y - 1) == 3);
function isoWeek(d) {
    const dow = d.getUTCDay() || 7;
    const w = Math.floor((10 + dayOfYear(d) - dow) / 7);
    if (w < 1) return weeks(d.getUTCFullYear() - 1);
    if (w > weeks(d.getUTCFullYear())) return 1;
    return w;
}
function isoWeekYear(d) {
    return d.getUTCFullYear() - Number(d.getUTCMonth() === 0 && d.getUTCDate() == 1 && d.getUTCDay() < 1);
}
const MINUTES_PER_HOUR = 60;
const MILLIS_PER_DAY = 1e3 * 60 * 60 * 24;
const TIMEUNIT_IN_MILLIS = {
    week: MILLIS_PER_DAY * DAYS_PER_WEEK,
    day: MILLIS_PER_DAY,
    hour: 1e3 * 60 * 60,
    minute: 1e3 * 60,
    second: 1e3,
    millisecond: 1
};
const DAYS_OF_WEEK = [
    "monday",
    "mon",
    "tuesday",
    "tue",
    "wednesday",
    "wed",
    "thursday",
    "thu",
    "friday",
    "fri",
    "saturday",
    "sat",
    "sunday",
    "sun"
];
const DAYS_OF_WEEK_SET = new Set(DAYS_OF_WEEK);
const ISO_WEEKDAY_MAP = Object.freeze({
    mon: 1,
    tue: 2,
    wed: 3,
    thu: 4,
    fri: 5,
    sat: 6,
    sun: 7
});
const DATE_FORMAT = "%Y-%m-%dT%H:%M:%S.%LZ";
const DATE_PART_INTERVAL = [
    [
        "year",
        0,
        9999
    ],
    [
        "month",
        1,
        12
    ],
    [
        "day",
        1,
        31
    ],
    [
        "hour",
        0,
        23
    ],
    [
        "minute",
        0,
        59
    ],
    [
        "second",
        0,
        59
    ],
    [
        "millisecond",
        0,
        999
    ]
];
const DATE_SYM_TABLE = Object.freeze({
    "%Y": {
        name: "year",
        padding: 4,
        re: /([0-9]{4})/
    },
    "%G": {
        name: "year",
        padding: 4,
        re: /([0-9]{4})/
    },
    "%m": {
        name: "month",
        padding: 2,
        re: /(0[1-9]|1[012])/
    },
    "%d": {
        name: "day",
        padding: 2,
        re: /(0[1-9]|[12][0-9]|3[01])/
    },
    "%H": {
        name: "hour",
        padding: 2,
        re: /([01][0-9]|2[0-3])/
    },
    "%M": {
        name: "minute",
        padding: 2,
        re: /([0-5][0-9])/
    },
    "%S": {
        name: "second",
        padding: 2,
        re: /([0-5][0-9]|60)/
    },
    "%L": {
        name: "millisecond",
        padding: 3,
        re: /([0-9]{3})/
    },
    "%u": {
        name: "weekday",
        padding: 1,
        re: /([1-7])/
    },
    "%U": {
        name: "week",
        padding: 2,
        re: /([1-4][0-9]?|5[0-3]?)/
    },
    "%V": {
        name: "isoWeek",
        padding: 2,
        re: /([1-4][0-9]?|5[0-3]?)/
    },
    "%z": {
        name: "timezone",
        padding: 2,
        re: /(([+-][01][0-9]|2[0-3]):?([0-5][0-9])?)/
    },
    "%Z": {
        name: "minuteOffset",
        padding: 3,
        re: /([+-][0-9]{3})/
    }
});
const TIMEZONE_RE = /^[a-zA-Z_]+\/[a-zA-Z_]+$/;
function parseTimezone(tzstr) {
    if ((0, import_util.isNil)(tzstr)) return 0;
    if (TIMEZONE_RE.test(tzstr)) {
        const date = /* @__PURE__ */ new Date();
        const utcDate = new Date(date.toLocaleString("en-US", {
            timeZone: "UTC"
        }));
        const tzDate = new Date(date.toLocaleString("en-US", {
            timeZone: tzstr
        }));
        return (tzDate.getTime() - utcDate.getTime()) / 6e4;
    }
    const m = DATE_SYM_TABLE["%z"].re.exec(tzstr);
    if (!m) {
        throw new import_util.MingoError(`Timezone '${tzstr}' is invalid or not supported`);
    }
    const hr = parseInt(m[2]) || 0;
    const min = parseInt(m[3]) || 0;
    return (Math.abs(hr * MINUTES_PER_HOUR) + min) * (hr < 0 ? -1 : 1);
}
function formatTimezone(minuteOffset) {
    return (minuteOffset < 0 ? "-" : "+") + padDigits(Math.abs(Math.floor(minuteOffset / MINUTES_PER_HOUR)), 2) + padDigits(Math.abs(minuteOffset) % MINUTES_PER_HOUR, 2);
}
function adjustDate(d, minuteOffset) {
    d.setUTCMinutes(d.getUTCMinutes() + minuteOffset);
}
function computeDate(obj, expr, options) {
    if ((0, import_util.isDate)(obj)) return obj;
    const d = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isDate)(d)) return new Date(d);
    if ((0, import_util.isNumber)(d)) return new Date(d * 1e3);
    if (d.date) {
        const date = (0, import_util.isDate)(d.date) ? new Date(d.date) : new Date(d.date * 1e3);
        if (d.timezone) {
            adjustDate(date, parseTimezone(d.timezone));
        }
        return date;
    }
    throw Error(`cannot convert ${JSON.stringify(expr)} to date`);
}
function padDigits(n, digits) {
    return new Array(Math.max(digits - String(n).length + 1, 0)).join("0") + n.toString();
}
const leapYearsSinceReferencePoint = (year)=>{
    const yearsSinceReferencePoint = year - LEAP_YEAR_REF_POINT;
    return Math.trunc(yearsSinceReferencePoint / 4) - Math.trunc(yearsSinceReferencePoint / 100) + Math.trunc(yearsSinceReferencePoint / 400);
};
function daysBetweenYears(startYear, endYear) {
    return Math.trunc(leapYearsSinceReferencePoint(endYear - 1) - leapYearsSinceReferencePoint(startYear - 1) + (endYear - startYear) * DAYS_IN_YEAR[0]);
}
const dateDiffYear = (start, end)=>end.getUTCFullYear() - start.getUTCFullYear();
const dateDiffMonth = (start, end)=>end.getUTCMonth() - start.getUTCMonth() + dateDiffYear(start, end) * 12;
const dateDiffQuarter = (start, end)=>{
    const a = Math.trunc(start.getUTCMonth() / 3);
    const b = Math.trunc(end.getUTCMonth() / 3);
    return b - a + dateDiffYear(start, end) * 4;
};
const dateDiffDay = (start, end)=>dayOfYear(end) - dayOfYear(start) + daysBetweenYears(start.getUTCFullYear(), end.getUTCFullYear());
const dateDiffWeek = (start, end, startOfWeek)=>{
    const wk = (startOfWeek || "sun").substring(0, 3);
    return Math.trunc((dateDiffDay(start, end) + isoWeekday(start, wk) - isoWeekday(end, wk)) / DAYS_PER_WEEK);
};
const dateDiffHour = (start, end)=>end.getUTCHours() - start.getUTCHours() + dateDiffDay(start, end) * 24;
const addMonth = (d, amount)=>{
    const m = d.getUTCMonth() + amount;
    const yearOffset = Math.floor(m / 12);
    if (m < 0) {
        const month = m % 12 + 12;
        d.setUTCFullYear(d.getUTCFullYear() + yearOffset, month, d.getUTCDate());
    } else {
        d.setUTCFullYear(d.getUTCFullYear() + yearOffset, m % 12, d.getUTCDate());
    }
};
const dateAdd = (date, unit, amount, _timezone)=>{
    const d = new Date(date);
    switch(unit){
        case "year":
            d.setUTCFullYear(d.getUTCFullYear() + amount);
            break;
        case "quarter":
            addMonth(d, 3 * amount);
            break;
        case "month":
            addMonth(d, amount);
            break;
        default:
            d.setTime(d.getTime() + TIMEUNIT_IN_MILLIS[unit] * amount);
    }
    return d;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    DATE_FORMAT,
    DATE_PART_INTERVAL,
    DATE_SYM_TABLE,
    DAYS_OF_WEEK,
    DAYS_OF_WEEK_SET,
    DAYS_PER_WEEK,
    LEAP_YEAR_REF_POINT,
    MILLIS_PER_DAY,
    MINUTES_PER_HOUR,
    TIMEUNIT_IN_MILLIS,
    adjustDate,
    computeDate,
    dateAdd,
    dateDiffDay,
    dateDiffHour,
    dateDiffMonth,
    dateDiffQuarter,
    dateDiffWeek,
    dateDiffYear,
    dayOfYear,
    daysBetweenYears,
    daysInMonth,
    daysInYear,
    formatTimezone,
    isLeapYear,
    isoWeek,
    isoWeekYear,
    isoWeekday,
    padDigits,
    parseTimezone
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateAdd.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateAdd_exports = {};
__export(dateAdd_exports, {
    $dateAdd: ()=>$dateAdd
});
module.exports = __toCommonJS(dateAdd_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $dateAdd = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_internal.dateAdd)(args.startDate, args.unit, args.amount, args.timezone);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateAdd
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/sort.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sort_exports = {};
__export(sort_exports, {
    $sort: ()=>$sort
});
module.exports = __toCommonJS(sort_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $sort = (collection, sortKeys, options)=>{
    if ((0, import_util.isEmpty)(sortKeys) || !(0, import_util.isObject)(sortKeys)) return collection;
    let cmp = import_util.compare;
    const collationSpec = options.collation;
    if ((0, import_util.isObject)(collationSpec) && (0, import_util.isString)(collationSpec.locale)) {
        cmp = collationComparator(collationSpec);
    }
    return collection.transform((coll)=>{
        const modifiers = Object.keys(sortKeys);
        for (const key of modifiers.reverse()){
            const groups = (0, import_util.groupBy)(coll, (obj)=>(0, import_util.resolve)(obj, key), options.hashFunction);
            const sortedKeys = Array.from(groups.keys()).sort(cmp);
            if (sortKeys[key] === -1) sortedKeys.reverse();
            let i = 0;
            for (const k of sortedKeys)for (const v of groups.get(k))coll[i++] = v;
            (0, import_util.assert)(i == coll.length, "bug: counter must match collection size.");
        }
        return coll;
    });
};
const COLLATION_STRENGTH = {
    // Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.
    1: "base",
    //  Only strings that differ in base letters or accents and other diacritic marks compare as unequal.
    // Examples: a ≠ b, a ≠ á, a = A.
    2: "accent",
    // Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal.
    // Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A
    3: "variant"
};
function collationComparator(spec) {
    const localeOpt = {
        sensitivity: COLLATION_STRENGTH[spec.strength || 3],
        caseFirst: spec.caseFirst === "off" ? "false" : spec.caseFirst || "false",
        numeric: spec.numericOrdering || false,
        ignorePunctuation: spec.alternate === "shifted"
    };
    if ((spec.caseLevel || false) === true) {
        if (localeOpt.sensitivity === "base") localeOpt.sensitivity = "case";
        if (localeOpt.sensitivity === "accent") localeOpt.sensitivity = "variant";
    }
    const collator = new Intl.Collator(spec.locale, localeOpt);
    return (a, b)=>{
        if (!(0, import_util.isString)(a) || !(0, import_util.isString)(b)) return (0, import_util.compare)(a, b);
        const i = collator.compare(a, b);
        if (i < 0) return -1;
        if (i > 0) return 1;
        return 0;
    };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sort
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/densify.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var densify_exports = {};
__export(densify_exports, {
    $densify: ()=>$densify
});
module.exports = __toCommonJS(densify_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_types = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/types.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_dateAdd = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateAdd.js [app-ssr] (ecmascript)");
var import_sort = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sort.js [app-ssr] (ecmascript)");
const EMPTY_OBJECT = Object.freeze({});
const $densify = (collection, expr, options)=>{
    const { step, bounds, unit } = expr.range;
    if (unit) {
        (0, import_util.assert)(import_types.TIME_UNITS.includes(unit), "");
        (0, import_util.assert)(Number.isInteger(step) && step > 0, "The step parameter in a range statement must be a whole number when densifying a date range.");
    } else {
        (0, import_util.assert)((0, import_util.isNumber)(step) && step > 0, "The step parameter in a range statement must be a strictly positive numeric value.");
    }
    if ((0, import_util.isArray)(bounds)) {
        (0, import_util.assert)(!!bounds && bounds.length === 2, "A bounding array in a range statement must have exactly two elements.");
        (0, import_util.assert)((bounds.every(import_util.isNumber) || bounds.every(import_util.isDate)) && bounds[0] < bounds[1], "A bounding array must be an ascending array of either two dates or two numbers.");
        (0, import_util.assert)(unit && !bounds.some(import_util.isNumber), "Numeric bounds may not have unit parameter.");
    }
    if (expr.partitionByFields) {
        (0, import_util.assert)((0, import_util.isArray)(expr.partitionByFields), "$densify: `partitionByFields` must be an array of strings");
    }
    collection = (0, import_sort.$sort)(collection, {
        [expr.field]: 1
    }, options);
    const nilOptions = import_core.ComputeOptions.init(options, null);
    const computeNextValue = (value)=>{
        return (0, import_util.isNumber)(value) ? value + step : (0, import_dateAdd.$dateAdd)(EMPTY_OBJECT, {
            startDate: value,
            unit,
            amount: step
        }, nilOptions);
    };
    const isValidUnit = !!unit && import_types.TIME_UNITS.includes(unit);
    const getFieldValue = (o)=>{
        const v = (0, import_util.resolve)(o, expr.field);
        if ((0, import_util.isNil)(v)) return v;
        if ((0, import_util.isNumber)(v)) {
            (0, import_util.assert)(!isValidUnit, "$densify: Encountered non-date value in collection when step has a date unit.");
        } else if ((0, import_util.isDate)(v)) {
            (0, import_util.assert)(isValidUnit, "$densify: Encountered date value in collection when step does not have a date unit.");
        } else {
            (0, import_util.assert)(false, "$densify: Densify field type must be numeric or a date");
        }
        return v;
    };
    const peekItem = new Array();
    const nilFieldsIterator = (0, import_lazy.Lazy)(()=>{
        const item = collection.next();
        const fieldValue = getFieldValue(item.value);
        if ((0, import_util.isNil)(fieldValue)) return item;
        peekItem.push(item);
        return {
            done: true
        };
    });
    const nextDensifyValueMap = import_util.ValueMap.init(options.hashFunction);
    const [lower, upper] = (0, import_util.isArray)(bounds) ? bounds : [
        bounds,
        bounds
    ];
    let maxFieldValue = void 0;
    const updateMaxFieldValue = (value)=>{
        maxFieldValue = maxFieldValue === void 0 || maxFieldValue < value ? value : maxFieldValue;
    };
    const rootKey = [];
    const densifyIterator = (0, import_lazy.Lazy)(()=>{
        const item = peekItem.length > 0 ? peekItem.pop() : collection.next();
        if (item.done) return item;
        let partitionKey = rootKey;
        if ((0, import_util.isArray)(expr.partitionByFields)) {
            partitionKey = expr.partitionByFields.map((k)=>(0, import_util.resolve)(item.value, k));
            (0, import_util.assert)(partitionKey.every(import_util.isString), "$densify: Partition fields must evaluate to string values.");
        }
        (0, import_util.assert)((0, import_util.isObject)(item.value), "$densify: collection must contain documents");
        const itemValue = getFieldValue(item.value);
        if (!nextDensifyValueMap.has(partitionKey)) {
            if (lower == "full") {
                if (!nextDensifyValueMap.has(rootKey)) {
                    nextDensifyValueMap.set(rootKey, itemValue);
                }
                nextDensifyValueMap.set(partitionKey, nextDensifyValueMap.get(rootKey));
            } else if (lower == "partition") {
                nextDensifyValueMap.set(partitionKey, itemValue);
            } else {
                nextDensifyValueMap.set(partitionKey, lower);
            }
        }
        const densifyValue = nextDensifyValueMap.get(partitionKey);
        if (// current item field value is lower than current densify value.
        itemValue <= densifyValue || // range value equals or exceeds upper bound
        upper != "full" && upper != "partition" && densifyValue >= upper) {
            if (densifyValue <= itemValue) {
                nextDensifyValueMap.set(partitionKey, computeNextValue(densifyValue));
            }
            updateMaxFieldValue(itemValue);
            return item;
        }
        nextDensifyValueMap.set(partitionKey, computeNextValue(densifyValue));
        updateMaxFieldValue(densifyValue);
        const denseObj = {
            [expr.field]: densifyValue
        };
        if (partitionKey) {
            partitionKey.forEach((v, i)=>{
                denseObj[expr.partitionByFields[i]] = v;
            });
        }
        peekItem.push(item);
        return {
            done: false,
            value: denseObj
        };
    });
    if (lower !== "full") return (0, import_lazy.concat)(nilFieldsIterator, densifyIterator);
    let paritionIndex = -1;
    let partitionKeysSet = void 0;
    const fullBoundsIterator = (0, import_lazy.Lazy)(()=>{
        if (paritionIndex === -1) {
            const fullDensifyValue = nextDensifyValueMap.get(rootKey);
            nextDensifyValueMap.delete(rootKey);
            partitionKeysSet = Array.from(nextDensifyValueMap.keys());
            if (partitionKeysSet.length === 0) {
                partitionKeysSet.push(rootKey);
                nextDensifyValueMap.set(rootKey, fullDensifyValue);
            }
            paritionIndex++;
        }
        do {
            const partitionKey = partitionKeysSet[paritionIndex];
            const partitionMaxValue = nextDensifyValueMap.get(partitionKey);
            if (partitionMaxValue < maxFieldValue) {
                nextDensifyValueMap.set(partitionKey, computeNextValue(partitionMaxValue));
                const denseObj = {
                    [expr.field]: partitionMaxValue
                };
                partitionKey.forEach((v, i)=>{
                    denseObj[expr.partitionByFields[i]] = v;
                });
                return {
                    done: false,
                    value: denseObj
                };
            }
            paritionIndex++;
        }while (paritionIndex < partitionKeysSet.length)
        return {
            done: true
        };
    });
    return (0, import_lazy.concat)(nilFieldsIterator, densifyIterator, fullBoundsIterator);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $densify
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/facet.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var facet_exports = {};
__export(facet_exports, {
    $facet: ()=>$facet
});
module.exports = __toCommonJS(facet_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $facet = (collection, expr, options)=>{
    return collection.transform((array)=>{
        const o = {};
        for (const [k, pipeline] of Object.entries(expr)){
            o[k] = new import_aggregator.Aggregator(pipeline, {
                ...options,
                processingMode: import_core.ProcessingMode.CLONE_INPUT
            }).run(array);
        }
        return [
            o
        ];
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $facet
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/ifNull.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var ifNull_exports = {};
__export(ifNull_exports, {
    $ifNull: ()=>$ifNull
});
module.exports = __toCommonJS(ifNull_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $ifNull = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    return args.find((arg)=>!(0, import_util.isNil)(arg)) ?? args[args.length - 1];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $ifNull
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/accumulator.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var accumulator_exports = {};
__export(accumulator_exports, {
    $accumulator: ()=>$accumulator
});
module.exports = __toCommonJS(accumulator_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $accumulator = (collection, expr, options)=>{
    (0, import_util.assert)(!!options && options.scriptEnabled, "$accumulator operator requires 'scriptEnabled' option to be true");
    if (collection.length == 0) return expr.initArgs;
    const copts = import_core.ComputeOptions.init(options);
    const initArgs = (0, import_core.computeValue)({}, expr.initArgs || [], null, copts.update(copts?.local?.groupId || {}));
    let state = expr.init.call(null, ...initArgs);
    for (const doc of collection){
        const args = (0, import_core.computeValue)(doc, expr.accumulateArgs, null, copts.update(doc));
        state = expr.accumulate.call(null, ...[
            state,
            ...args
        ]);
    }
    return expr.finalize ? expr.finalize.call(null, state) : state;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $accumulator
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var push_exports = {};
__export(push_exports, {
    $push: ()=>$push
});
module.exports = __toCommonJS(push_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $push = (collection, expr, options)=>{
    if ((0, import_util.isNil)(expr)) return collection;
    const copts = import_core.ComputeOptions.init(options);
    return collection.map((obj)=>(0, import_core.computeValue)(obj, expr, null, copts.update(obj)));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $push
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/addToSet.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var addToSet_exports = {};
__export(addToSet_exports, {
    $addToSet: ()=>$addToSet
});
module.exports = __toCommonJS(addToSet_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $addToSet = (collection, expr, options)=>{
    return (0, import_util.unique)((0, import_push.$push)(collection, expr, options), options?.hashFunction);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $addToSet
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/avg.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var avg_exports = {};
__export(avg_exports, {
    $avg: ()=>$avg
});
module.exports = __toCommonJS(avg_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $avg = (collection, expr, options)=>{
    const data = (0, import_push.$push)(collection, expr, options).filter(import_util.isNumber);
    const sum = data.reduce((acc, n)=>acc + n, 0);
    return sum / (data.length || 1);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $avg
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottomN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bottomN_exports = {};
__export(bottomN_exports, {
    $bottomN: ()=>$bottomN
});
module.exports = __toCommonJS(bottomN_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $bottomN = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const { n, sortBy } = (0, import_core.computeValue)(copts.local.groupId, expr, null, copts);
    const result = new import_aggregator.Aggregator([
        {
            $sort: sortBy
        }
    ], copts).run(collection);
    const m = result.length;
    const p = n;
    return (0, import_push.$push)(m <= p ? result : result.slice(m - p), expr.output, copts);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bottomN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottom.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bottom_exports = {};
__export(bottom_exports, {
    $bottom: ()=>$bottom
});
module.exports = __toCommonJS(bottom_exports);
var import_bottomN = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottomN.js [app-ssr] (ecmascript)");
const $bottom = (collection, expr, options)=>(0, import_bottomN.$bottomN)(collection, {
        ...expr,
        n: 1
    }, options);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bottom
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/count.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var count_exports = {};
__export(count_exports, {
    $count: ()=>$count
});
module.exports = __toCommonJS(count_exports);
const $count = (collection, _expr, _options)=>collection.length;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $count
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    covariance: ()=>covariance,
    stddev: ()=>stddev
});
module.exports = __toCommonJS(internal_exports);
function stddev(data, sampled = true) {
    const sum = data.reduce((acc, n)=>acc + n, 0);
    const N = data.length || 1;
    const avg = sum / N;
    return Math.sqrt(data.reduce((acc, n)=>acc + Math.pow(n - avg, 2), 0) / (N - Number(sampled)));
}
function covariance(dataset, sampled = true) {
    if (!dataset) return null;
    if (dataset.length < 2) return sampled ? null : 0;
    let meanX = 0;
    let meanY = 0;
    for (const [x, y] of dataset){
        meanX += x;
        meanY += y;
    }
    meanX /= dataset.length;
    meanY /= dataset.length;
    let result = 0;
    for (const [x, y] of dataset){
        result += (x - meanX) * (y - meanY);
    }
    return result / (dataset.length - Number(sampled));
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    covariance,
    stddev
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/covariancePop.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var covariancePop_exports = {};
__export(covariancePop_exports, {
    $covariancePop: ()=>$covariancePop
});
module.exports = __toCommonJS(covariancePop_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/_internal.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $covariancePop = (collection, expr, options)=>(0, import_internal.covariance)((0, import_push.$push)(collection, expr, options), false);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $covariancePop
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/covarianceSamp.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var covarianceSamp_exports = {};
__export(covarianceSamp_exports, {
    $covarianceSamp: ()=>$covarianceSamp
});
module.exports = __toCommonJS(covarianceSamp_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/_internal.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $covarianceSamp = (collection, expr, options)=>(0, import_internal.covariance)((0, import_push.$push)(collection, expr, options), true);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $covarianceSamp
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/first.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var first_exports = {};
__export(first_exports, {
    $first: ()=>$first
});
module.exports = __toCommonJS(first_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $first = (collection, expr, options)=>{
    if (collection.length === 0) return void 0;
    const copts = import_core.ComputeOptions.init(options).update(collection[0]);
    return (0, import_core.computeValue)(collection[0], expr, null, copts);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $first
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/firstN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var firstN_exports = {};
__export(firstN_exports, {
    $firstN: ()=>$firstN
});
module.exports = __toCommonJS(firstN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $firstN = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const m = collection.length;
    const n = (0, import_core.computeValue)(copts?.local?.groupId, expr.n, null, copts);
    return (0, import_push.$push)(m <= n ? collection : collection.slice(0, n), expr.input, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $firstN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/last.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var last_exports = {};
__export(last_exports, {
    $last: ()=>$last
});
module.exports = __toCommonJS(last_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $last = (collection, expr, options)=>{
    if (collection.length === 0) return void 0;
    const obj = collection[collection.length - 1];
    const copts = import_core.ComputeOptions.init(options).update(obj);
    return (0, import_core.computeValue)(obj, expr, null, copts);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $last
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/lastN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lastN_exports = {};
__export(lastN_exports, {
    $lastN: ()=>$lastN
});
module.exports = __toCommonJS(lastN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $lastN = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const m = collection.length;
    const n = (0, import_core.computeValue)(copts?.local?.groupId, expr.n, null, copts);
    return (0, import_push.$push)(m <= n ? collection : collection.slice(m - n), expr.input, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lastN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/max.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var max_exports = {};
__export(max_exports, {
    $max: ()=>$max
});
module.exports = __toCommonJS(max_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $max = (collection, expr, options)=>{
    const items = (0, import_push.$push)(collection, expr, options);
    if ((0, import_util.isEmpty)(items)) return null;
    (0, import_util.assert)((0, import_util.isArray)(items), "$max: input must resolve to array");
    let max = items[0];
    for (const n of items){
        if ((0, import_util.isNil)(n) || isNaN(n)) continue;
        if ((0, import_util.compare)(n, max) >= 0) max = n;
    }
    return max;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $max
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/maxN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var maxN_exports = {};
__export(maxN_exports, {
    $maxN: ()=>$maxN
});
module.exports = __toCommonJS(maxN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $maxN = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const m = collection.length;
    const n = (0, import_core.computeValue)(copts?.local?.groupId, expr.n, null, copts);
    const arr = (0, import_push.$push)(collection, expr.input, options).filter((o)=>!(0, import_util.isNil)(o));
    arr.sort((a, b)=>-1 * (0, import_util.compare)(a, b));
    return m <= n ? arr : arr.slice(0, n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $maxN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/percentile.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var percentile_exports = {};
__export(percentile_exports, {
    $percentile: ()=>$percentile
});
module.exports = __toCommonJS(percentile_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $percentile = (collection, expr, options)=>{
    const X = (0, import_push.$push)(collection, expr.input, options).filter(import_util.isNumber).sort();
    const centiles = (0, import_push.$push)(expr.p, "$$CURRENT", options).filter(import_util.isNumber);
    const method = expr.method || "approximate";
    return centiles.map((p)=>{
        (0, import_util.assert)(p > 0 && p <= 1, `percentile value must be between 0 (exclusive) and 1 (inclusive): invalid '${p}'.`);
        const r = p * (X.length - 1) + 1;
        const ri = Math.floor(r);
        const result = r === ri ? X[r - 1] : X[ri - 1] + r % 1 * (X[ri] - X[ri - 1] || 0);
        switch(method){
            case "exact":
                return result;
            case "approximate":
                {
                    const i = (0, import_util.findInsertIndex)(X, result);
                    return i / X.length >= p ? X[Math.max(i - 1, 0)] : X[i];
                }
        }
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $percentile
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/median.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var median_exports = {};
__export(median_exports, {
    $median: ()=>$median
});
module.exports = __toCommonJS(median_exports);
var import_percentile = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/percentile.js [app-ssr] (ecmascript)");
const $median = (collection, expr, options)=>(0, import_percentile.$percentile)(collection, {
        ...expr,
        p: [
            0.5
        ]
    }, options).pop();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $median
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/object/mergeObjects.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var mergeObjects_exports = {};
__export(mergeObjects_exports, {
    $mergeObjects: ()=>$mergeObjects
});
module.exports = __toCommonJS(mergeObjects_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $mergeObjects = (obj, expr, options)=>{
    const docs = (0, import_core.computeValue)(obj, expr, null, options) ?? [];
    const acc = {};
    for (const o of docs){
        if ((0, import_util.isNil)(o)) continue;
        for (const k of Object.keys(o)){
            if (o[k] !== void 0) acc[k] = o[k];
        }
    }
    return acc;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $mergeObjects
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/mergeObjects.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var mergeObjects_exports = {};
__export(mergeObjects_exports, {
    $mergeObjects: ()=>$mergeObjects
});
module.exports = __toCommonJS(mergeObjects_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_mergeObjects = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/mergeObjects.js [app-ssr] (ecmascript)");
const $mergeObjects = (collection, expr, options)=>{
    const arr = (0, import_core.computeValue)(collection, expr, null, options);
    return (0, import_mergeObjects.$mergeObjects)(null, arr, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $mergeObjects
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/min.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var min_exports = {};
__export(min_exports, {
    $min: ()=>$min
});
module.exports = __toCommonJS(min_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $min = (collection, expr, options)=>{
    const items = (0, import_push.$push)(collection, expr, options);
    if ((0, import_util.isEmpty)(items)) return null;
    (0, import_util.assert)((0, import_util.isArray)(items), "$min: input must resolve to array");
    let min = items[0];
    for (const n of items){
        if ((0, import_util.isNil)(n) || isNaN(n)) continue;
        if ((0, import_util.compare)(n, min) <= 0) min = n;
    }
    return min;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $min
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/minN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var minN_exports = {};
__export(minN_exports, {
    $minN: ()=>$minN
});
module.exports = __toCommonJS(minN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $minN = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const m = collection.length;
    const n = (0, import_core.computeValue)(copts?.local?.groupId, expr.n, null, copts);
    const arr = (0, import_push.$push)(collection, expr.input, options).filter((o)=>!(0, import_util.isNil)(o));
    arr.sort(import_util.compare);
    return m <= n ? arr : arr.slice(0, n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $minN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/stdDevPop.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var stdDevPop_exports = {};
__export(stdDevPop_exports, {
    $stdDevPop: ()=>$stdDevPop
});
module.exports = __toCommonJS(stdDevPop_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/_internal.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $stdDevPop = (collection, expr, options)=>(0, import_internal.stddev)((0, import_push.$push)(collection, expr, options).filter(import_util.isNumber), false);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $stdDevPop
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/stdDevSamp.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var stdDevSamp_exports = {};
__export(stdDevSamp_exports, {
    $stdDevSamp: ()=>$stdDevSamp
});
module.exports = __toCommonJS(stdDevSamp_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/_internal.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $stdDevSamp = (collection, expr, options)=>(0, import_internal.stddev)((0, import_push.$push)(collection, expr, options).filter(import_util.isNumber), true);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $stdDevSamp
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/sum.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sum_exports = {};
__export(sum_exports, {
    $sum: ()=>$sum
});
module.exports = __toCommonJS(sum_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $sum = (collection, expr, options)=>{
    if (!(0, import_util.isArray)(collection)) return 0;
    if ((0, import_util.isNumber)(expr)) return collection.length * expr;
    const nums = (0, import_push.$push)(collection, expr, options).filter(import_util.isNumber);
    return nums.reduce((acc, n)=>acc + n, 0);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sum
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/topN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var topN_exports = {};
__export(topN_exports, {
    $topN: ()=>$topN
});
module.exports = __toCommonJS(topN_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
const $topN = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const { n, sortBy } = (0, import_core.computeValue)(copts.local.groupId, expr, null, copts);
    const result = new import_aggregator.Aggregator([
        {
            $sort: sortBy
        },
        {
            $limit: n
        }
    ], copts).run(collection);
    return (0, import_push.$push)(result, expr.output, copts);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $topN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/top.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var top_exports = {};
__export(top_exports, {
    $top: ()=>$top
});
module.exports = __toCommonJS(top_exports);
var import_topN = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/topN.js [app-ssr] (ecmascript)");
const $top = (collection, expr, options)=>(0, import_topN.$topN)(collection, {
        ...expr,
        n: 1
    }, options);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $top
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/accumulator/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var accumulator_exports = {};
module.exports = __toCommonJS(accumulator_exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/accumulator.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/addToSet.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/avg.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottom.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottomN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/count.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/covariancePop.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/covarianceSamp.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/first.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/firstN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/last.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/lastN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/max.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/maxN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/median.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/mergeObjects.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/min.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/minN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/percentile.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/stdDevPop.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/stdDevSamp.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/sum.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/top.js [app-ssr] (ecmascript)"), module.exports);
__reExport(accumulator_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/topN.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/accumulator.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/addToSet.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/avg.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottom.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/bottomN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/count.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/covariancePop.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/covarianceSamp.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/first.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/firstN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/last.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/lastN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/max.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/maxN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/median.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/mergeObjects.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/min.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/minN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/percentile.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/stdDevPop.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/stdDevSamp.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/sum.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/top.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/topN.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    isUnbounded: ()=>isUnbounded
});
module.exports = __toCommonJS(internal_exports);
const isUnbounded = (window)=>{
    const boundary = window?.documents || window?.range;
    return !boundary || boundary[0] === "unbounded" && boundary[1] === "unbounded";
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    isUnbounded
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/window/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    MILLIS_PER_UNIT: ()=>MILLIS_PER_UNIT,
    rank: ()=>rank,
    withMemo: ()=>withMemo
});
module.exports = __toCommonJS(internal_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_accumulator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/index.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
var import_internal2 = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/_internal.js [app-ssr] (ecmascript)");
const MILLIS_PER_UNIT = {
    week: import_internal.MILLIS_PER_DAY * 7,
    day: import_internal.MILLIS_PER_DAY,
    hour: import_internal.MILLIS_PER_DAY / 24,
    minute: 6e4,
    second: 1e3,
    millisecond: 1
};
const memo = /* @__PURE__ */ new WeakMap();
function withMemo(collection, expr, cacheFn, fn) {
    if (!(0, import_internal2.isUnbounded)(expr.parentExpr.output[expr.field].window)) {
        return fn(cacheFn());
    }
    if (!memo.has(collection)) {
        memo.set(collection, {
            [expr.field]: cacheFn()
        });
    }
    const data = memo.get(collection);
    if (data[expr.field] === void 0) {
        data[expr.field] = cacheFn();
    }
    let failed = false;
    try {
        return fn(data[expr.field]);
    } catch  {
        failed = true;
    } finally{
        if (failed || expr.documentNumber === collection.length) {
            delete data[expr.field];
            if (Object.keys(data).length === 0) memo.delete(collection);
        }
    }
}
function rank(_, collection, expr, options, dense) {
    return withMemo(collection, expr, ()=>{
        const sortKey = "$" + Object.keys(expr.parentExpr.sortBy)[0];
        const values = (0, import_accumulator.$push)(collection, sortKey, options);
        const groups = (0, import_util.groupBy)(values, (_2, n)=>values[n], options.hashFunction);
        return {
            values,
            groups
        };
    }, (input)=>{
        const { values, groups: partitions } = input;
        if (partitions.size == collection.length) {
            return expr.documentNumber;
        }
        const current = values[expr.documentNumber - 1];
        let i = 0;
        let offset = 0;
        for (const key of partitions.keys()){
            if ((0, import_util.isEqual)(current, key)) {
                return dense ? i + 1 : offset + 1;
            }
            i++;
            offset += partitions.get(key).length;
        }
        throw new import_util.MingoError("rank: invalid return value. please submit a bug report.");
    });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    MILLIS_PER_UNIT,
    rank,
    withMemo
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/window/linearFill.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var linearFill_exports = {};
__export(linearFill_exports, {
    $linearFill: ()=>$linearFill
});
module.exports = __toCommonJS(linearFill_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_accumulator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/index.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/window/_internal.js [app-ssr] (ecmascript)");
const interpolate = (x1, y1, x2, y2, x)=>y1 + (x - x1) * ((y2 - y1) / (x2 - x1));
const $linearFill = (_, collection, expr, options)=>{
    return (0, import_internal.withMemo)(collection, expr, ()=>{
        const sortKey = "$" + Object.keys(expr.parentExpr.sortBy)[0];
        const points = (0, import_accumulator.$push)(collection, [
            sortKey,
            expr.inputExpr
        ], options).filter(([x, _2])=>(0, import_util.isNumber)(+x));
        if (points.length !== collection.length) return null;
        let lindex = -1;
        let rindex = 0;
        while(rindex < points.length){
            while(lindex + 1 < points.length && (0, import_util.isNumber)(points[lindex + 1][1])){
                lindex++;
                rindex = lindex;
            }
            while(rindex + 1 < points.length && !(0, import_util.isNumber)(points[rindex + 1][1])){
                rindex++;
            }
            if (rindex + 1 >= points.length) break;
            rindex++;
            while(lindex + 1 < rindex){
                points[lindex + 1][1] = interpolate(points[lindex][0], points[lindex][1], points[rindex][0], points[rindex][1], points[lindex + 1][0]);
                lindex++;
            }
            lindex = rindex;
        }
        return points.map(([_2, y])=>y);
    }, (values)=>values[expr.documentNumber - 1]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $linearFill
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/window/locf.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var locf_exports = {};
__export(locf_exports, {
    $locf: ()=>$locf
});
module.exports = __toCommonJS(locf_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_push = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/push.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/window/_internal.js [app-ssr] (ecmascript)");
const $locf = (_, collection, expr, options)=>{
    return (0, import_internal.withMemo)(collection, expr, ()=>{
        const values = (0, import_push.$push)(collection, expr.inputExpr, options);
        for(let i = 1; i < values.length; i++){
            if ((0, import_util.isNil)(values[i])) values[i] = values[i - 1];
        }
        return values;
    }, (series)=>series[expr.documentNumber - 1]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $locf
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/custom/function.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var function_exports = {};
__export(function_exports, {
    $function: ()=>$function
});
module.exports = __toCommonJS(function_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $function = (obj, expr, options)=>{
    (0, import_util.assert)(options.scriptEnabled, "$function operator requires 'scriptEnabled' option to be true");
    const fn = (0, import_core.computeValue)(obj, expr, null, options);
    return fn.body.apply(null, fn.args);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $function
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/group.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var group_exports = {};
__export(group_exports, {
    $group: ()=>$group
});
module.exports = __toCommonJS(group_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const ID_KEY = "_id";
const $group = (collection, expr, options)=>{
    (0, import_util.assert)((0, import_util.has)(expr, ID_KEY), "$group specification must include an '_id'");
    const idExpr = expr[ID_KEY];
    const copts = import_core.ComputeOptions.init(options);
    const newFields = Object.keys(expr).filter((k)=>k != ID_KEY);
    return collection.transform((coll)=>{
        const partitions = (0, import_util.groupBy)(coll, (obj)=>(0, import_core.computeValue)(obj, idExpr, null, options), options.hashFunction);
        let i = -1;
        const partitionKeys = Array.from(partitions.keys());
        return ()=>{
            if (++i === partitions.size) return {
                done: true
            };
            const groupId = partitionKeys[i];
            const obj = {};
            if (groupId !== void 0) {
                obj[ID_KEY] = groupId;
            }
            for (const key of newFields){
                obj[key] = (0, import_core.computeValue)(partitions.get(groupId), expr[key], null, copts.update(null, {
                    groupId
                }));
            }
            return {
                value: obj,
                done: false
            };
        };
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $group
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/setWindowFields.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setWindowFields_exports = {};
__export(setWindowFields_exports, {
    $setWindowFields: ()=>$setWindowFields
});
module.exports = __toCommonJS(setWindowFields_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_function = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/custom/function.js [app-ssr] (ecmascript)");
var import_dateAdd = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateAdd.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/_internal.js [app-ssr] (ecmascript)");
var import_addFields = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/addFields.js [app-ssr] (ecmascript)");
var import_group = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/group.js [app-ssr] (ecmascript)");
var import_sort = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sort.js [app-ssr] (ecmascript)");
const SORT_REQUIRED_OPS = /* @__PURE__ */ new Set([
    "$denseRank",
    "$documentNumber",
    "$first",
    "$last",
    "$linearFill",
    "$rank",
    "$shift"
]);
const WINDOW_UNBOUNDED_OPS = /* @__PURE__ */ new Set([
    "$denseRank",
    "$expMovingAvg",
    "$linearFill",
    "$locf",
    "$rank",
    "$shift"
]);
const $setWindowFields = (collection, expr, options)=>{
    options = (0, import_core.initOptions)(options);
    options.context.addExpressionOps({
        $function: import_function.$function
    });
    for (const outputExpr of Object.values(expr.output)){
        const keys = Object.keys(outputExpr);
        const op = keys.find(import_util.isOperator);
        (0, import_util.assert)(!!(0, import_core.getOperator)("window", op, options) || !!(0, import_core.getOperator)("accumulator", op, options), `'${op}' is not a valid window operator`);
        (0, import_util.assert)(keys.length > 0 && keys.length <= 2 && (keys.length == 1 || keys.includes("window")), "'output' option should have a single window operator.");
        if (outputExpr?.window) {
            const { documents, range } = outputExpr.window;
            (0, import_util.assert)(!!documents && !range || !documents && !!range || !documents && !range, "'window' option supports only one of 'documents' or 'range'.");
        }
    }
    if (expr.sortBy) {
        collection = (0, import_sort.$sort)(collection, expr.sortBy, options);
    }
    collection = (0, import_group.$group)(collection, {
        _id: expr.partitionBy,
        items: {
            $push: "$$CURRENT"
        }
    }, options);
    return collection.transform((partitions)=>{
        const iterators = [];
        const outputConfig = [];
        for (const [field, outputExpr] of Object.entries(expr.output)){
            const op = Object.keys(outputExpr).find(import_util.isOperator);
            const config = {
                operatorName: op,
                func: {
                    left: (0, import_core.getOperator)("accumulator", op, options),
                    right: (0, import_core.getOperator)("window", op, options)
                },
                args: outputExpr[op],
                field,
                window: outputExpr.window
            };
            (0, import_util.assert)(!!expr.sortBy || !(SORT_REQUIRED_OPS.has(op) || !config.window), `${SORT_REQUIRED_OPS.has(op) ? `'${op}'` : "bounded window operation"} requires a sortBy.`);
            (0, import_util.assert)(!config.window || !WINDOW_UNBOUNDED_OPS.has(op), `${op} does not accept a 'window' field.`);
            outputConfig.push(config);
        }
        partitions.forEach((group)=>{
            const items = group.items;
            let iterator = (0, import_lazy.Lazy)(items);
            const windowResultMap = {};
            for (const config of outputConfig){
                const { func, args, field, window } = config;
                const makeResultFunc = (getItemsFn)=>{
                    let index = -1;
                    return (obj)=>{
                        ++index;
                        if (func.left) {
                            return func.left(getItemsFn(obj, index), args, options);
                        } else if (func.right) {
                            return func.right(obj, getItemsFn(obj, index), {
                                parentExpr: expr,
                                inputExpr: args,
                                documentNumber: index + 1,
                                field
                            }, // must use raw options only since it operates over a collection.
                            options);
                        }
                    };
                };
                if (window) {
                    const { documents, range, unit } = window;
                    const boundary = documents || range;
                    if (!(0, import_internal.isUnbounded)(window)) {
                        const [begin, end] = boundary;
                        const toBeginIndex = (currentIndex)=>{
                            if (begin == "current") return currentIndex;
                            if (begin == "unbounded") return 0;
                            return Math.max(begin + currentIndex, 0);
                        };
                        const toEndIndex = (currentIndex)=>{
                            if (end == "current") return currentIndex + 1;
                            if (end == "unbounded") return items.length;
                            return end + currentIndex + 1;
                        };
                        const getItems = (current, index)=>{
                            if (!!documents || boundary.every(import_util.isString)) {
                                return items.slice(toBeginIndex(index), toEndIndex(index));
                            }
                            const sortKey = Object.keys(expr.sortBy)[0];
                            let lower;
                            let upper;
                            if (unit) {
                                const getTime = (amount)=>{
                                    return (0, import_dateAdd.$dateAdd)(current, {
                                        startDate: new Date(current[sortKey]),
                                        unit,
                                        amount
                                    }, options).getTime();
                                };
                                lower = (0, import_util.isNumber)(begin) ? getTime(begin) : -Infinity;
                                upper = (0, import_util.isNumber)(end) ? getTime(end) : Infinity;
                            } else {
                                const currentValue = current[sortKey];
                                lower = (0, import_util.isNumber)(begin) ? currentValue + begin : -Infinity;
                                upper = (0, import_util.isNumber)(end) ? currentValue + end : Infinity;
                            }
                            let array = items;
                            if (begin == "current") array = items.slice(index);
                            if (end == "current") array = items.slice(0, index + 1);
                            return array.filter((o)=>{
                                const n = +o[sortKey];
                                return n >= lower && n <= upper;
                            });
                        };
                        windowResultMap[field] = makeResultFunc(getItems);
                    }
                }
                if (!windowResultMap[field]) {
                    windowResultMap[field] = makeResultFunc((_)=>items);
                }
                iterator = (0, import_addFields.$addFields)(iterator, {
                    [field]: {
                        $function: {
                            body: (obj)=>windowResultMap[field](obj),
                            args: [
                                "$$CURRENT"
                            ]
                        }
                    }
                }, options);
            }
            iterators.push(iterator);
        });
        return (0, import_lazy.concat)(...iterators);
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setWindowFields
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/fill.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var fill_exports = {};
__export(fill_exports, {
    $fill: ()=>$fill
});
module.exports = __toCommonJS(fill_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_ifNull = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/ifNull.js [app-ssr] (ecmascript)");
var import_linearFill = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/window/linearFill.js [app-ssr] (ecmascript)");
var import_locf = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/window/locf.js [app-ssr] (ecmascript)");
var import_addFields = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/addFields.js [app-ssr] (ecmascript)");
var import_setWindowFields = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/setWindowFields.js [app-ssr] (ecmascript)");
const FILL_METHODS = {
    locf: "$locf",
    linear: "$linearFill"
};
const $fill = (collection, expr, options)=>{
    (0, import_util.assert)(!expr.sortBy || (0, import_util.isObject)(expr.sortBy), "sortBy must be an object.");
    (0, import_util.assert)(!!expr.sortBy || Object.values(expr.output).every((m)=>(0, import_util.has)(m, "value")), "sortBy required if any output field specifies a 'method'.");
    (0, import_util.assert)(!(expr.partitionBy && expr.partitionByFields), "specify either partitionBy or partitionByFields.");
    (0, import_util.assert)(!expr.partitionByFields || expr?.partitionByFields?.every((s)=>s[0] !== "$"), "fields in partitionByFields cannot begin with '$'.");
    options = (0, import_core.initOptions)(options);
    options.context.addExpressionOps({
        $ifNull: import_ifNull.$ifNull
    });
    options.context.addWindowOps({
        $locf: import_locf.$locf,
        $linearFill: import_linearFill.$linearFill
    });
    const partitionExpr = expr.partitionBy || expr?.partitionByFields?.map((s)=>`$${s}`);
    const valueExpr = {};
    const methodExpr = {};
    for (const [k, m] of Object.entries(expr.output)){
        if ((0, import_util.has)(m, "value")) {
            valueExpr[k] = {
                $ifNull: [
                    `$$CURRENT.${k}`,
                    m["value"]
                ]
            };
        } else {
            const fillOp = FILL_METHODS[m["method"]];
            (0, import_util.assert)(!!fillOp, `invalid fill method '${m["method"]}'.`);
            methodExpr[k] = {
                [fillOp]: "$" + k
            };
        }
    }
    if (Object.keys(methodExpr).length > 0) {
        collection = (0, import_setWindowFields.$setWindowFields)(collection, {
            sortBy: expr.sortBy || {},
            partitionBy: partitionExpr,
            output: methodExpr
        }, options);
    }
    if (Object.keys(valueExpr).length > 0) {
        collection = (0, import_addFields.$addFields)(collection, valueExpr, options);
    }
    return collection;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $fill
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/lookup.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lookup_exports = {};
__export(lookup_exports, {
    $lookup: ()=>$lookup
});
module.exports = __toCommonJS(lookup_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $lookup = (collection, expr, options)=>{
    const joinColl = (0, import_util.isString)(expr.from) ? options?.collectionResolver(expr.from) : expr.from;
    const { let: letExpr, pipeline, foreignField, localField } = expr;
    const subQueryPipeline = pipeline || [];
    let lookupEq = (_)=>[
            true,
            []
        ];
    if (foreignField && localField) {
        const map = import_util.ValueMap.init(options.hashFunction);
        for (const doc of joinColl){
            (0, import_util.ensureArray)((0, import_util.resolve)(doc, foreignField) ?? null).forEach((v)=>{
                const xs = map.get(v);
                const arr = xs ?? [];
                arr.push(doc);
                if (arr !== xs) map.set(v, arr);
            });
        }
        lookupEq = (o)=>{
            const local = (0, import_util.resolve)(o, localField) ?? null;
            if ((0, import_util.isArray)(local)) {
                if (subQueryPipeline.length) {
                    return [
                        local.some((v)=>map.has(v)),
                        null
                    ];
                }
                const result2 = Array.from(new Set((0, import_util.flatten)(local.map((v)=>map.get(v), options.hashFunction))));
                return [
                    result2.length > 0,
                    result2
                ];
            }
            const result = map.get(local) ?? null;
            return [
                result !== null,
                result ?? []
            ];
        };
        if (subQueryPipeline.length === 0) {
            return collection.map((obj)=>{
                return {
                    ...obj,
                    [expr.as]: lookupEq(obj).pop()
                };
            });
        }
    }
    const agg = new import_aggregator.Aggregator(subQueryPipeline, options);
    return collection.map((obj)=>{
        const variables = (0, import_core.computeValue)(obj, letExpr, null, options);
        const opts = Object.assign({}, options, {
            variables: {
                ...options.variables,
                ...variables
            }
        });
        const [ok, res] = lookupEq(obj);
        return {
            ...obj,
            [expr.as]: ok ? agg.run(joinColl, opts) : res
        };
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lookup
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/graphLookup.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var graphLookup_exports = {};
__export(graphLookup_exports, {
    $graphLookup: ()=>$graphLookup
});
module.exports = __toCommonJS(graphLookup_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_lookup = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/lookup.js [app-ssr] (ecmascript)");
const $graphLookup = (collection, expr, options)=>{
    const fromColl = (0, import_util.isString)(expr.from) ? options?.collectionResolver(expr.from) : expr.from;
    const { connectFromField, connectToField, as: asField, maxDepth, depthField, restrictSearchWithMatch: matchExpr } = expr;
    const pipelineExpr = matchExpr ? {
        pipeline: [
            {
                $match: matchExpr
            }
        ]
    } : {};
    return collection.map((obj)=>{
        const matchObj = {};
        (0, import_util.setValue)(matchObj, connectFromField, (0, import_core.computeValue)(obj, expr.startWith, null, options));
        let matches = [
            matchObj
        ];
        let i = -1;
        const map = import_util.ValueMap.init(options.hashFunction);
        do {
            i++;
            matches = (0, import_util.flatten)((0, import_lookup.$lookup)((0, import_lazy.Lazy)(matches), {
                from: fromColl,
                localField: connectFromField,
                foreignField: connectToField,
                as: asField,
                ...pipelineExpr
            }, options).map((o)=>o[asField]).value());
            const oldSize = map.size;
            matches.forEach((k)=>map.set(k, map.get(k) ?? i));
            if (oldSize == map.size) break;
        }while ((0, import_util.isNil)(maxDepth) || i < maxDepth)
        const result = new Array(map.size);
        let n = 0;
        map.forEach((v, k)=>{
            result[n++] = Object.assign(depthField ? {
                [depthField]: v
            } : {}, k);
        });
        return {
            ...obj,
            [asField]: result
        };
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $graphLookup
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/limit.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var limit_exports = {};
__export(limit_exports, {
    $limit: ()=>$limit
});
module.exports = __toCommonJS(limit_exports);
const $limit = (collection, expr, _options)=>collection.take(expr);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $limit
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/match.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var match_exports = {};
__export(match_exports, {
    $match: ()=>$match
});
module.exports = __toCommonJS(match_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
const $match = (collection, expr, options)=>{
    const q = new import_query.Query(expr, options);
    return collection.filter((o)=>q.test(o));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $match
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/abs.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var abs_exports = {};
__export(abs_exports, {
    $abs: ()=>$abs
});
module.exports = __toCommonJS(abs_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $abs = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_util.isNil)(n) ? null : Math.abs(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $abs
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/add.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var add_exports = {};
__export(add_exports, {
    $add: ()=>$add
});
module.exports = __toCommonJS(add_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $add = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    let hasDate = false;
    let sum = 0;
    for (const n of args){
        if ((0, import_util.isDate)(n)) {
            (0, import_util.assert)(!hasDate, "'$add' can only have one date value");
            hasDate = true;
        }
        sum += +n;
    }
    return hasDate ? new Date(sum) : sum;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $add
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/ceil.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var ceil_exports = {};
__export(ceil_exports, {
    $ceil: ()=>$ceil
});
module.exports = __toCommonJS(ceil_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $ceil = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    (0, import_util.assert)((0, import_util.isNumber)(n) || isNaN(n), "$ceil expression must resolve to a number.");
    return Math.ceil(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $ceil
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/divide.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var divide_exports = {};
__export(divide_exports, {
    $divide: ()=>$divide
});
module.exports = __toCommonJS(divide_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $divide = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    return args[0] / args[1];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $divide
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/exp.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var exp_exports = {};
__export(exp_exports, {
    $exp: ()=>$exp
});
module.exports = __toCommonJS(exp_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $exp = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    (0, import_util.assert)((0, import_util.isNumber)(n) || isNaN(n), "$exp expression must resolve to a number.");
    return Math.exp(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $exp
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/floor.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var floor_exports = {};
__export(floor_exports, {
    $floor: ()=>$floor
});
module.exports = __toCommonJS(floor_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $floor = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    (0, import_util.assert)((0, import_util.isNumber)(n) || isNaN(n), "$floor expression must resolve to a number.");
    return Math.floor(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $floor
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/ln.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var ln_exports = {};
__export(ln_exports, {
    $ln: ()=>$ln
});
module.exports = __toCommonJS(ln_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $ln = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    (0, import_util.assert)((0, import_util.isNumber)(n) || isNaN(n), "$ln expression must resolve to a number.");
    return Math.log(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $ln
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/log.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var log_exports = {};
__export(log_exports, {
    $log: ()=>$log
});
module.exports = __toCommonJS(log_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $log = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const msg = "$log expression must resolve to array(2) of numbers";
    (0, import_util.assert)((0, import_util.isArray)(args) && args.length === 2, msg);
    if (args.some(import_util.isNil)) return null;
    (0, import_util.assert)(args.some(isNaN) || args.every(import_util.isNumber), msg);
    return Math.log10(args[0]) / Math.log10(args[1]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $log
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/log10.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var log10_exports = {};
__export(log10_exports, {
    $log10: ()=>$log10
});
module.exports = __toCommonJS(log10_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $log10 = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    (0, import_util.assert)((0, import_util.isNumber)(n) || isNaN(n), "$log10 expression must resolve to a number.");
    return Math.log10(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $log10
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/mod.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var mod_exports = {};
__export(mod_exports, {
    $mod: ()=>$mod
});
module.exports = __toCommonJS(mod_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $mod = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    return args[0] % args[1];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $mod
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/multiply.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var multiply_exports = {};
__export(multiply_exports, {
    $multiply: ()=>$multiply
});
module.exports = __toCommonJS(multiply_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $multiply = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    return args.reduce((acc, num)=>acc * num, 1);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $multiply
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/pow.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var pow_exports = {};
__export(pow_exports, {
    $pow: ()=>$pow
});
module.exports = __toCommonJS(pow_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $pow = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(args) && args.length === 2 && args.every(import_util.isNumber), "$pow expression must resolve to array(2) of numbers");
    (0, import_util.assert)(!(args[0] === 0 && args[1] < 0), "$pow cannot raise 0 to a negative exponent");
    return Math.pow(args[0], args[1]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $pow
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    truncate: ()=>truncate
});
module.exports = __toCommonJS(internal_exports);
function truncate(num, places = 0, roundOff = false) {
    const sign = Math.abs(num) === num ? 1 : -1;
    num = Math.abs(num);
    let result = Math.trunc(num);
    const decimals = parseFloat((num - result).toFixed(places + 1));
    if (places === 0) {
        const firstDigit = Math.trunc(10 * decimals);
        if (roundOff && ((result & 1) === 1 && firstDigit >= 5 || firstDigit > 5)) {
            result++;
        }
    } else if (places > 0) {
        const offset = Math.pow(10, places);
        let remainder = Math.trunc(decimals * offset);
        const lastDigit = Math.trunc(decimals * offset * 10) % 10;
        if (roundOff && lastDigit > 5) {
            remainder += 1;
        }
        result = (result * offset + remainder) / offset;
    } else if (places < 0) {
        const offset = Math.pow(10, -1 * places);
        let excess = result % offset;
        result = Math.max(0, result - excess);
        if (roundOff && sign === -1) {
            while(excess > 10){
                excess -= excess % 10;
            }
            if (result > 0 && excess >= 5) {
                result += offset;
            }
        }
    }
    return result * sign;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    truncate
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/round.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var round_exports = {};
__export(round_exports, {
    $round: ()=>$round
});
module.exports = __toCommonJS(round_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/_internal.js [app-ssr] (ecmascript)");
const $round = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const num = args[0];
    const place = args[1];
    if ((0, import_util.isNil)(num) || isNaN(num) || Math.abs(num) === Infinity) return num;
    (0, import_util.assert)((0, import_util.isNumber)(num), "$round expression must resolve to a number.");
    return (0, import_internal.truncate)(num, place, true);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $round
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/sqrt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sqrt_exports = {};
__export(sqrt_exports, {
    $sqrt: ()=>$sqrt
});
module.exports = __toCommonJS(sqrt_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $sqrt = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    (0, import_util.assert)((0, import_util.isNumber)(n) && n > 0 || isNaN(n), "$sqrt expression must resolve to non-negative number.");
    return Math.sqrt(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sqrt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/subtract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var subtract_exports = {};
__export(subtract_exports, {
    $subtract: ()=>$subtract
});
module.exports = __toCommonJS(subtract_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $subtract = (obj, expr, options)=>{
    const [a, b] = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNumber)(a) && (0, import_util.isNumber)(b) || (0, import_util.isDate)(a) && (0, import_util.isDate)(b)) return +a - +b;
    if ((0, import_util.isDate)(a) && (0, import_util.isNumber)(b)) return new Date(+a - b);
    (0, import_util.assert)(false, "$subtract: must resolve to number/date.");
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $subtract
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/trunc.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var trunc_exports = {};
__export(trunc_exports, {
    $trunc: ()=>$trunc
});
module.exports = __toCommonJS(trunc_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/_internal.js [app-ssr] (ecmascript)");
const $trunc = (obj, expr, options)=>{
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    const num = arr[0];
    const places = arr[1];
    if ((0, import_util.isNil)(num) || isNaN(num) || Math.abs(num) === Infinity) return num;
    (0, import_util.assert)((0, import_util.isNumber)(num), "$trunc expression must resolve to a number.");
    (0, import_util.assert)((0, import_util.isNil)(places) || (0, import_util.isNumber)(places) && places > -20 && places < 100, "$trunc expression has invalid place");
    return (0, import_internal.truncate)(num, places, false);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $trunc
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var arithmetic_exports = {};
module.exports = __toCommonJS(arithmetic_exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/abs.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/add.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/ceil.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/divide.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/exp.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/floor.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/ln.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/log.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/log10.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/mod.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/multiply.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/pow.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/round.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/sqrt.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/subtract.js [app-ssr] (ecmascript)"), module.exports);
__reExport(arithmetic_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/trunc.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/abs.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/add.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/ceil.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/divide.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/exp.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/floor.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/ln.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/log.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/log10.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/mod.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/multiply.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/pow.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/round.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/sqrt.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/subtract.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/trunc.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/arrayElemAt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var arrayElemAt_exports = {};
__export(arrayElemAt_exports, {
    $arrayElemAt: ()=>$arrayElemAt
});
module.exports = __toCommonJS(arrayElemAt_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $arrayElemAt = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(args) && args.length === 2, "$arrayElemAt expression must resolve to array(2)");
    if (args.some(import_util.isNil)) return null;
    const index = args[1];
    const arr = args[0];
    if (index < 0 && Math.abs(index) <= arr.length) {
        return arr[(index + arr.length) % arr.length];
    } else if (index >= 0 && index < arr.length) {
        return arr[index];
    }
    return void 0;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $arrayElemAt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/arrayToObject.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var arrayToObject_exports = {};
__export(arrayToObject_exports, {
    $arrayToObject: ()=>$arrayToObject
});
module.exports = __toCommonJS(arrayToObject_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $arrayToObject = (obj, expr, options)=>{
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(arr), "$arrayToObject: expression must resolve to an array");
    return arr.reduce((newObj, val)=>{
        while((0, import_util.isArray)(val) && val.length === 1)val = val[0];
        if ((0, import_util.isArray)(val) && val.length == 2) {
            newObj[val[0]] = val[1];
        } else {
            const valObj = val;
            (0, import_util.assert)((0, import_util.isObject)(valObj) && (0, import_util.has)(valObj, "k") && (0, import_util.has)(valObj, "v"), "$arrayToObject expression is invalid.");
            newObj[valObj.k] = valObj.v;
        }
        return newObj;
    }, {});
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $arrayToObject
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/concatArrays.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var concatArrays_exports = {};
__export(concatArrays_exports, {
    $concatArrays: ()=>$concatArrays
});
module.exports = __toCommonJS(concatArrays_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $concatArrays = (obj, expr, options)=>{
    const nArray = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(nArray), "$concatArrays: input must resolve to an array");
    let size = 0;
    for (const arr of nArray){
        if ((0, import_util.isNil)(arr)) return null;
        size += arr.length;
    }
    const result = new Array(size);
    let i = 0;
    for (const arr of nArray)for (const item of arr)result[i++] = item;
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $concatArrays
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/filter.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var filter_exports = {};
__export(filter_exports, {
    $filter: ()=>$filter
});
module.exports = __toCommonJS(filter_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $filter = (obj, expr, options)=>{
    const input = (0, import_core.computeValue)(obj, expr.input, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "$filter 'input' expression must resolve to an array");
    const copts = import_core.ComputeOptions.init(options, obj);
    const k = expr.as || "this";
    const local = {
        variables: {
            [k]: null
        }
    };
    return input.filter((o)=>{
        local.variables[k] = o;
        const b = (0, import_core.computeValue)(obj, expr.cond, null, copts.update(copts.root, local));
        return (0, import_util.truthy)(b, options.useStrictMode);
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $filter
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/first.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var first_exports = {};
__export(first_exports, {
    $first: ()=>$first
});
module.exports = __toCommonJS(first_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_first = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/first.js [app-ssr] (ecmascript)");
const $first = (obj, expr, options)=>{
    if ((0, import_util.isArray)(obj)) return (0, import_first.$first)(obj, expr, options);
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(arr)) return null;
    (0, import_util.assert)((0, import_util.isArray)(arr) && arr.length > 0, "$first must resolve to a non-empty array.");
    return (0, import_util.flatten)(arr)[0];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $first
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/firstN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var firstN_exports = {};
__export(firstN_exports, {
    $firstN: ()=>$firstN
});
module.exports = __toCommonJS(firstN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_firstN = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/firstN.js [app-ssr] (ecmascript)");
const $firstN = (obj, expr, options)=>{
    if ((0, import_util.isArray)(obj)) return (0, import_firstN.$firstN)(obj, expr, options);
    const { input, n } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "Must resolve to an array/null or missing");
    return (0, import_firstN.$firstN)(input, {
        n,
        input: "$$this"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $firstN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/in.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var in_exports = {};
__export(in_exports, {
    $in: ()=>$in
});
module.exports = __toCommonJS(in_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $in = (obj, expr, options)=>{
    const [item, arr] = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(arr), "$in second argument must be an array");
    return arr.some((v)=>(0, import_util.isEqual)(v, item));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $in
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/indexOfArray.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var indexOfArray_exports = {};
__export(indexOfArray_exports, {
    $indexOfArray: ()=>$indexOfArray
});
module.exports = __toCommonJS(indexOfArray_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $indexOfArray = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(args)) return null;
    let arr = args[0];
    const searchValue = args[1];
    if ((0, import_util.isNil)(arr)) return null;
    (0, import_util.assert)((0, import_util.isArray)(arr), "$indexOfArray expression must resolve to an array.");
    const start = args[2] || 0;
    let end = args[3];
    if ((0, import_util.isNil)(end)) end = arr.length;
    if (start > end) return -1;
    (0, import_util.assert)(start >= 0 && end >= 0, "$indexOfArray expression is invalid");
    if (start > 0 || end < arr.length) {
        arr = arr.slice(start, end);
    }
    let index = -1;
    arr.some((v, i)=>{
        const b = (0, import_util.isEqual)(v, searchValue);
        if (b) index = i;
        return b;
    });
    return index + start;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $indexOfArray
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/isArray.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var isArray_exports = {};
__export(isArray_exports, {
    $isArray: ()=>$isArray
});
module.exports = __toCommonJS(isArray_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $isArray = (obj, expr, options)=>(0, import_util.isArray)((0, import_core.computeValue)(obj, expr[0], null, options));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $isArray
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/last.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var last_exports = {};
__export(last_exports, {
    $last: ()=>$last
});
module.exports = __toCommonJS(last_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_last = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/last.js [app-ssr] (ecmascript)");
const $last = (obj, expr, options)=>{
    if ((0, import_util.isArray)(obj)) return (0, import_last.$last)(obj, expr, options);
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(arr)) return null;
    (0, import_util.assert)((0, import_util.isArray)(arr) && arr.length > 0, "$last must resolve to a non-empty array.");
    return (0, import_util.flatten)(arr)[arr.length - 1];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $last
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/lastN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lastN_exports = {};
__export(lastN_exports, {
    $lastN: ()=>$lastN
});
module.exports = __toCommonJS(lastN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_lastN = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/lastN.js [app-ssr] (ecmascript)");
const $lastN = (obj, expr, options)=>{
    if ((0, import_util.isArray)(obj)) return (0, import_lastN.$lastN)(obj, expr, options);
    const { input, n } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "Must resolve to an array/null or missing");
    return (0, import_lastN.$lastN)(input, {
        n,
        input: "$$this"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lastN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/map.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var map_exports = {};
__export(map_exports, {
    $map: ()=>$map
});
module.exports = __toCommonJS(map_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $map = (obj, expr, options)=>{
    const input = (0, import_core.computeValue)(obj, expr.input, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), `$map 'input' expression must resolve to an array`);
    const copts = import_core.ComputeOptions.init(options);
    const k = expr.as || "this";
    return input.map((o)=>{
        return (0, import_core.computeValue)(obj, expr.in, null, copts.update(copts.root, {
            variables: {
                [k]: o
            }
        }));
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $map
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/maxN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var maxN_exports = {};
__export(maxN_exports, {
    $maxN: ()=>$maxN
});
module.exports = __toCommonJS(maxN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_maxN = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/maxN.js [app-ssr] (ecmascript)");
const $maxN = (obj, expr, options)=>{
    if ((0, import_util.isArray)(obj)) return (0, import_maxN.$maxN)(obj, expr, options);
    const { input, n } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "Must resolve to an array/null or missing");
    return (0, import_maxN.$maxN)(input, {
        n,
        input: "$$this"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $maxN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/minN.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var minN_exports = {};
__export(minN_exports, {
    $minN: ()=>$minN
});
module.exports = __toCommonJS(minN_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_minN = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/minN.js [app-ssr] (ecmascript)");
const $minN = (obj, expr, options)=>{
    if ((0, import_util.isArray)(obj)) return (0, import_minN.$minN)(obj, expr, options);
    const { input, n } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "Must resolve to an array/null or missing");
    return (0, import_minN.$minN)(input, {
        n,
        input: "$$this"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $minN
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/nin.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var nin_exports = {};
__export(nin_exports, {
    $nin: ()=>$nin
});
module.exports = __toCommonJS(nin_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $nin = (0, import_predicates.createExpressionOperator)(import_predicates.$nin);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $nin
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/range.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var range_exports = {};
__export(range_exports, {
    $range: ()=>$range
});
module.exports = __toCommonJS(range_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $range = (obj, expr, options)=>{
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    const start = arr[0];
    const end = arr[1];
    const step = arr[2] || 1;
    const result = new Array();
    let counter = start;
    while(counter < end && step > 0 || counter > end && step < 0){
        result.push(counter);
        counter += step;
    }
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $range
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/reduce.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var reduce_exports = {};
__export(reduce_exports, {
    $reduce: ()=>$reduce
});
module.exports = __toCommonJS(reduce_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $reduce = (obj, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    const input = (0, import_core.computeValue)(obj, expr.input, null, copts);
    const initialValue = (0, import_core.computeValue)(obj, expr.initialValue, null, copts);
    const inExpr = expr["in"];
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "$reduce 'input' expression must resolve to an array");
    return input.reduce((acc, n)=>{
        return (0, import_core.computeValue)(n, inExpr, null, copts.update(copts.root, {
            variables: {
                value: acc
            }
        }));
    }, initialValue);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $reduce
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/reverseArray.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var reverseArray_exports = {};
__export(reverseArray_exports, {
    $reverseArray: ()=>$reverseArray
});
module.exports = __toCommonJS(reverseArray_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $reverseArray = (obj, expr, options)=>{
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(arr)) return null;
    (0, import_util.assert)((0, import_util.isArray)(arr), "$reverseArray expression must resolve to an array");
    const result = arr.slice(0);
    result.reverse();
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $reverseArray
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/size.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var size_exports = {};
__export(size_exports, {
    $size: ()=>$size
});
module.exports = __toCommonJS(size_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $size = (obj, expr, options)=>{
    const value = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_util.isArray)(value) ? value.length : void 0;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $size
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/slice.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var slice_exports = {};
__export(slice_exports, {
    $slice: ()=>$slice
});
module.exports = __toCommonJS(slice_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $slice = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const arr = args[0];
    let skip = args[1];
    let limit = args[2];
    if ((0, import_util.isNil)(limit)) {
        if (skip < 0) {
            skip = Math.max(0, arr.length + skip);
        } else {
            limit = skip;
            skip = 0;
        }
    } else {
        if (skip < 0) {
            skip = Math.max(0, arr.length + skip);
        }
        (0, import_util.assert)(limit > 0, `Invalid argument for $slice operator. Limit must be a positive number`);
        limit += skip;
    }
    return arr.slice(skip, limit);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $slice
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/sortArray.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sortArray_exports = {};
__export(sortArray_exports, {
    $sortArray: ()=>$sortArray
});
module.exports = __toCommonJS(sortArray_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $sortArray = (obj, expr, options)=>{
    const { input, sortBy } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isArray)(input), "$sortArray expression must resolve to an array");
    if ((0, import_util.isObject)(sortBy)) {
        return new import_aggregator.Aggregator([
            {
                $sort: sortBy
            }
        ]).run(input);
    }
    const result = [
        ...input
    ];
    result.sort(import_util.compare);
    if (sortBy === -1) result.reverse();
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sortArray
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/zip.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var zip_exports = {};
__export(zip_exports, {
    $zip: ()=>$zip
});
module.exports = __toCommonJS(zip_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $zip = (obj, expr, options)=>{
    const inputs = (0, import_core.computeValue)(obj, expr.inputs, null, options);
    const useLongestLength = expr.useLongestLength || false;
    if ((0, import_util.isNil)(inputs)) return null;
    (0, import_util.assert)((0, import_util.isArray)(inputs), "'inputs' expression must resolve to an array");
    (0, import_util.assert)((0, import_util.isBoolean)(useLongestLength), "'useLongestLength' must be a boolean");
    if ((0, import_util.isArray)(expr.defaults)) {
        (0, import_util.assert)(useLongestLength, "'useLongestLength' must be set to true to use 'defaults'");
    }
    let zipCount = 0;
    for (const arr of inputs){
        if ((0, import_util.isNil)(arr)) return null;
        (0, import_util.assert)((0, import_util.isArray)(arr), "'inputs' expression values must resolve to an array or null");
        zipCount = useLongestLength ? Math.max(zipCount, arr.length) : Math.min(zipCount || arr.length, arr.length);
    }
    const result = [];
    const defaults = expr.defaults || [];
    for(let i = 0; i < zipCount; i++){
        const temp = inputs.map((val, index)=>{
            return (0, import_util.isNil)(val[i]) ? defaults[index] || null : val[i];
        });
        result.push(temp);
    }
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $zip
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/array/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var array_exports = {};
module.exports = __toCommonJS(array_exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/arrayElemAt.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/arrayToObject.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/concatArrays.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/filter.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/first.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/firstN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/in.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/indexOfArray.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/isArray.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/last.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/lastN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/map.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/maxN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/minN.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/nin.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/range.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/reduce.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/reverseArray.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/size.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/slice.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/sortArray.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/zip.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/arrayElemAt.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/arrayToObject.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/concatArrays.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/filter.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/first.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/firstN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/in.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/indexOfArray.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/isArray.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/last.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/lastN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/map.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/maxN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/minN.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/nin.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/range.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/reduce.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/reverseArray.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/size.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/slice.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/sortArray.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/zip.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    bitwise: ()=>bitwise
});
module.exports = __toCommonJS(internal_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const bitwise = (op, compute)=>(obj, expr, options)=>{
        (0, import_util.assert)((0, import_util.isArray)(expr), `${op}: expression must be an array.`);
        const nums = (0, import_core.computeValue)(obj, expr, null, options);
        if (nums.some(import_util.isNil)) return null;
        (0, import_util.assert)(nums.every(import_util.isNumber), `${op}: expression must evalue to array of numbers.`);
        return compute(nums);
    };
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    bitwise
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitAnd.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitAnd_exports = {};
__export(bitAnd_exports, {
    $bitAnd: ()=>$bitAnd
});
module.exports = __toCommonJS(bitAnd_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitAnd = (0, import_internal.bitwise)("$bitAnd", (nums)=>nums.reduce((a, b)=>a & b, -1));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitAnd
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitNot.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitNot_exports = {};
__export(bitNot_exports, {
    $bitNot: ()=>$bitNot
});
module.exports = __toCommonJS(bitNot_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $bitNot = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(n)) return null;
    if ((0, import_util.isNumber)(n)) return ~n;
    throw new import_util.MingoError("$bitNot: expression must evaluate to a number.");
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitNot
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitOr.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitOr_exports = {};
__export(bitOr_exports, {
    $bitOr: ()=>$bitOr
});
module.exports = __toCommonJS(bitOr_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitOr = (0, import_internal.bitwise)("$bitOr", (nums)=>nums.reduce((a, b)=>a | b, 0));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitOr
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitXor.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitXor_exports = {};
__export(bitXor_exports, {
    $bitXor: ()=>$bitXor
});
module.exports = __toCommonJS(bitXor_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitXor = (0, import_internal.bitwise)("$bitXor", (nums)=>nums.reduce((a, b)=>a ^ b, 0));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitXor
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitwise_exports = {};
module.exports = __toCommonJS(bitwise_exports);
__reExport(bitwise_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitAnd.js [app-ssr] (ecmascript)"), module.exports);
__reExport(bitwise_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitNot.js [app-ssr] (ecmascript)"), module.exports);
__reExport(bitwise_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitOr.js [app-ssr] (ecmascript)"), module.exports);
__reExport(bitwise_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitXor.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitAnd.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitNot.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitOr.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/bitXor.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/cond.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var cond_exports = {};
__export(cond_exports, {
    $cond: ()=>$cond
});
module.exports = __toCommonJS(cond_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $cond = (obj, expr, options)=>{
    let ifExpr;
    let thenExpr;
    let elseExpr;
    const errorMsg = "$cond: invalid arguments";
    if ((0, import_util.isArray)(expr)) {
        (0, import_util.assert)(expr.length === 3, errorMsg);
        ifExpr = expr[0];
        thenExpr = expr[1];
        elseExpr = expr[2];
    } else {
        (0, import_util.assert)((0, import_util.isObject)(expr), errorMsg);
        ifExpr = expr.if;
        thenExpr = expr.then;
        elseExpr = expr.else;
    }
    const condition = (0, import_util.truthy)((0, import_core.computeValue)(obj, ifExpr, null, options), options.useStrictMode);
    return (0, import_core.computeValue)(obj, condition ? thenExpr : elseExpr, null, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $cond
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/switch.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var switch_exports = {};
__export(switch_exports, {
    $switch: ()=>$switch
});
module.exports = __toCommonJS(switch_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $switch = (obj, expr, options)=>{
    let thenExpr = null;
    expr.branches.some((b)=>{
        const condition = (0, import_util.truthy)((0, import_core.computeValue)(obj, b.case, null, options), options.useStrictMode);
        if (condition) thenExpr = b.then;
        return condition;
    });
    return (0, import_core.computeValue)(obj, thenExpr !== null ? thenExpr : expr.default, null, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $switch
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var conditional_exports = {};
module.exports = __toCommonJS(conditional_exports);
__reExport(conditional_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/cond.js [app-ssr] (ecmascript)"), module.exports);
__reExport(conditional_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/ifNull.js [app-ssr] (ecmascript)"), module.exports);
__reExport(conditional_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/switch.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/cond.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/ifNull.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/switch.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/custom/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var custom_exports = {};
module.exports = __toCommonJS(custom_exports);
__reExport(custom_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/custom/function.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/custom/function.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateDiff.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateDiff_exports = {};
__export(dateDiff_exports, {
    $dateDiff: ()=>$dateDiff
});
module.exports = __toCommonJS(dateDiff_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $dateDiff = (obj, expr, options)=>{
    const { startDate, endDate, unit, timezone, startOfWeek } = (0, import_core.computeValue)(obj, expr, null, options);
    const d1 = new Date(startDate);
    const d2 = new Date(endDate);
    const minuteOffset = (0, import_internal.parseTimezone)(timezone);
    (0, import_internal.adjustDate)(d1, minuteOffset);
    (0, import_internal.adjustDate)(d2, minuteOffset);
    switch(unit){
        case "year":
            return (0, import_internal.dateDiffYear)(d1, d2);
        case "quarter":
            return (0, import_internal.dateDiffQuarter)(d1, d2);
        case "month":
            return (0, import_internal.dateDiffMonth)(d1, d2);
        case "week":
            return (0, import_internal.dateDiffWeek)(d1, d2, startOfWeek);
        case "day":
            return (0, import_internal.dateDiffDay)(d1, d2);
        case "hour":
            return (0, import_internal.dateDiffHour)(d1, d2);
        case "minute":
            d1.setUTCSeconds(0);
            d1.setUTCMilliseconds(0);
            d2.setUTCSeconds(0);
            d2.setUTCMilliseconds(0);
            return Math.round((d2.getTime() - d1.getTime()) / import_internal.TIMEUNIT_IN_MILLIS[unit]);
        default:
            return Math.round((d2.getTime() - d1.getTime()) / import_internal.TIMEUNIT_IN_MILLIS[unit]);
    }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateDiff
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateFromParts.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateFromParts_exports = {};
__export(dateFromParts_exports, {
    $dateFromParts: ()=>$dateFromParts
});
module.exports = __toCommonJS(dateFromParts_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const DAYS_IN_MONTH = [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
];
const getDaysInMonth = (date)=>{
    return date.month == 2 && (0, import_internal.isLeapYear)(date.year) ? 29 : DAYS_IN_MONTH[date.month - 1];
};
const $dateFromParts = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const minuteOffset = (0, import_internal.parseTimezone)(args.timezone);
    for(let i = import_internal.DATE_PART_INTERVAL.length - 1, remainder = 0; i >= 0; i--){
        const datePartInterval = import_internal.DATE_PART_INTERVAL[i];
        const k = datePartInterval[0];
        const min = datePartInterval[1];
        const max = datePartInterval[2];
        let part = (args[k] || 0) + remainder;
        remainder = 0;
        const limit = max + 1;
        if (k == "hour") part += Math.floor(minuteOffset / import_internal.MINUTES_PER_HOUR) * -1;
        if (k == "minute") part += minuteOffset % import_internal.MINUTES_PER_HOUR * -1;
        if (part < min) {
            const delta = min - part;
            remainder = -1 * Math.ceil(delta / limit);
            part = limit - delta % limit;
        } else if (part > max) {
            part += min;
            remainder = Math.trunc(part / limit);
            part %= limit;
        }
        args[k] = part;
    }
    args.day = Math.min(args.day, getDaysInMonth(args));
    return new Date(Date.UTC(args.year, args.month - 1, args.day, args.hour, args.minute, args.second, args.millisecond));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateFromParts
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateFromString.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateFromString_exports = {};
__export(dateFromString_exports, {
    $dateFromString: ()=>$dateFromString
});
module.exports = __toCommonJS(dateFromString_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const buildMap = (letters, sign)=>{
    const h = {};
    letters.split("").forEach((v, i)=>h[v] = sign * (i + 1));
    return h;
};
const TZ_LETTER_OFFSETS = {
    ...buildMap("ABCDEFGHIKLM", 1),
    ...buildMap("NOPQRSTUVWXY", -1),
    Z: 0
};
const regexStrip = (s)=>s.replace(/^\//, "").replace(/\/$/, "");
const REGEX_SPECIAL_CHARS = [
    "^",
    ".",
    "-",
    "*",
    "?",
    "$"
];
const regexQuote = (s)=>{
    REGEX_SPECIAL_CHARS.forEach((c)=>{
        s = s.replace(c, `\\${c}`);
    });
    return s;
};
const $dateFromString = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    args.format = args.format || import_internal.DATE_FORMAT;
    args.onNull = args.onNull || null;
    let dateString = args.dateString;
    if ((0, import_util.isNil)(dateString)) return args.onNull;
    const separators = args.format.split(/%[YGmdHMSLuVzZ]/);
    separators.reverse();
    const matches = args.format.match(/(%%|%Y|%G|%m|%d|%H|%M|%S|%L|%u|%V|%z|%Z)/g);
    const dateParts = {};
    let expectedPattern = "";
    for(let i = 0, len = matches.length; i < len; i++){
        const formatSpecifier = matches[i];
        const props = import_internal.DATE_SYM_TABLE[formatSpecifier];
        if ((0, import_util.isObject)(props)) {
            const m2 = props.re.exec(dateString);
            const delimiter = separators.pop() || "";
            if (m2 !== null) {
                dateParts[props.name] = /^\d+$/.exec(m2[0]) ? parseInt(m2[0]) : m2[0];
                dateString = dateString.substr(0, m2.index) + dateString.substr(m2.index + m2[0].length);
                expectedPattern += regexQuote(delimiter) + regexStrip(props.re.toString());
            } else {
                dateParts[props.name] = null;
            }
        }
    }
    if ((0, import_util.isNil)(dateParts.year) || (0, import_util.isNil)(dateParts.month) || (0, import_util.isNil)(dateParts.day) || !new RegExp("^" + expectedPattern + "[A-Z]?$").exec(args.dateString)) {
        return args.onError;
    }
    const m = args.dateString.match(/([A-Z])$/);
    (0, import_util.assert)(// only one of in-date timeone or timezone argument but not both.
    !(m && args.timezone), `$dateFromString: you cannot pass in a date/time string with time zone information ('${m && m[0]}') together with a timezone argument`);
    const minuteOffset = m ? TZ_LETTER_OFFSETS[m[0]] * import_internal.MINUTES_PER_HOUR : (0, import_internal.parseTimezone)(args.timezone);
    const d = new Date(Date.UTC(dateParts.year, dateParts.month - 1, dateParts.day, 0, 0, 0));
    if (!(0, import_util.isNil)(dateParts.hour)) d.setUTCHours(dateParts.hour);
    if (!(0, import_util.isNil)(dateParts.minute)) d.setUTCMinutes(dateParts.minute);
    if (!(0, import_util.isNil)(dateParts.second)) d.setUTCSeconds(dateParts.second);
    if (!(0, import_util.isNil)(dateParts.millisecond)) d.setUTCMilliseconds(dateParts.millisecond);
    (0, import_internal.adjustDate)(d, -minuteOffset);
    return d;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateFromString
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateSubtract.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateSubtract_exports = {};
__export(dateSubtract_exports, {
    $dateSubtract: ()=>$dateSubtract
});
module.exports = __toCommonJS(dateSubtract_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_dateAdd = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateAdd.js [app-ssr] (ecmascript)");
const $dateSubtract = (obj, expr, options)=>{
    const amount = (0, import_core.computeValue)(obj, expr?.amount, null, options);
    return (0, import_dateAdd.$dateAdd)(obj, {
        ...expr,
        amount: -1 * amount
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateSubtract
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToParts.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateToParts_exports = {};
__export(dateToParts_exports, {
    $dateToParts: ()=>$dateToParts
});
module.exports = __toCommonJS(dateToParts_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $dateToParts = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const d = new Date(args.date);
    const tz = (0, import_internal.parseTimezone)(args.timezone);
    (0, import_internal.adjustDate)(d, tz);
    const timePart = {
        hour: d.getUTCHours(),
        minute: d.getUTCMinutes(),
        second: d.getUTCSeconds(),
        millisecond: d.getUTCMilliseconds()
    };
    if (args.iso8601 == true) {
        return Object.assign(timePart, {
            isoWeekYear: (0, import_internal.isoWeekYear)(d),
            isoWeek: (0, import_internal.isoWeek)(d),
            isoDayOfWeek: d.getUTCDay() || 7
        });
    }
    return Object.assign(timePart, {
        year: d.getUTCFullYear(),
        month: d.getUTCMonth() + 1,
        day: d.getUTCDate()
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateToParts
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfMonth.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dayOfMonth_exports = {};
__export(dayOfMonth_exports, {
    $dayOfMonth: ()=>$dayOfMonth
});
module.exports = __toCommonJS(dayOfMonth_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $dayOfMonth = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCDate();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dayOfMonth
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/hour.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var hour_exports = {};
__export(hour_exports, {
    $hour: ()=>$hour
});
module.exports = __toCommonJS(hour_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $hour = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCHours();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $hour
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoDayOfWeek.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var isoDayOfWeek_exports = {};
__export(isoDayOfWeek_exports, {
    $isoDayOfWeek: ()=>$isoDayOfWeek
});
module.exports = __toCommonJS(isoDayOfWeek_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $isoDayOfWeek = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCDay() || 7;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $isoDayOfWeek
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeek.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var isoWeek_exports = {};
__export(isoWeek_exports, {
    $isoWeek: ()=>$isoWeek
});
module.exports = __toCommonJS(isoWeek_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $isoWeek = (obj, expr, options)=>{
    return (0, import_internal.isoWeek)((0, import_internal.computeDate)(obj, expr, options));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $isoWeek
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/millisecond.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var millisecond_exports = {};
__export(millisecond_exports, {
    $millisecond: ()=>$millisecond
});
module.exports = __toCommonJS(millisecond_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $millisecond = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCMilliseconds();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $millisecond
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/minute.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var minute_exports = {};
__export(minute_exports, {
    $minute: ()=>$minute
});
module.exports = __toCommonJS(minute_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $minute = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCMinutes();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $minute
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/month.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var month_exports = {};
__export(month_exports, {
    $month: ()=>$month
});
module.exports = __toCommonJS(month_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $month = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCMonth() + 1;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $month
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/second.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var second_exports = {};
__export(second_exports, {
    $second: ()=>$second
});
module.exports = __toCommonJS(second_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $second = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCSeconds();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $second
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/week.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var week_exports = {};
__export(week_exports, {
    $week: ()=>$week
});
module.exports = __toCommonJS(week_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $week = (obj, expr, options)=>{
    const d = (0, import_internal.computeDate)(obj, expr, options);
    const result = (0, import_internal.isoWeek)(d);
    if (d.getUTCDay() > 0 && d.getUTCDate() == 1 && d.getUTCMonth() == 0) return 0;
    if (d.getUTCDay() == 0) return result + 1;
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $week
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/year.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var year_exports = {};
__export(year_exports, {
    $year: ()=>$year
});
module.exports = __toCommonJS(year_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $year = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCFullYear();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $year
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToString.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateToString_exports = {};
__export(dateToString_exports, {
    $dateToString: ()=>$dateToString
});
module.exports = __toCommonJS(dateToString_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
var import_dayOfMonth = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfMonth.js [app-ssr] (ecmascript)");
var import_hour = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/hour.js [app-ssr] (ecmascript)");
var import_isoDayOfWeek = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoDayOfWeek.js [app-ssr] (ecmascript)");
var import_isoWeek = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeek.js [app-ssr] (ecmascript)");
var import_millisecond = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/millisecond.js [app-ssr] (ecmascript)");
var import_minute = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/minute.js [app-ssr] (ecmascript)");
var import_month = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/month.js [app-ssr] (ecmascript)");
var import_second = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/second.js [app-ssr] (ecmascript)");
var import_week = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/week.js [app-ssr] (ecmascript)");
var import_year = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/year.js [app-ssr] (ecmascript)");
const DATE_FUNCTIONS = {
    "%Y": import_year.$year,
    "%G": import_year.$year,
    "%m": import_month.$month,
    "%d": import_dayOfMonth.$dayOfMonth,
    "%H": import_hour.$hour,
    "%M": import_minute.$minute,
    "%S": import_second.$second,
    "%L": import_millisecond.$millisecond,
    "%u": import_isoDayOfWeek.$isoDayOfWeek,
    "%U": import_week.$week,
    "%V": import_isoWeek.$isoWeek
};
const $dateToString = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(args.onNull)) args.onNull = null;
    if ((0, import_util.isNil)(args.date)) return args.onNull;
    const date = (0, import_internal.computeDate)(obj, args.date, options);
    let format = args.format || import_internal.DATE_FORMAT;
    const minuteOffset = (0, import_internal.parseTimezone)(args.timezone);
    const matches = format.match(/(%%|%Y|%G|%m|%d|%H|%M|%S|%L|%u|%U|%V|%z|%Z)/g);
    (0, import_internal.adjustDate)(date, minuteOffset);
    for(let i = 0, len = matches.length; i < len; i++){
        const formatSpecifier = matches[i];
        const props = import_internal.DATE_SYM_TABLE[formatSpecifier];
        const operatorFn = DATE_FUNCTIONS[formatSpecifier];
        let value;
        if ((0, import_util.isObject)(props)) {
            if (props.name === "timezone") {
                value = (0, import_internal.formatTimezone)(minuteOffset);
            } else if (props.name === "minuteOffset") {
                value = minuteOffset.toString();
            } else {
                (0, import_util.assert)(!!operatorFn, `unsupported date format specifier '${formatSpecifier}'`);
                value = (0, import_internal.padDigits)(operatorFn(obj, date, options), props.padding);
            }
        }
        format = format.replace(formatSpecifier, value);
    }
    return format;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateToString
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateTrunc.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dateTrunc_exports = {};
__export(dateTrunc_exports, {
    $dateTrunc: ()=>$dateTrunc
});
module.exports = __toCommonJS(dateTrunc_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_types = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/types.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const REF_DATE_MILLIS = 9466848e5;
const distanceToBinLowerBound = (value, binSize)=>{
    let remainder = value % binSize;
    if (remainder < 0) {
        remainder += binSize;
    }
    return remainder;
};
const DATE_DIFF_FN = {
    day: import_internal.dateDiffDay,
    month: import_internal.dateDiffMonth,
    quarter: import_internal.dateDiffQuarter,
    year: import_internal.dateDiffYear
};
const $dateTrunc = (obj, expr, options)=>{
    const { date, unit, binSize: optBinSize, timezone, startOfWeek: optStartOfWeek } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(date) || (0, import_util.isNil)(unit)) return null;
    const startOfWeek = (optStartOfWeek ?? "sun").toLowerCase().substring(0, 3);
    (0, import_util.assert)((0, import_util.isDate)(date), "$dateTrunc: 'date' must resolve to a valid Date object.");
    (0, import_util.assert)(import_types.TIME_UNITS.includes(unit), "$dateTrunc: unit is invalid.");
    (0, import_util.assert)(unit != "week" || import_internal.DAYS_OF_WEEK_SET.has(startOfWeek), `$dateTrunc: startOfWeek '${startOfWeek}' is not a valid.`);
    (0, import_util.assert)((0, import_util.isNil)(optBinSize) || optBinSize > 0, "$dateTrunc requires 'binSize' to be greater than 0, but got value 0.");
    const binSize = optBinSize ?? 1;
    switch(unit){
        case "millisecond":
        case "second":
        case "minute":
        case "hour":
            {
                const binSizeMillis = binSize * import_internal.TIMEUNIT_IN_MILLIS[unit];
                const shiftedDate = date.getTime() - REF_DATE_MILLIS;
                return new Date(date.getTime() - distanceToBinLowerBound(shiftedDate, binSizeMillis));
            }
        default:
            {
                (0, import_util.assert)(binSize <= 1e11, "dateTrunc unsupported binSize value");
                const d = new Date(date);
                const refPointDate = new Date(REF_DATE_MILLIS);
                let distanceFromRefPoint = 0;
                if (unit == "week") {
                    const refPointDayOfWeek = (0, import_internal.isoWeekday)(refPointDate, startOfWeek);
                    const daysToAdjustBy = (import_internal.DAYS_PER_WEEK - refPointDayOfWeek) % import_internal.DAYS_PER_WEEK;
                    refPointDate.setTime(refPointDate.getTime() + daysToAdjustBy * import_internal.TIMEUNIT_IN_MILLIS.day);
                    distanceFromRefPoint = (0, import_internal.dateDiffWeek)(refPointDate, d, startOfWeek);
                } else {
                    distanceFromRefPoint = DATE_DIFF_FN[unit](refPointDate, d);
                }
                const binLowerBoundFromRefPoint = distanceFromRefPoint - distanceToBinLowerBound(distanceFromRefPoint, binSize);
                const newDate = (0, import_internal.dateAdd)(refPointDate, unit, binLowerBoundFromRefPoint, timezone);
                const minuteOffset = (0, import_internal.parseTimezone)(timezone);
                (0, import_internal.adjustDate)(newDate, -minuteOffset);
                return newDate;
            }
    }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dateTrunc
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfWeek.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dayOfWeek_exports = {};
__export(dayOfWeek_exports, {
    $dayOfWeek: ()=>$dayOfWeek
});
module.exports = __toCommonJS(dayOfWeek_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $dayOfWeek = (obj, expr, options)=>{
    return (0, import_internal.computeDate)(obj, expr, options).getUTCDay() + 1;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dayOfWeek
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfYear.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var dayOfYear_exports = {};
__export(dayOfYear_exports, {
    $dayOfYear: ()=>$dayOfYear
});
module.exports = __toCommonJS(dayOfYear_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $dayOfYear = (obj, expr, options)=>{
    return (0, import_internal.dayOfYear)((0, import_internal.computeDate)(obj, expr, options));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $dayOfYear
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeekYear.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var isoWeekYear_exports = {};
__export(isoWeekYear_exports, {
    $isoWeekYear: ()=>$isoWeekYear
});
module.exports = __toCommonJS(isoWeekYear_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/_internal.js [app-ssr] (ecmascript)");
const $isoWeekYear = (obj, expr, options)=>(0, import_internal.isoWeekYear)((0, import_internal.computeDate)(obj, expr, options));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $isoWeekYear
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/date/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var date_exports = {};
module.exports = __toCommonJS(date_exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateAdd.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateDiff.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateFromParts.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateFromString.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateSubtract.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToParts.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToString.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateTrunc.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfMonth.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfWeek.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfYear.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/hour.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoDayOfWeek.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeek.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeekYear.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/millisecond.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/minute.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/month.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/second.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/week.js [app-ssr] (ecmascript)"), module.exports);
__reExport(date_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/year.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateAdd.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateDiff.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateFromParts.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateFromString.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateSubtract.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToParts.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToString.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateTrunc.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfMonth.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfWeek.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dayOfYear.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/hour.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoDayOfWeek.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeek.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/isoWeekYear.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/millisecond.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/minute.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/month.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/second.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/week.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/year.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/literal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var literal_exports = {};
__export(literal_exports, {
    $literal: ()=>$literal
});
module.exports = __toCommonJS(literal_exports);
const $literal = (_obj, expr, _options)=>expr;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $literal
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/median.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var median_exports = {};
__export(median_exports, {
    $median: ()=>$median
});
module.exports = __toCommonJS(median_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_median = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/median.js [app-ssr] (ecmascript)");
const $median = (obj, expr, options)=>{
    const input = (0, import_core.computeValue)(obj, expr.input, null, options);
    return (0, import_median.$median)(input, {
        input: "$$CURRENT"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $median
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/misc/getField.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var getField_exports = {};
__export(getField_exports, {
    $getField: ()=>$getField
});
module.exports = __toCommonJS(getField_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $getField = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const [field, input] = (0, import_util.isObject)(args) ? [
        args.field,
        args.input || obj
    ] : [
        args,
        obj
    ];
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isObject)(input), "$getField expression 'input' must evaluate to an object");
    (0, import_util.assert)((0, import_util.isString)(field), "$getField expression 'field' must evaluate to a string");
    return input[field];
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $getField
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/misc/rand.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var rand_exports = {};
__export(rand_exports, {
    $rand: ()=>$rand
});
module.exports = __toCommonJS(rand_exports);
const $rand = (_obj, _expr, _options)=>Math.random();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $rand
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/misc/sampleRate.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sampleRate_exports = {};
__export(sampleRate_exports, {
    $sampleRate: ()=>$sampleRate
});
module.exports = __toCommonJS(sampleRate_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $sampleRate = (obj, expr, options)=>Math.random() <= (0, import_core.computeValue)(obj, expr, null, options);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sampleRate
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/misc/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var misc_exports = {};
module.exports = __toCommonJS(misc_exports);
__reExport(misc_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/getField.js [app-ssr] (ecmascript)"), module.exports);
__reExport(misc_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/rand.js [app-ssr] (ecmascript)"), module.exports);
__reExport(misc_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/sampleRate.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/getField.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/rand.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/sampleRate.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/object/objectToArray.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var objectToArray_exports = {};
__export(objectToArray_exports, {
    $objectToArray: ()=>$objectToArray
});
module.exports = __toCommonJS(objectToArray_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $objectToArray = (obj, expr, options)=>{
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(val)) return null;
    (0, import_util.assert)((0, import_util.isObject)(val), `$objectToArray requires a document input, found: ${(0, import_util.typeOf)(val)}`);
    const entries = Object.entries(val);
    const result = new Array(entries.length);
    let i = 0;
    for (const [k, v] of entries){
        result[i++] = {
            k,
            v
        };
    }
    return result;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $objectToArray
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/object/setField.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setField_exports = {};
__export(setField_exports, {
    $setField: ()=>$setField
});
module.exports = __toCommonJS(setField_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $setField = (obj, expr, options)=>{
    const { input, field, value } = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(input)) return null;
    (0, import_util.assert)((0, import_util.isObject)(input), "$setField expression 'input' must evaluate to an object");
    (0, import_util.assert)((0, import_util.isString)(field), "$setField expression 'field' must evaluate to a string");
    const newObj = {
        ...input
    };
    if (expr.value == "$$REMOVE") {
        delete newObj[field];
    } else {
        newObj[field] = value;
    }
    return newObj;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setField
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/object/unsetField.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var unsetField_exports = {};
__export(unsetField_exports, {
    $unsetField: ()=>$unsetField
});
module.exports = __toCommonJS(unsetField_exports);
var import_setField = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/setField.js [app-ssr] (ecmascript)");
const $unsetField = (obj, expr, options)=>{
    return (0, import_setField.$setField)(obj, {
        ...expr,
        value: "$$REMOVE"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $unsetField
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/object/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var object_exports = {};
module.exports = __toCommonJS(object_exports);
__reExport(object_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/mergeObjects.js [app-ssr] (ecmascript)"), module.exports);
__reExport(object_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/objectToArray.js [app-ssr] (ecmascript)"), module.exports);
__reExport(object_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/setField.js [app-ssr] (ecmascript)"), module.exports);
__reExport(object_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/unsetField.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/mergeObjects.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/objectToArray.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/setField.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/unsetField.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/percentile.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var percentile_exports = {};
__export(percentile_exports, {
    $percentile: ()=>$percentile
});
module.exports = __toCommonJS(percentile_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_percentile = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/accumulator/percentile.js [app-ssr] (ecmascript)");
const $percentile = (obj, expr, options)=>{
    const input = (0, import_core.computeValue)(obj, expr.input, null, options);
    return (0, import_percentile.$percentile)(input, {
        ...expr,
        input: "$$CURRENT"
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $percentile
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/allElementsTrue.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var allElementsTrue_exports = {};
__export(allElementsTrue_exports, {
    $allElementsTrue: ()=>$allElementsTrue
});
module.exports = __toCommonJS(allElementsTrue_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $allElementsTrue = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options)[0];
    return args.every((v)=>(0, import_util.truthy)(v, options.useStrictMode));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $allElementsTrue
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/anyElementTrue.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var anyElementTrue_exports = {};
__export(anyElementTrue_exports, {
    $anyElementTrue: ()=>$anyElementTrue
});
module.exports = __toCommonJS(anyElementTrue_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $anyElementTrue = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options)[0];
    return args.some((v)=>(0, import_util.truthy)(v, options.useStrictMode));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $anyElementTrue
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/setDifference.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setDifference_exports = {};
__export(setDifference_exports, {
    $setDifference: ()=>$setDifference
});
module.exports = __toCommonJS(setDifference_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $setDifference = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(args)) return null;
    (0, import_util.assert)((0, import_util.isArray)(args), "$setDifference must be an arrays.");
    if (args.some(import_util.isNil)) return null;
    (0, import_util.assert)(args.length == 2, `$setDifference takes exactly 2 arguments.`);
    (0, import_util.assert)(args.every(import_util.isArray), "$setDifference operands must be arrays.");
    const m = import_util.ValueMap.init(options.hashFunction);
    args[0].forEach((v)=>m.set(v, true));
    args[1].forEach((v)=>m.delete(v));
    return Array.from(m.keys());
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setDifference
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/setEquals.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setEquals_exports = {};
__export(setEquals_exports, {
    $setEquals: ()=>$setEquals
});
module.exports = __toCommonJS(setEquals_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $setEquals = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(args) && args.every(import_util.isArray), "$setEquals operands must be arrays.");
    const map = import_util.ValueMap.init();
    args[0].every((v, i)=>map.set(v, i));
    for(let i = 1; i < args.length; i++){
        const arr = args[i];
        const set = /* @__PURE__ */ new Set();
        for(let j = 0; j < arr.length; j++){
            const n = map.get(arr[j]) ?? -1;
            if (n === -1) return false;
            set.add(n);
        }
        if (set.size !== map.size) return false;
    }
    return true;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setEquals
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/setIntersection.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setIntersection_exports = {};
__export(setIntersection_exports, {
    $setIntersection: ()=>$setIntersection
});
module.exports = __toCommonJS(setIntersection_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $setIntersection = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(args)) return null;
    (0, import_util.assert)((0, import_util.isArray)(args) && args.every(import_util.isArray), "$setIntersection operands must be arrays.");
    return (0, import_util.intersection)(args, options?.hashFunction);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setIntersection
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/setIsSubset.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setIsSubset_exports = {};
__export(setIsSubset_exports, {
    $setIsSubset: ()=>$setIsSubset
});
module.exports = __toCommonJS(setIsSubset_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $setIsSubset = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)((0, import_util.isArray)(args) && args.every(import_util.isArray), "$setIsSubset operands must be arrays.");
    const first = args[0];
    const second = args[1];
    const map = import_util.ValueMap.init();
    const set = /* @__PURE__ */ new Set();
    first.every((v, i)=>map.set(v, i));
    for (const v of second){
        set.add(map.get(v) ?? -1);
        if (set.size > map.size) return true;
    }
    set.delete(-1);
    return set.size == map.size;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setIsSubset
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/setUnion.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var setUnion_exports = {};
__export(setUnion_exports, {
    $setUnion: ()=>$setUnion
});
module.exports = __toCommonJS(setUnion_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $setUnion = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(args)) return null;
    (0, import_util.assert)((0, import_util.isArray)(args), "$setUnion operands must be arrays.");
    if (args.some(import_util.isNil)) return null;
    return (0, import_util.unique)((0, import_util.flatten)(args), options?.hashFunction);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $setUnion
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/set/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var set_exports = {};
module.exports = __toCommonJS(set_exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/allElementsTrue.js [app-ssr] (ecmascript)"), module.exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/anyElementTrue.js [app-ssr] (ecmascript)"), module.exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setDifference.js [app-ssr] (ecmascript)"), module.exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setEquals.js [app-ssr] (ecmascript)"), module.exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setIntersection.js [app-ssr] (ecmascript)"), module.exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setIsSubset.js [app-ssr] (ecmascript)"), module.exports);
__reExport(set_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setUnion.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/allElementsTrue.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/anyElementTrue.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setDifference.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setEquals.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setIntersection.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setIsSubset.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/setUnion.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/concat.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var concat_exports = {};
__export(concat_exports, {
    $concat: ()=>$concat
});
module.exports = __toCommonJS(concat_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $concat = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    (0, import_util.assert)(args.every((v)=>(0, import_util.isString)(v) || (0, import_util.isNil)(v)), "$concat only supports strings.");
    if (args.some(import_util.isNil)) return null;
    return args.join("");
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $concat
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/indexOfBytes.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var indexOfBytes_exports = {};
__export(indexOfBytes_exports, {
    $indexOfBytes: ()=>$indexOfBytes
});
module.exports = __toCommonJS(indexOfBytes_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $indexOfBytes = (obj, expr, options)=>{
    const arr = (0, import_core.computeValue)(obj, expr, null, options);
    const errorMsg = "$indexOfBytes expression resolves to invalid an argument";
    if ((0, import_util.isNil)(arr[0])) return null;
    (0, import_util.assert)((0, import_util.isString)(arr[0]) && (0, import_util.isString)(arr[1]), errorMsg);
    const str = arr[0];
    const searchStr = arr[1];
    let start = arr[2];
    let end = arr[3];
    let valid = (0, import_util.isNil)(start) || (0, import_util.isNumber)(start) && start >= 0 && Math.round(start) === start;
    valid = valid && ((0, import_util.isNil)(end) || (0, import_util.isNumber)(end) && end >= 0 && Math.round(end) === end);
    (0, import_util.assert)(valid, errorMsg);
    start = start || 0;
    end = end || str.length;
    if (start > end) return -1;
    const index = str.substring(start, end).indexOf(searchStr);
    return index > -1 ? index + start : index;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $indexOfBytes
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    regexSearch: ()=>regexSearch,
    trimString: ()=>trimString
});
module.exports = __toCommonJS(internal_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const WHITESPACE_CHARS = [
    0,
    // '\0' Null character
    32,
    // ' ', Space
    9,
    // '\t' Horizontal tab
    10,
    // '\n' Line feed/new line
    11,
    // '\v' Vertical tab
    12,
    // '\f' Form feed
    13,
    // '\r' Carriage return
    160,
    // Non-breaking space
    5760,
    // Ogham space mark
    8192,
    // En quad
    8193,
    // Em quad
    8194,
    // En space
    8195,
    // Em space
    8196,
    // Three-per-em space
    8197,
    // Four-per-em space
    8198,
    // Six-per-em space
    8199,
    // Figure space
    8200,
    // Punctuation space
    8201,
    // Thin space
    8202
];
function trimString(obj, expr, options, trimOpts) {
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    const s = val.input;
    if ((0, import_util.isNil)(s)) return null;
    const codepoints = (0, import_util.isNil)(val.chars) ? WHITESPACE_CHARS : val.chars.split("").map((c)=>c.codePointAt(0));
    let i = 0;
    let j = s.length - 1;
    while(trimOpts.left && i <= j && codepoints.indexOf(s[i].codePointAt(0)) !== -1)i++;
    while(trimOpts.right && i <= j && codepoints.indexOf(s[j].codePointAt(0)) !== -1)j--;
    return s.substring(i, j + 1);
}
function regexSearch(obj, expr, options, reOpts) {
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if (!(0, import_util.isString)(val.input)) return [];
    const regexOptions = val.options;
    if (regexOptions) {
        (0, import_util.assert)(regexOptions.indexOf("x") === -1, "extended capability option 'x' not supported");
        (0, import_util.assert)(regexOptions.indexOf("g") === -1, "global option 'g' not supported");
    }
    let input = val.input;
    const re = new RegExp(val.regex, regexOptions);
    let m;
    const matches = new Array();
    let offset = 0;
    while(m = re.exec(input)){
        const result = {
            match: m[0],
            idx: m.index + offset,
            captures: []
        };
        for(let i = 1; i < m.length; i++)result.captures.push(m[i] || null);
        matches.push(result);
        if (!reOpts.global) break;
        offset = m.index + m[0].length;
        input = input.substring(offset);
    }
    return matches;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    regexSearch,
    trimString
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/ltrim.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var ltrim_exports = {};
__export(ltrim_exports, {
    $ltrim: ()=>$ltrim
});
module.exports = __toCommonJS(ltrim_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)");
const $ltrim = (obj, expr, options)=>{
    return (0, import_internal.trimString)(obj, expr, options, {
        left: true,
        right: false
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $ltrim
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexFind.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var regexFind_exports = {};
__export(regexFind_exports, {
    $regexFind: ()=>$regexFind
});
module.exports = __toCommonJS(regexFind_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)");
const $regexFind = (obj, expr, options)=>{
    const result = (0, import_internal.regexSearch)(obj, expr, options, {
        global: false
    });
    return result && result.length > 0 ? result[0] : null;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $regexFind
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexFindAll.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var regexFindAll_exports = {};
__export(regexFindAll_exports, {
    $regexFindAll: ()=>$regexFindAll
});
module.exports = __toCommonJS(regexFindAll_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)");
const $regexFindAll = (obj, expr, options)=>{
    return (0, import_internal.regexSearch)(obj, expr, options, {
        global: true
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $regexFindAll
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexMatch.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var regexMatch_exports = {};
__export(regexMatch_exports, {
    $regexMatch: ()=>$regexMatch
});
module.exports = __toCommonJS(regexMatch_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)");
const $regexMatch = (obj, expr, options)=>{
    return (0, import_internal.regexSearch)(obj, expr, options, {
        global: false
    }).length != 0;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $regexMatch
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/replaceAll.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var replaceAll_exports = {};
__export(replaceAll_exports, {
    $replaceAll: ()=>$replaceAll
});
module.exports = __toCommonJS(replaceAll_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $replaceAll = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const arr = [
        args.input,
        args.find,
        args.replacement
    ];
    if (arr.some(import_util.isNil)) return null;
    (0, import_util.assert)(arr.every(import_util.isString), "$replaceAll expression fields must evaluate to string");
    return args.input.replace(new RegExp(args.find, "g"), args.replacement);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $replaceAll
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/replaceOne.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var replaceOne_exports = {};
__export(replaceOne_exports, {
    $replaceOne: ()=>$replaceOne
});
module.exports = __toCommonJS(replaceOne_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $replaceOne = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const arr = [
        args.input,
        args.find,
        args.replacement
    ];
    if (arr.some(import_util.isNil)) return null;
    (0, import_util.assert)(arr.every(import_util.isString), "$replaceOne expression fields must evaluate to string");
    return args.input.replace(args.find, args.replacement);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $replaceOne
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/rtrim.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var rtrim_exports = {};
__export(rtrim_exports, {
    $rtrim: ()=>$rtrim
});
module.exports = __toCommonJS(rtrim_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)");
const $rtrim = (obj, expr, options)=>{
    return (0, import_internal.trimString)(obj, expr, options, {
        left: false,
        right: true
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $rtrim
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/split.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var split_exports = {};
__export(split_exports, {
    $split: ()=>$split
});
module.exports = __toCommonJS(split_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $split = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(args[0])) return null;
    (0, import_util.assert)(args.every(import_util.isString), "$split expression must result to array(2) of strings");
    return args[0].split(args[1]);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $split
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/strcasecmp.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var strcasecmp_exports = {};
__export(strcasecmp_exports, {
    $strcasecmp: ()=>$strcasecmp
});
module.exports = __toCommonJS(strcasecmp_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $strcasecmp = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    let a = args[0];
    let b = args[1];
    if ((0, import_util.isEqual)(a, b) || args.every(import_util.isNil)) return 0;
    (0, import_util.assert)(args.every(import_util.isString), "$strcasecmp must resolve to array(2) of strings");
    a = a.toUpperCase();
    b = b.toUpperCase();
    return a > b && 1 || a < b && -1 || 0;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $strcasecmp
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/strLenBytes.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var strLenBytes_exports = {};
__export(strLenBytes_exports, {
    $strLenBytes: ()=>$strLenBytes
});
module.exports = __toCommonJS(strLenBytes_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $strLenBytes = (obj, expr, options)=>{
    return ~-encodeURI((0, import_core.computeValue)(obj, expr, null, options)).split(/%..|./).length;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $strLenBytes
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/strLenCP.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var strLenCP_exports = {};
__export(strLenCP_exports, {
    $strLenCP: ()=>$strLenCP
});
module.exports = __toCommonJS(strLenCP_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $strLenCP = (obj, expr, options)=>{
    return (0, import_core.computeValue)(obj, expr, null, options).length;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $strLenCP
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/substr.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var substr_exports = {};
__export(substr_exports, {
    $substr: ()=>$substr
});
module.exports = __toCommonJS(substr_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $substr = (obj, expr, options)=>{
    const [s, start, count] = (0, import_core.computeValue)(obj, expr, null, options);
    if (start < 0 || !(0, import_util.isString)(s)) return "";
    if (count < 0) return s.substring(start);
    return s.substring(start, start + count);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $substr
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/substrBytes.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var substrBytes_exports = {};
__export(substrBytes_exports, {
    $substrBytes: ()=>$substrBytes
});
module.exports = __toCommonJS(substrBytes_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const UTF8_MASK = [
    192,
    224,
    240
];
function toUtf8(n) {
    if (n < 128) return [
        n
    ];
    let count = n < 2048 && 1 || n < 65536 && 2 || 3;
    const offset = UTF8_MASK[count - 1];
    const utf8 = [
        (n >> 6 * count) + offset
    ];
    while(count > 0)utf8.push(128 | n >> 6 * --count & 63);
    return utf8;
}
function utf8Encode(s) {
    const buf = [];
    for(let i = 0, len = s.length; i < len; i++){
        buf.push(toUtf8(s.codePointAt(i)));
    }
    return buf;
}
const $substrBytes = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    const s = args[0];
    const index = args[1];
    const count = args[2];
    (0, import_util.assert)((0, import_util.isString)(s) && (0, import_util.isNumber)(index) && index >= 0 && (0, import_util.isNumber)(count) && count >= 0, "$substrBytes: invalid arguments");
    const buf = utf8Encode(s);
    const validIndex = [];
    let acc = 0;
    for(let i = 0; i < buf.length; i++){
        validIndex.push(acc);
        acc += buf[i].length;
    }
    const begin = validIndex.indexOf(index);
    const end = validIndex.indexOf(index + count);
    (0, import_util.assert)(begin > -1 && end > -1, "$substrBytes: invalid range, start or end index is a UTF-8 continuation byte.");
    return s.substring(begin, end);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $substrBytes
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/substrCP.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var substrCP_exports = {};
__export(substrCP_exports, {
    $substrCP: ()=>$substrCP
});
module.exports = __toCommonJS(substrCP_exports);
var import_substr = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substr.js [app-ssr] (ecmascript)");
const $substrCP = (obj, expr, options)=>{
    return (0, import_substr.$substr)(obj, expr, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $substrCP
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/toLower.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toLower_exports = {};
__export(toLower_exports, {
    $toLower: ()=>$toLower
});
module.exports = __toCommonJS(toLower_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $toLower = (obj, expr, options)=>{
    const value = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_util.isEmpty)(value) ? "" : value.toLowerCase();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toLower
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/toUpper.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toUpper_exports = {};
__export(toUpper_exports, {
    $toUpper: ()=>$toUpper
});
module.exports = __toCommonJS(toUpper_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $toUpper = (obj, expr, options)=>{
    const value = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_util.isEmpty)(value) ? "" : value.toUpperCase();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toUpper
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/trim.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var trim_exports = {};
__export(trim_exports, {
    $trim: ()=>$trim
});
module.exports = __toCommonJS(trim_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/_internal.js [app-ssr] (ecmascript)");
const $trim = (obj, expr, options)=>{
    return (0, import_internal.trimString)(obj, expr, options, {
        left: true,
        right: true
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $trim
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/string/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var string_exports = {};
module.exports = __toCommonJS(string_exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/concat.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/indexOfBytes.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/ltrim.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexFind.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexFindAll.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexMatch.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/replaceAll.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/replaceOne.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/rtrim.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/split.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/strcasecmp.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/strLenBytes.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/strLenCP.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substr.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substrBytes.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substrCP.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/toLower.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/toUpper.js [app-ssr] (ecmascript)"), module.exports);
__reExport(string_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/trim.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/concat.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/indexOfBytes.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/ltrim.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexFind.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexFindAll.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/regexMatch.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/replaceAll.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/replaceOne.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/rtrim.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/split.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/strcasecmp.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/strLenBytes.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/strLenCP.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substr.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substrBytes.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/substrCP.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/toLower.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/toUpper.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/trim.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    createTrignometryOperator: ()=>createTrignometryOperator
});
module.exports = __toCommonJS(internal_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const FIXED_POINTS = {
    undefined: null,
    null: null,
    NaN: NaN,
    Infinity: new Error(),
    "-Infinity": new Error()
};
function createTrignometryOperator(f, fixedPoints = FIXED_POINTS) {
    const fp = Object.assign({}, FIXED_POINTS, fixedPoints);
    const keySet = new Set(Object.keys(fp));
    return (obj, expr, options)=>{
        const n = (0, import_core.computeValue)(obj, expr, null, options);
        if (keySet.has(`${n}`)) {
            const res = fp[`${n}`];
            if (res instanceof Error) {
                throw new import_util.MingoError(`cannot apply $${f.name} to -inf, value must in (-inf,inf)`);
            }
            return res;
        }
        return f(n);
    };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    createTrignometryOperator
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/acos.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var acos_exports = {};
__export(acos_exports, {
    $acos: ()=>$acos
});
module.exports = __toCommonJS(acos_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $acos = (0, import_internal.createTrignometryOperator)(Math.acos, {
    Infinity: Infinity,
    0: new Error()
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $acos
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/acosh.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var acosh_exports = {};
__export(acosh_exports, {
    $acosh: ()=>$acosh
});
module.exports = __toCommonJS(acosh_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $acosh = (0, import_internal.createTrignometryOperator)(Math.acosh, {
    Infinity: Infinity,
    0: new Error()
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $acosh
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/asin.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var asin_exports = {};
__export(asin_exports, {
    $asin: ()=>$asin
});
module.exports = __toCommonJS(asin_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $asin = (0, import_internal.createTrignometryOperator)(Math.asin);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $asin
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/asinh.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var asinh_exports = {};
__export(asinh_exports, {
    $asinh: ()=>$asinh
});
module.exports = __toCommonJS(asinh_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $asinh = (0, import_internal.createTrignometryOperator)(Math.asinh, {
    Infinity: Infinity,
    "-Infinity": -Infinity
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $asinh
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atan.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var atan_exports = {};
__export(atan_exports, {
    $atan: ()=>$atan
});
module.exports = __toCommonJS(atan_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $atan = (0, import_internal.createTrignometryOperator)(Math.atan);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $atan
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atan2.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var atan2_exports = {};
__export(atan2_exports, {
    $atan2: ()=>$atan2
});
module.exports = __toCommonJS(atan2_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $atan2 = (obj, expr, options)=>{
    const [y, x] = (0, import_core.computeValue)(obj, expr, null, options);
    if (isNaN(y) || (0, import_util.isNil)(y)) return y;
    if (isNaN(x) || (0, import_util.isNil)(x)) return x;
    return Math.atan2(y, x);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $atan2
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atanh.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var atanh_exports = {};
__export(atanh_exports, {
    $atanh: ()=>$atanh
});
module.exports = __toCommonJS(atanh_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $atanh = (0, import_internal.createTrignometryOperator)(Math.atanh, {
    1: Infinity,
    "-1": -Infinity
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $atanh
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/cos.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var cos_exports = {};
__export(cos_exports, {
    $cos: ()=>$cos
});
module.exports = __toCommonJS(cos_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $cos = (0, import_internal.createTrignometryOperator)(Math.cos);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $cos
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/cosh.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var cosh_exports = {};
__export(cosh_exports, {
    $cosh: ()=>$cosh
});
module.exports = __toCommonJS(cosh_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $cosh = (0, import_internal.createTrignometryOperator)(Math.cosh, {
    "-Infinity": Infinity,
    Infinity: Infinity
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $cosh
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/degreesToRadians.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var degreesToRadians_exports = {};
__export(degreesToRadians_exports, {
    $degreesToRadians: ()=>$degreesToRadians
});
module.exports = __toCommonJS(degreesToRadians_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const RADIANS_FACTOR = Math.PI / 180;
const $degreesToRadians = (0, import_internal.createTrignometryOperator)((n)=>n * RADIANS_FACTOR, {
    Infinity: Infinity,
    "-Infinity": Infinity
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $degreesToRadians
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/radiansToDegrees.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var radiansToDegrees_exports = {};
__export(radiansToDegrees_exports, {
    $radiansToDegrees: ()=>$radiansToDegrees
});
module.exports = __toCommonJS(radiansToDegrees_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const DEGREES_FACTOR = 180 / Math.PI;
const $radiansToDegrees = (0, import_internal.createTrignometryOperator)((n)=>n * DEGREES_FACTOR, {
    Infinity: Infinity,
    "-Infinity": -Infinity
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $radiansToDegrees
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/sin.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sin_exports = {};
__export(sin_exports, {
    $sin: ()=>$sin
});
module.exports = __toCommonJS(sin_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $sin = (0, import_internal.createTrignometryOperator)(Math.sin);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sin
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/sinh.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sinh_exports = {};
__export(sinh_exports, {
    $sinh: ()=>$sinh
});
module.exports = __toCommonJS(sinh_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $sinh = (0, import_internal.createTrignometryOperator)(Math.sinh, {
    "-Infinity": -Infinity,
    Infinity: Infinity
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sinh
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/tan.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var tan_exports = {};
__export(tan_exports, {
    $tan: ()=>$tan
});
module.exports = __toCommonJS(tan_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/_internal.js [app-ssr] (ecmascript)");
const $tan = (0, import_internal.createTrignometryOperator)(Math.tan);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $tan
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var trignometry_exports = {};
module.exports = __toCommonJS(trignometry_exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/acos.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/acosh.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/asin.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/asinh.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atan.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atan2.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atanh.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/cos.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/cosh.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/degreesToRadians.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/radiansToDegrees.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/sin.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/sinh.js [app-ssr] (ecmascript)"), module.exports);
__reExport(trignometry_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/tan.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/acos.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/acosh.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/asin.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/asinh.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atan.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atan2.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/atanh.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/cos.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/cosh.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/degreesToRadians.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/radiansToDegrees.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/sin.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/sinh.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/tan.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    MAX_INT: ()=>MAX_INT,
    MAX_LONG: ()=>MAX_LONG,
    MIN_INT: ()=>MIN_INT,
    MIN_LONG: ()=>MIN_LONG,
    TypeConvertError: ()=>TypeConvertError,
    toInteger: ()=>toInteger
});
module.exports = __toCommonJS(internal_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const MAX_INT = 2147483647;
const MIN_INT = -2147483648;
const MAX_LONG = Number.MAX_SAFE_INTEGER;
const MIN_LONG = Number.MIN_SAFE_INTEGER;
class TypeConvertError extends Error {
    constructor(message){
        super(message);
    }
}
function toInteger(obj, expr, options, min, max) {
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if (val === true) return 1;
    if (val === false) return 0;
    if ((0, import_util.isNil)(val)) return null;
    if ((0, import_util.isDate)(val)) return val.getTime();
    const n = Number(val);
    if ((0, import_util.isNumber)(n) && n >= min && n <= max) {
        if (!(0, import_util.isString)(val) || n.toString().indexOf(".") === -1) {
            return Math.trunc(n);
        }
    }
    throw new TypeConvertError(`cannot convert '${val}' to ${max == MAX_INT ? "int" : "long"}`);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    MAX_INT,
    MAX_LONG,
    MIN_INT,
    MIN_LONG,
    TypeConvertError,
    toInteger
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toBool.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toBool_exports = {};
__export(toBool_exports, {
    $toBool: ()=>$toBool
});
module.exports = __toCommonJS(toBool_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $toBool = (obj, expr, options)=>{
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(val)) return null;
    if ((0, import_util.isString)(val)) return true;
    return Boolean(val);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toBool
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDate.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toDate_exports = {};
__export(toDate_exports, {
    $toDate: ()=>$toDate
});
module.exports = __toCommonJS(toDate_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)");
const $toDate = (obj, expr, options)=>{
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isDate)(val)) return val;
    if ((0, import_util.isNil)(val)) return null;
    const d = new Date(val);
    const n = d.getTime();
    if (!isNaN(n)) return d;
    throw new import_internal.TypeConvertError(`cannot convert '${val}' to date`);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toDate
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDouble.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toDouble_exports = {};
__export(toDouble_exports, {
    $toDouble: ()=>$toDouble
});
module.exports = __toCommonJS(toDouble_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)");
const $toDouble = (obj, expr, options)=>{
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(val)) return null;
    if ((0, import_util.isDate)(val)) return val.getTime();
    if (val === true) return 1;
    if (val === false) return 0;
    const n = Number(val);
    if ((0, import_util.isNumber)(n)) return n;
    throw new import_internal.TypeConvertError(`cannot convert '${val}' to double/decimal`);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toDouble
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toInt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toInt_exports = {};
__export(toInt_exports, {
    $toInt: ()=>$toInt
});
module.exports = __toCommonJS(toInt_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)");
const $toInt = (obj, expr, options)=>(0, import_internal.toInteger)(obj, expr, options, import_internal.MIN_INT, import_internal.MAX_INT);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toInt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toLong.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toLong_exports = {};
__export(toLong_exports, {
    $toLong: ()=>$toLong
});
module.exports = __toCommonJS(toLong_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)");
const $toLong = (obj, expr, options)=>(0, import_internal.toInteger)(obj, expr, options, import_internal.MIN_LONG, import_internal.MAX_LONG);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toLong
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toString.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toString_exports = {};
__export(toString_exports, {
    $toString: ()=>$toString
});
module.exports = __toCommonJS(toString_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_dateToString = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/dateToString.js [app-ssr] (ecmascript)");
const $toString = (obj, expr, options)=>{
    const val = (0, import_core.computeValue)(obj, expr, null, options);
    if ((0, import_util.isNil)(val)) return null;
    if ((0, import_util.isDate)(val)) {
        return (0, import_dateToString.$dateToString)(obj, {
            date: expr,
            format: "%Y-%m-%dT%H:%M:%S.%LZ"
        }, options);
    }
    return val.toString();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toString
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/convert.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var convert_exports = {};
__export(convert_exports, {
    $convert: ()=>$convert
});
module.exports = __toCommonJS(convert_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)");
var import_toBool = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toBool.js [app-ssr] (ecmascript)");
var import_toDate = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDate.js [app-ssr] (ecmascript)");
var import_toDouble = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDouble.js [app-ssr] (ecmascript)");
var import_toInt = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toInt.js [app-ssr] (ecmascript)");
var import_toLong = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toLong.js [app-ssr] (ecmascript)");
var import_toString = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toString.js [app-ssr] (ecmascript)");
const $convert = (obj, expr, options)=>{
    const args = (0, import_core.computeValue)(obj, expr, null, options);
    args.onNull = args.onNull === void 0 ? null : args.onNull;
    if ((0, import_util.isNil)(args.input)) return args.onNull;
    try {
        switch(args.to){
            case 2:
            case "string":
                return (0, import_toString.$toString)(obj, args.input, options);
            case 8:
            case "boolean":
            case "bool":
                return (0, import_toBool.$toBool)(obj, args.input, options);
            case 9:
            case "date":
                return (0, import_toDate.$toDate)(obj, args.input, options);
            case 1:
            case 19:
            case "double":
            case "decimal":
            case "number":
                return (0, import_toDouble.$toDouble)(obj, args.input, options);
            case 16:
            case "int":
                return (0, import_toInt.$toInt)(obj, args.input, options);
            case 18:
            case "long":
                return (0, import_toLong.$toLong)(obj, args.input, options);
        }
    } catch  {}
    if (args.onError !== void 0) return args.onError;
    throw new import_internal.TypeConvertError(`could not convert to type ${args.to}.`);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $convert
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/isNumber.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var isNumber_exports = {};
__export(isNumber_exports, {
    $isNumber: ()=>$isNumber
});
module.exports = __toCommonJS(isNumber_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $isNumber = (obj, expr, options)=>{
    const n = (0, import_core.computeValue)(obj, expr, null, options);
    return (0, import_util.isNumber)(n);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $isNumber
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDecimal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var toDecimal_exports = {};
__export(toDecimal_exports, {
    $toDecimal: ()=>$toDecimal
});
module.exports = __toCommonJS(toDecimal_exports);
var import_toDouble = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDouble.js [app-ssr] (ecmascript)");
const $toDecimal = import_toDouble.$toDouble;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $toDecimal
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/type.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var type_exports = {};
__export(type_exports, {
    $type: ()=>$type
});
module.exports = __toCommonJS(type_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/_internal.js [app-ssr] (ecmascript)");
const $type = (obj, expr, options)=>{
    const v = (0, import_core.computeValue)(obj, expr, null, options);
    if (options.useStrictMode) {
        if (v === void 0) return "missing";
        if (v === true || v === false) return "bool";
        if ((0, import_util.isNumber)(v)) {
            if (v % 1 != 0) return "double";
            return v >= import_internal.MIN_INT && v <= import_internal.MAX_INT ? "int" : "long";
        }
        if ((0, import_util.isRegExp)(v)) return "regex";
    }
    return (0, import_util.typeOf)(v);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $type
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/type/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var type_exports = {};
module.exports = __toCommonJS(type_exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/convert.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/isNumber.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toBool.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDate.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDecimal.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDouble.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toInt.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toLong.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toString.js [app-ssr] (ecmascript)"), module.exports);
__reExport(type_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/type.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/convert.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/isNumber.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toBool.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDate.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDecimal.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toDouble.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toInt.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toLong.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/toString.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/type.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/variable/let.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var let_exports = {};
__export(let_exports, {
    $let: ()=>$let
});
module.exports = __toCommonJS(let_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $let = (obj, expr, options)=>{
    const variables = {};
    for (const [key, val] of Object.entries(expr.vars)){
        variables[key] = (0, import_core.computeValue)(obj, val, null, options);
    }
    return (0, import_core.computeValue)(obj, expr.in, null, import_core.ComputeOptions.init(options, obj, {
        variables
    }));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $let
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/variable/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var variable_exports = {};
module.exports = __toCommonJS(variable_exports);
__reExport(variable_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/variable/let.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/variable/let.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/expression/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var expression_exports = {};
module.exports = __toCommonJS(expression_exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/custom/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/literal.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/median.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/percentile.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(expression_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/variable/index.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/arithmetic/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/bitwise/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/conditional/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/custom/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/date/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/literal.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/median.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/misc/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/object/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/percentile.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/set/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/string/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/trignometry/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/type/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/variable/index.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/merge.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var merge_exports = {};
__export(merge_exports, {
    $merge: ()=>$merge
});
module.exports = __toCommonJS(merge_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_expression = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/index.js [app-ssr] (ecmascript)");
const $merge = (collection, expr, options)=>{
    const output = (0, import_util.isString)(expr.into) ? options?.collectionResolver(expr.into) : expr.into;
    (0, import_util.assert)((0, import_util.isArray)(output), `$merge: option 'into' must resolve to an array`);
    const onField = expr.on || options.idKey;
    const getHash = (0, import_util.isString)(onField) ? (o)=>(0, import_util.hashCode)((0, import_util.resolve)(o, onField), options.hashFunction) : (o)=>(0, import_util.hashCode)(onField.map((s)=>(0, import_util.resolve)(o, s), options.hashFunction));
    const map = import_util.ValueMap.init();
    for(let i = 0; i < output.length; i++){
        const obj = output[i];
        const k = getHash(obj);
        (0, import_util.assert)(!map.has(k), "$merge: 'into' collection must have unique entries for the 'on' field.");
        map.set(k, [
            obj,
            i
        ]);
    }
    const copts = import_core.ComputeOptions.init(options);
    return collection.map((o)=>{
        const k = getHash(o);
        if (map.has(k)) {
            const [target, i] = map.get(k);
            const variables = (0, import_core.computeValue)(target, expr.let || {
                new: "$$ROOT"
            }, null, // 'root' is the item from the iteration.
            copts.update(o));
            if ((0, import_util.isArray)(expr.whenMatched)) {
                const aggregator = new import_aggregator.Aggregator(expr.whenMatched, {
                    ...options,
                    variables
                });
                output[i] = aggregator.run([
                    target
                ])[0];
            } else {
                switch(expr.whenMatched){
                    case "replace":
                        output[i] = o;
                        break;
                    case "fail":
                        throw new import_util.MingoError("$merge: failed due to matching as specified by 'whenMatched' option.");
                    case "keepExisting":
                        break;
                    case "merge":
                    default:
                        output[i] = (0, import_expression.$mergeObjects)(target, [
                            target,
                            o
                        ], // 'root' is the item from the iteration.
                        copts.update(o, {
                            variables
                        }));
                        break;
                }
            }
        } else {
            switch(expr.whenNotMatched){
                case "discard":
                    break;
                case "fail":
                    throw new import_util.MingoError("$merge: failed due to matching as specified by 'whenMatched' option.");
                case "insert":
                default:
                    output.push(o);
                    break;
            }
        }
        return o;
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $merge
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/out.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var out_exports = {};
__export(out_exports, {
    $out: ()=>$out
});
module.exports = __toCommonJS(out_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $out = (collection, expr, options)=>{
    const outputColl = (0, import_util.isString)(expr) ? options?.collectionResolver(expr) : expr;
    (0, import_util.assert)((0, import_util.isArray)(outputColl), `expression must resolve to an array`);
    return collection.map((o)=>{
        outputColl.push((0, import_util.cloneDeep)(o));
        return o;
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $out
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/project.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var project_exports = {};
__export(project_exports, {
    $project: ()=>$project
});
module.exports = __toCommonJS(project_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const DESCRIPTORS = new Set(Array.from([
    0,
    1,
    false,
    true
]));
const $project = (collection, expr, options)=>{
    if ((0, import_util.isEmpty)(expr)) return collection;
    const expressionKeys = Object.keys(expr);
    validateExpression(expr, options);
    const ID_KEY = options.idKey;
    if (!expressionKeys.includes(ID_KEY)) {
        expressionKeys.push(ID_KEY);
    }
    const copts = import_core.ComputeOptions.init(options);
    return collection.map((obj)=>processObject(obj, expr, copts.update(obj), expressionKeys));
};
function processObject(obj, expr, options, expressionKeys) {
    let newObj = {};
    let foundSlice = false;
    let foundExclusion = false;
    const idOnlyExcluded = expr[options.idKey] === 0 && expressionKeys.length === 1;
    const dropKeys = [];
    if (idOnlyExcluded) {
        dropKeys.push(options.idKey);
    }
    for (const key of expressionKeys){
        let value = void 0;
        const subExpr = expr[key];
        if (key !== options.idKey && (subExpr === 0 || subExpr === false)) {
            foundExclusion = true;
        }
        if (key === options.idKey && (0, import_util.isEmpty)(subExpr)) {
            value = obj[key];
        } else if ((0, import_util.isString)(subExpr)) {
            value = (0, import_core.computeValue)(obj, subExpr, key, options);
        } else if (subExpr === 1 || subExpr === true) {} else if ((0, import_util.isArray)(subExpr)) {
            value = subExpr.map((v)=>{
                const r = (0, import_core.computeValue)(obj, v, null, options);
                if ((0, import_util.isNil)(r)) return null;
                return r;
            });
        } else if ((0, import_util.isObject)(subExpr)) {
            const subExprObj = subExpr;
            const subExprKeys = Object.keys(subExpr);
            const operator = subExprKeys.length == 1 ? subExprKeys[0] : "";
            const call = (0, import_core.getOperator)("projection", operator, options);
            if (call) {
                if (operator === "$slice") {
                    if ((0, import_util.ensureArray)(subExprObj[operator]).every(import_util.isNumber)) {
                        value = call(obj, subExprObj[operator], key, options);
                        foundSlice = true;
                    } else {
                        value = (0, import_core.computeValue)(obj, subExprObj, key, options);
                    }
                } else {
                    value = call(obj, subExprObj[operator], key, options);
                }
            } else if ((0, import_util.isOperator)(operator)) {
                value = (0, import_core.computeValue)(obj, subExprObj[operator], operator, options);
            } else if ((0, import_util.has)(obj, key)) {
                validateExpression(subExprObj, options);
                let target = obj[key];
                if ((0, import_util.isArray)(target)) {
                    value = target.map((o)=>processObject(o, subExprObj, options, subExprKeys));
                } else {
                    target = (0, import_util.isObject)(target) ? target : obj;
                    value = processObject(target, subExprObj, options, subExprKeys);
                }
            } else {
                value = (0, import_core.computeValue)(obj, subExpr, null, options);
            }
        } else {
            dropKeys.push(key);
            continue;
        }
        const objPathGraph = (0, import_util.resolveGraph)(obj, key, {
            preserveMissing: true
        });
        if ((0, import_util.isObject)(objPathGraph)) {
            (0, import_util.merge)(newObj, objPathGraph);
        }
        if (!DESCRIPTORS.has(subExpr)) {
            if (value === void 0) {
                (0, import_util.removeValue)(newObj, key, {
                    descendArray: true
                });
            } else {
                (0, import_util.setValue)(newObj, key, value);
            }
        }
    }
    (0, import_util.filterMissing)(newObj);
    if (foundSlice || foundExclusion || idOnlyExcluded) {
        newObj = (0, import_util.into)({}, obj, newObj);
        if (dropKeys.length > 0) {
            for (const k of dropKeys){
                (0, import_util.removeValue)(newObj, k, {
                    descendArray: true
                });
            }
        }
    }
    return newObj;
}
function validateExpression(expr, options) {
    const check = [
        false,
        false
    ];
    for (const [k, v] of Object.entries(expr)){
        if (k === options?.idKey) return;
        if (v === 0 || v === false) {
            check[0] = true;
        } else if (v === 1 || v === true) {
            check[1] = true;
        }
        (0, import_util.assert)(!(check[0] && check[1]), "Projection cannot have a mix of inclusion and exclusion.");
    }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $project
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/redact.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var redact_exports = {};
__export(redact_exports, {
    $redact: ()=>$redact
});
module.exports = __toCommonJS(redact_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
const $redact = (collection, expr, options)=>{
    const copts = import_core.ComputeOptions.init(options);
    return collection.map((obj)=>(0, import_core.redact)(obj, expr, copts.update(obj)));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $redact
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/replaceRoot.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var replaceRoot_exports = {};
__export(replaceRoot_exports, {
    $replaceRoot: ()=>$replaceRoot
});
module.exports = __toCommonJS(replaceRoot_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $replaceRoot = (collection, expr, options)=>{
    return collection.map((obj)=>{
        obj = (0, import_core.computeValue)(obj, expr.newRoot, null, options);
        (0, import_util.assert)((0, import_util.isObject)(obj), "$replaceRoot expression must return an object");
        return obj;
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $replaceRoot
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/replaceWith.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var replaceWith_exports = {};
__export(replaceWith_exports, {
    $replaceWith: ()=>$replaceWith
});
module.exports = __toCommonJS(replaceWith_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $replaceWith = (collection, expr, options)=>{
    return collection.map((obj)=>{
        obj = (0, import_core.computeValue)(obj, expr, null, options);
        (0, import_util.assert)((0, import_util.isObject)(obj), "$replaceWith expression must return an object");
        return obj;
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $replaceWith
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/sample.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sample_exports = {};
__export(sample_exports, {
    $sample: ()=>$sample
});
module.exports = __toCommonJS(sample_exports);
const $sample = (collection, expr, _options)=>{
    return collection.transform((xs)=>{
        const len = xs.length;
        let i = -1;
        return ()=>{
            if (++i === expr.size) return {
                done: true
            };
            const n = Math.floor(Math.random() * len);
            return {
                value: xs[n],
                done: false
            };
        };
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sample
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/set.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var set_exports = {};
__export(set_exports, {
    $set: ()=>$set
});
module.exports = __toCommonJS(set_exports);
var import_addFields = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/addFields.js [app-ssr] (ecmascript)");
const $set = import_addFields.$addFields;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $set
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/skip.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var skip_exports = {};
__export(skip_exports, {
    $skip: ()=>$skip
});
module.exports = __toCommonJS(skip_exports);
const $skip = (collection, expr, _options)=>{
    return collection.drop(expr);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $skip
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/sortByCount.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var sortByCount_exports = {};
__export(sortByCount_exports, {
    $sortByCount: ()=>$sortByCount
});
module.exports = __toCommonJS(sortByCount_exports);
var import_group = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/group.js [app-ssr] (ecmascript)");
var import_sort = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sort.js [app-ssr] (ecmascript)");
const $sortByCount = (collection, expr, options)=>{
    return (0, import_sort.$sort)((0, import_group.$group)(collection, {
        _id: expr,
        count: {
            $sum: 1
        }
    }, options), {
        count: -1
    }, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $sortByCount
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/unionWith.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var unionWith_exports = {};
__export(unionWith_exports, {
    $unionWith: ()=>$unionWith
});
module.exports = __toCommonJS(unionWith_exports);
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $unionWith = (collection, expr, options)=>{
    const array = (0, import_util.isString)(expr.coll) ? options.collectionResolver(expr.coll) : expr.coll;
    const iterators = [
        collection
    ];
    iterators.push(expr.pipeline ? new import_aggregator.Aggregator(expr.pipeline, options).stream(array) : (0, import_lazy.Lazy)(array));
    return (0, import_lazy.concat)(...iterators);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $unionWith
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/unset.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var unset_exports = {};
__export(unset_exports, {
    $unset: ()=>$unset
});
module.exports = __toCommonJS(unset_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_project = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/project.js [app-ssr] (ecmascript)");
const $unset = (collection, expr, options)=>{
    expr = (0, import_util.ensureArray)(expr);
    const doc = {};
    for (const k of expr)doc[k] = 0;
    return (0, import_project.$project)(collection, doc, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $unset
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/unwind.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var unwind_exports = {};
__export(unwind_exports, {
    $unwind: ()=>$unwind
});
module.exports = __toCommonJS(unwind_exports);
var import_lazy = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/lazy.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $unwind = (collection, expr, _options)=>{
    if ((0, import_util.isString)(expr)) expr = {
        path: expr
    };
    const path = expr.path;
    const field = path.substring(1);
    const includeArrayIndex = expr?.includeArrayIndex || false;
    const preserveNullAndEmptyArrays = expr.preserveNullAndEmptyArrays || false;
    const format = (o, i)=>{
        if (includeArrayIndex !== false) o[includeArrayIndex] = i;
        return o;
    };
    let value;
    return (0, import_lazy.Lazy)(()=>{
        for(;;){
            if (value instanceof import_lazy.Iterator) {
                const tmp = value.next();
                if (!tmp.done) return tmp;
            }
            const wrapper = collection.next();
            if (wrapper.done) return wrapper;
            const obj = wrapper.value;
            value = (0, import_util.resolve)(obj, field);
            if ((0, import_util.isArray)(value)) {
                if (value.length === 0 && preserveNullAndEmptyArrays === true) {
                    value = null;
                    (0, import_util.removeValue)(obj, field);
                    return {
                        value: format(obj, null),
                        done: false
                    };
                } else {
                    value = (0, import_lazy.Lazy)(value).map((item, i)=>{
                        const newObj = (0, import_util.resolveGraph)(obj, field, {
                            preserveKeys: true
                        });
                        (0, import_util.setValue)(newObj, field, item);
                        return format(newObj, i);
                    });
                }
            } else if (!(0, import_util.isEmpty)(value) || preserveNullAndEmptyArrays === true) {
                return {
                    value: format(obj, null),
                    done: false
                };
            }
        }
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $unwind
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/pipeline/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var pipeline_exports = {};
module.exports = __toCommonJS(pipeline_exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/addFields.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/bucket.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/bucketAuto.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/count.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/densify.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/facet.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/fill.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/graphLookup.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/group.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/limit.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/lookup.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/match.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/merge.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/out.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/project.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/redact.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/replaceRoot.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/replaceWith.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sample.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/set.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/setWindowFields.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/skip.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sort.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sortByCount.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/unionWith.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/unset.js [app-ssr] (ecmascript)"), module.exports);
__reExport(pipeline_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/unwind.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/addFields.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/bucket.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/bucketAuto.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/count.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/densify.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/facet.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/fill.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/graphLookup.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/group.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/limit.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/lookup.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/match.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/merge.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/out.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/project.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/redact.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/replaceRoot.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/replaceWith.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sample.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/set.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/setWindowFields.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/skip.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sort.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/sortByCount.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/unionWith.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/unset.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/unwind.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/projection/elemMatch.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var elemMatch_exports = {};
__export(elemMatch_exports, {
    $elemMatch: ()=>$elemMatch
});
module.exports = __toCommonJS(elemMatch_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $elemMatch = (obj, expr, field, options)=>{
    const arr = (0, import_util.resolve)(obj, field);
    const query = new import_query.Query(expr, options);
    (0, import_util.assert)((0, import_util.isArray)(arr), "$elemMatch: argument must resolve to array");
    const result = [];
    for(let i = 0; i < arr.length; i++){
        if (query.test(arr[i])) {
            if (options.useStrictMode) return [
                arr[i]
            ];
            result.push(arr[i]);
        }
    }
    return result.length > 0 ? result : void 0;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $elemMatch
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/projection/slice.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var slice_exports = {};
__export(slice_exports, {
    $slice: ()=>$slice
});
module.exports = __toCommonJS(slice_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_slice = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/array/slice.js [app-ssr] (ecmascript)");
const $slice = (obj, expr, field, options)=>{
    const xs = (0, import_util.resolve)(obj, field);
    const exprAsArray = expr;
    if (!(0, import_util.isArray)(xs)) return xs;
    return (0, import_slice.$slice)(obj, (0, import_util.isArray)(expr) ? [
        xs,
        ...exprAsArray
    ] : [
        xs,
        expr
    ], options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $slice
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/projection/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var projection_exports = {};
module.exports = __toCommonJS(projection_exports);
__reExport(projection_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/projection/elemMatch.js [app-ssr] (ecmascript)"), module.exports);
__reExport(projection_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/projection/slice.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/projection/elemMatch.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/projection/slice.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/array/all.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var all_exports = {};
__export(all_exports, {
    $all: ()=>$all
});
module.exports = __toCommonJS(all_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $all = (0, import_predicates.createQueryOperator)(import_predicates.$all);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $all
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/array/elemMatch.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var elemMatch_exports = {};
__export(elemMatch_exports, {
    $elemMatch: ()=>$elemMatch
});
module.exports = __toCommonJS(elemMatch_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $elemMatch = (0, import_predicates.createQueryOperator)(import_predicates.$elemMatch);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $elemMatch
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/array/size.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var size_exports = {};
__export(size_exports, {
    $size: ()=>$size
});
module.exports = __toCommonJS(size_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $size = (0, import_predicates.createQueryOperator)(import_predicates.$size);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $size
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/array/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var array_exports = {};
module.exports = __toCommonJS(array_exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/all.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/elemMatch.js [app-ssr] (ecmascript)"), module.exports);
__reExport(array_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/size.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/all.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/elemMatch.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/size.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    createBitwiseOperator: ()=>createBitwiseOperator
});
module.exports = __toCommonJS(internal_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const createBitwiseOperator = (predicate)=>{
    return (0, import_predicates.createQueryOperator)((value, mask, _options)=>{
        let b = 0;
        if ((0, import_util.isArray)(mask)) {
            for (const n of mask)b = b | 1 << n;
        } else {
            b = mask;
        }
        return predicate(value & b, b);
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    createBitwiseOperator
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAllClear.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitsAllClear_exports = {};
__export(bitsAllClear_exports, {
    $bitsAllClear: ()=>$bitsAllClear
});
module.exports = __toCommonJS(bitsAllClear_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitsAllClear = (0, import_internal.createBitwiseOperator)((result, _)=>result == 0);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitsAllClear
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAllSet.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitsAllSet_exports = {};
__export(bitsAllSet_exports, {
    $bitsAllSet: ()=>$bitsAllSet
});
module.exports = __toCommonJS(bitsAllSet_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitsAllSet = (0, import_internal.createBitwiseOperator)((result, mask)=>result == mask);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitsAllSet
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAnyClear.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitsAnyClear_exports = {};
__export(bitsAnyClear_exports, {
    $bitsAnyClear: ()=>$bitsAnyClear
});
module.exports = __toCommonJS(bitsAnyClear_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitsAnyClear = (0, import_internal.createBitwiseOperator)((result, mask)=>result < mask);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitsAnyClear
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAnySet.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitsAnySet_exports = {};
__export(bitsAnySet_exports, {
    $bitsAnySet: ()=>$bitsAnySet
});
module.exports = __toCommonJS(bitsAnySet_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/_internal.js [app-ssr] (ecmascript)");
const $bitsAnySet = (0, import_internal.createBitwiseOperator)((result, _)=>result > 0);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitsAnySet
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bitwise_exports = {};
__export(bitwise_exports, {
    $bitsAllClear: ()=>import_bitsAllClear.$bitsAllClear,
    $bitsAllSet: ()=>import_bitsAllSet.$bitsAllSet,
    $bitsAnyClear: ()=>import_bitsAnyClear.$bitsAnyClear,
    $bitsAnySet: ()=>import_bitsAnySet.$bitsAnySet
});
module.exports = __toCommonJS(bitwise_exports);
var import_bitsAllClear = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAllClear.js [app-ssr] (ecmascript)");
var import_bitsAllSet = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAllSet.js [app-ssr] (ecmascript)");
var import_bitsAnyClear = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAnyClear.js [app-ssr] (ecmascript)");
var import_bitsAnySet = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/bitsAnySet.js [app-ssr] (ecmascript)");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bitsAllClear,
    $bitsAllSet,
    $bitsAnyClear,
    $bitsAnySet
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/eq.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var eq_exports = {};
__export(eq_exports, {
    $eq: ()=>$eq
});
module.exports = __toCommonJS(eq_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $eq = (0, import_predicates.createQueryOperator)(import_predicates.$eq);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $eq
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/gt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var gt_exports = {};
__export(gt_exports, {
    $gt: ()=>$gt
});
module.exports = __toCommonJS(gt_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $gt = (0, import_predicates.createQueryOperator)(import_predicates.$gt);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $gt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/gte.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var gte_exports = {};
__export(gte_exports, {
    $gte: ()=>$gte
});
module.exports = __toCommonJS(gte_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $gte = (0, import_predicates.createQueryOperator)(import_predicates.$gte);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $gte
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/in.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var in_exports = {};
__export(in_exports, {
    $in: ()=>$in
});
module.exports = __toCommonJS(in_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $in = (0, import_predicates.createQueryOperator)(import_predicates.$in);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $in
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/lt.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lt_exports = {};
__export(lt_exports, {
    $lt: ()=>$lt
});
module.exports = __toCommonJS(lt_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $lt = (0, import_predicates.createQueryOperator)(import_predicates.$lt);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lt
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/lte.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var lte_exports = {};
__export(lte_exports, {
    $lte: ()=>$lte
});
module.exports = __toCommonJS(lte_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $lte = (0, import_predicates.createQueryOperator)(import_predicates.$lte);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $lte
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/ne.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var ne_exports = {};
__export(ne_exports, {
    $ne: ()=>$ne
});
module.exports = __toCommonJS(ne_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $ne = (0, import_predicates.createQueryOperator)(import_predicates.$ne);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $ne
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/nin.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var nin_exports = {};
__export(nin_exports, {
    $nin: ()=>$nin
});
module.exports = __toCommonJS(nin_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $nin = (0, import_predicates.createQueryOperator)(import_predicates.$nin);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $nin
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/comparison/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var comparison_exports = {};
__export(comparison_exports, {
    $eq: ()=>import_eq.$eq,
    $gt: ()=>import_gt.$gt,
    $gte: ()=>import_gte.$gte,
    $in: ()=>import_in.$in,
    $lt: ()=>import_lt.$lt,
    $lte: ()=>import_lte.$lte,
    $ne: ()=>import_ne.$ne,
    $nin: ()=>import_nin.$nin
});
module.exports = __toCommonJS(comparison_exports);
var import_eq = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/eq.js [app-ssr] (ecmascript)");
var import_gt = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/gt.js [app-ssr] (ecmascript)");
var import_gte = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/gte.js [app-ssr] (ecmascript)");
var import_in = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/in.js [app-ssr] (ecmascript)");
var import_lt = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/lt.js [app-ssr] (ecmascript)");
var import_lte = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/lte.js [app-ssr] (ecmascript)");
var import_ne = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/ne.js [app-ssr] (ecmascript)");
var import_nin = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/nin.js [app-ssr] (ecmascript)");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $eq,
    $gt,
    $gte,
    $in,
    $lt,
    $lte,
    $ne,
    $nin
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/element/exists.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var exists_exports = {};
__export(exists_exports, {
    $exists: ()=>$exists
});
module.exports = __toCommonJS(exists_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $exists = (0, import_predicates.createQueryOperator)(import_predicates.$exists);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $exists
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/element/type.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var type_exports = {};
__export(type_exports, {
    $type: ()=>$type
});
module.exports = __toCommonJS(type_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $type = (0, import_predicates.createQueryOperator)(import_predicates.$type);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $type
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/element/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var element_exports = {};
module.exports = __toCommonJS(element_exports);
__reExport(element_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/element/exists.js [app-ssr] (ecmascript)"), module.exports);
__reExport(element_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/element/type.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/element/exists.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/element/type.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/expr.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var expr_exports = {};
__export(expr_exports, {
    $expr: ()=>$expr
});
module.exports = __toCommonJS(expr_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
function $expr(_, rhs, options) {
    return (obj)=>(0, import_core.computeValue)(obj, rhs, null, options);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $expr
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/jsonSchema.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var jsonSchema_exports = {};
__export(jsonSchema_exports, {
    $jsonSchema: ()=>$jsonSchema
});
module.exports = __toCommonJS(jsonSchema_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
function $jsonSchema(_, schema, options) {
    if (!options?.jsonSchemaValidator) {
        throw new import_util.MingoError("Missing option 'jsonSchemaValidator'. Configure to use '$jsonSchema' operator.");
    }
    const validate = options?.jsonSchemaValidator(schema);
    return (obj)=>validate(obj);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $jsonSchema
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/mod.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var mod_exports = {};
__export(mod_exports, {
    $mod: ()=>$mod
});
module.exports = __toCommonJS(mod_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $mod = (0, import_predicates.createQueryOperator)(import_predicates.$mod);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $mod
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/regex.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var regex_exports = {};
__export(regex_exports, {
    $regex: ()=>$regex
});
module.exports = __toCommonJS(regex_exports);
var import_predicates = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/_predicates.js [app-ssr] (ecmascript)");
const $regex = (0, import_predicates.createQueryOperator)(import_predicates.$regex);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $regex
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/where.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var where_exports = {};
__export(where_exports, {
    $where: ()=>$where
});
module.exports = __toCommonJS(where_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
function $where(_, rhs, options) {
    (0, import_util.assert)(options.scriptEnabled, "$where operator requires 'scriptEnabled' option to be true");
    const f = rhs;
    (0, import_util.assert)((0, import_util.isFunction)(f), "$where only accepts a Function object");
    return (obj)=>(0, import_util.truthy)(f.call(obj), options?.useStrictMode);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $where
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var evaluation_exports = {};
module.exports = __toCommonJS(evaluation_exports);
__reExport(evaluation_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/expr.js [app-ssr] (ecmascript)"), module.exports);
__reExport(evaluation_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/jsonSchema.js [app-ssr] (ecmascript)"), module.exports);
__reExport(evaluation_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/mod.js [app-ssr] (ecmascript)"), module.exports);
__reExport(evaluation_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/regex.js [app-ssr] (ecmascript)"), module.exports);
__reExport(evaluation_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/where.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/expr.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/jsonSchema.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/mod.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/regex.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/where.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/logical/and.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var and_exports = {};
__export(and_exports, {
    $and: ()=>$and
});
module.exports = __toCommonJS(and_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $and = (_, rhs, options)=>{
    (0, import_util.assert)((0, import_util.isArray)(rhs), "Invalid expression: $and expects value to be an Array.");
    const queries = rhs.map((expr)=>new import_query.Query(expr, options));
    return (obj)=>queries.every((q)=>q.test(obj));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $and
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/logical/or.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var or_exports = {};
__export(or_exports, {
    $or: ()=>$or
});
module.exports = __toCommonJS(or_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $or = (_, rhs, options)=>{
    (0, import_util.assert)((0, import_util.isArray)(rhs), "Invalid expression. $or expects value to be an Array");
    const queries = rhs.map((expr)=>new import_query.Query(expr, options));
    return (obj)=>queries.some((q)=>q.test(obj));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $or
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/logical/nor.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var nor_exports = {};
__export(nor_exports, {
    $nor: ()=>$nor
});
module.exports = __toCommonJS(nor_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_or = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/or.js [app-ssr] (ecmascript)");
const $nor = (_, rhs, options)=>{
    (0, import_util.assert)((0, import_util.isArray)(rhs), "Invalid expression. $nor expects value to be an array.");
    const f = (0, import_or.$or)("$or", rhs, options);
    return (obj)=>!f(obj);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $nor
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/logical/not.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var not_exports = {};
__export(not_exports, {
    $not: ()=>$not
});
module.exports = __toCommonJS(not_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const $not = (selector, rhs, options)=>{
    const criteria = {};
    criteria[selector] = (0, import_util.normalize)(rhs);
    const query = new import_query.Query(criteria, options);
    return (obj)=>!query.test(obj);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $not
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/logical/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var logical_exports = {};
module.exports = __toCommonJS(logical_exports);
__reExport(logical_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/and.js [app-ssr] (ecmascript)"), module.exports);
__reExport(logical_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/nor.js [app-ssr] (ecmascript)"), module.exports);
__reExport(logical_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/not.js [app-ssr] (ecmascript)"), module.exports);
__reExport(logical_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/or.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/and.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/nor.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/not.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/or.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/query/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var query_exports = {};
module.exports = __toCommonJS(query_exports);
__reExport(query_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(query_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(query_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(query_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/element/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(query_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/index.js [app-ssr] (ecmascript)"), module.exports);
__reExport(query_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/index.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/array/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/bitwise/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/comparison/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/element/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/evaluation/index.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/logical/index.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/init/basic.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
        value: mod,
        enumerable: true
    }) : target, mod));
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var booleanOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/index.js [app-ssr] (ecmascript)"));
var comparisonOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/index.js [app-ssr] (ecmascript)"));
var import_pipeline = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/pipeline/index.js [app-ssr] (ecmascript)");
var projectionOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/projection/index.js [app-ssr] (ecmascript)"));
var queryOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/index.js [app-ssr] (ecmascript)"));
(0, import_core.useOperators)("expression", {
    ...booleanOperators,
    ...comparisonOperators
});
(0, import_core.useOperators)("pipeline", {
    $project: import_pipeline.$project,
    $skip: import_pipeline.$skip,
    $limit: import_pipeline.$limit,
    $sort: import_pipeline.$sort
});
(0, import_core.useOperators)("projection", projectionOperators);
(0, import_core.useOperators)("query", queryOperators);
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var internal_exports = {};
__export(internal_exports, {
    applyUpdate: ()=>applyUpdate,
    clone: ()=>clone,
    tokenizePath: ()=>tokenizePath,
    walkExpression: ()=>walkExpression
});
module.exports = __toCommonJS(internal_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
const clone = (mode, val)=>{
    switch(mode){
        case "deep":
            return (0, import_util.cloneDeep)(val);
        case "copy":
            {
                if ((0, import_util.isDate)(val)) return new Date(val);
                if ((0, import_util.isArray)(val)) return [
                    ...val
                ];
                if ((0, import_util.isObject)(val)) return {
                    ...val
                };
                if ((0, import_util.isRegExp)(val)) return new RegExp(val);
                return val;
            }
        default:
            return val;
    }
};
const FILTER_IDENT_RE = /^[a-z]+[a-zA-Z0-9]*$/;
function tokenizePath(selector) {
    if (!selector.includes(".$")) {
        return [
            {
                parent: selector,
                selector
            },
            []
        ];
    }
    const begin = selector.indexOf(".$");
    const end = selector.indexOf("]");
    const parent = selector.substring(0, begin);
    const child = selector.substring(begin + 3, end);
    (0, import_util.assert)(child === "" || FILTER_IDENT_RE.test(child), "The filter <identifier> must begin with a lowercase letter and contain only alphanumeric characters.");
    const rest = selector.substring(end + 2);
    const [next, elems] = rest ? tokenizePath(rest) : [];
    return [
        {
            selector,
            parent,
            child: child || "$",
            next
        },
        [
            child,
            ...elems || []
        ].filter(Boolean)
    ];
}
const applyUpdate = (o, n, q, f, opts)=>{
    const { parent, child: c, next } = n;
    if (!c) {
        let b = false;
        const g = (u, k)=>b = Boolean(f(u, k)) || b;
        (0, import_util.walk)(o, parent, g, opts);
        return b;
    }
    const t = (0, import_util.resolve)(o, parent);
    if (!(0, import_util.isArray)(t)) return false;
    return t.map((e, i)=>{
        if (q[c] && !q[c].test({
            [c]: e
        })) return false;
        return next ? applyUpdate(e, next, q, f, opts) : f(t, i);
    }).some(Boolean);
};
function walkExpression(expr, arrayFilter, options, callback) {
    const res = [];
    for (const [selector, val] of Object.entries(expr)){
        const [node, vars] = tokenizePath(selector);
        if (!vars.length) {
            if (callback(val, node, {})) res.push(node.parent);
        } else {
            const conditions = {};
            arrayFilter.forEach((o)=>{
                Object.keys(o).forEach((k)=>{
                    vars.forEach((w)=>{
                        if (k === w || k.startsWith(w + ".")) {
                            conditions[w] = conditions[w] || {};
                            Object.assign(conditions[w], {
                                [k]: o[k]
                            });
                        }
                    });
                });
            });
            const queries = {};
            for (const [k, condition] of Object.entries(conditions)){
                queries[k] = new import_query.Query(condition, options.queryOptions);
            }
            if (callback(val, node, queries)) res.push(node.parent);
        }
    }
    return res;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    applyUpdate,
    clone,
    tokenizePath,
    walkExpression
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/addToSet.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var addToSet_exports = {};
__export(addToSet_exports, {
    $addToSet: ()=>$addToSet
});
module.exports = __toCommonJS(addToSet_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $addToSet = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        const args = {
            $each: [
                val
            ]
        };
        if ((0, import_util.isObject)(val) && (0, import_util.has)(val, "$each")) {
            Object.assign(args, val);
        }
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            const prev = o[k] ||= [];
            const common = (0, import_util.intersection)([
                prev,
                args.$each
            ]);
            if (common.length === args.$each.length) return false;
            o[k] = (0, import_internal.clone)(options.cloneMode, (0, import_util.unique)(prev.concat(args.$each)));
            return true;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $addToSet
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/bit.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var bit_exports = {};
__export(bit_exports, {
    $bit: ()=>$bit
});
module.exports = __toCommonJS(bit_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const BIT_OPS = /* @__PURE__ */ new Set([
    "and",
    "or",
    "xor"
]);
const $bit = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        const op = Object.keys(val);
        (0, import_util.assert)(op.length === 1 && BIT_OPS.has(op[0]), `Invalid bit operator '${op[0]}'. Must be one of 'and', 'or', or 'xor'.`);
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            let n = o[k];
            const v = val[op[0]];
            if (n !== void 0 && !((0, import_util.isNumber)(n) && (0, import_util.isNumber)(v))) return false;
            n = n || 0;
            switch(op[0]){
                case "and":
                    o[k] = n & v;
                    break;
                case "or":
                    o[k] = n | v;
                    break;
                case "xor":
                    o[k] = n ^ v;
                    break;
            }
            return o[k] !== n;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $bit
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/currentDate.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var currentDate_exports = {};
__export(currentDate_exports, {
    $currentDate: ()=>$currentDate
});
module.exports = __toCommonJS(currentDate_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $currentDate = (obj, expr, arrayFilters = [], options = {})=>{
    const now = Date.now();
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (_, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            o[k] = now;
            return true;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $currentDate
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/inc.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var inc_exports = {};
__export(inc_exports, {
    $inc: ()=>$inc
});
module.exports = __toCommonJS(inc_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $inc = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        if (!node.child) {
            const n = (0, import_util.resolve)(obj, node.parent);
            (0, import_util.assert)(n === void 0 || (0, import_util.isNumber)(n), `cannot apply $inc to a value of non-numeric type`);
        }
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            o[k] = (o[k] ||= 0) + val;
            return true;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $inc
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/max.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var max_exports = {};
__export(max_exports, {
    $max: ()=>$max
});
module.exports = __toCommonJS(max_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $max = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            if (o[k] !== void 0 && (0, import_util.compare)(o[k], val) > -1) return false;
            o[k] = val;
            return true;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $max
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/min.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var min_exports = {};
__export(min_exports, {
    $min: ()=>$min
});
module.exports = __toCommonJS(min_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $min = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            if (o[k] !== void 0 && (0, import_util.compare)(o[k], val) < 1) return false;
            o[k] = val;
            return true;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $min
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/mul.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var mul_exports = {};
__export(mul_exports, {
    $mul: ()=>$mul
});
module.exports = __toCommonJS(mul_exports);
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $mul = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            const prev = o[k];
            o[k] = o[k] === void 0 ? 0 : o[k] * val;
            return o[k] !== prev;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $mul
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/pop.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var pop_exports = {};
__export(pop_exports, {
    $pop: ()=>$pop
});
module.exports = __toCommonJS(pop_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $pop = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            const arr = o[k];
            (0, import_util.assert)((0, import_util.isArray)(arr), `path '${node.selector}' contains an element of non-array type.`);
            if (!arr.length) return false;
            if (val === -1) {
                arr.splice(0, 1);
            } else {
                arr.pop();
            }
            return true;
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $pop
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/pull.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var pull_exports = {};
__export(pull_exports, {
    $pull: ()=>$pull
});
module.exports = __toCommonJS(pull_exports);
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $pull = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        const wrap = !(0, import_util.isObject)(val) || Object.keys(val).some(import_util.isOperator);
        const query = new import_query.Query(wrap ? {
            k: val
        } : val, options.queryOptions);
        const pred = wrap ? (v)=>query.test({
                k: v
            }) : (v)=>query.test(v);
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            const prev = o[k];
            const curr = new Array();
            const found = prev.map((v)=>{
                const b = pred(v);
                if (!b) curr.push(v);
                return b;
            }).some(Boolean);
            if (!found) return false;
            o[k] = curr;
            return true;
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $pull
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/pullAll.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var pullAll_exports = {};
__export(pullAll_exports, {
    $pullAll: ()=>$pullAll
});
module.exports = __toCommonJS(pullAll_exports);
var import_pull = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pull.js [app-ssr] (ecmascript)");
const $pullAll = (obj, expr, arrayFilters = [], options = {})=>{
    const pullExpr = {};
    Object.entries(expr).forEach(([k, v])=>{
        pullExpr[k] = {
            $in: v
        };
    });
    return (0, import_pull.$pull)(obj, pullExpr, arrayFilters, options);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $pullAll
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/push.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var push_exports = {};
__export(push_exports, {
    $push: ()=>$push
});
module.exports = __toCommonJS(push_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const OPERATOR_MODIFIERS = Object.freeze([
    "$each",
    "$slice",
    "$sort",
    "$position"
]);
const $push = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        const args = {
            $each: [
                val
            ]
        };
        if ((0, import_util.isObject)(val) && OPERATOR_MODIFIERS.some((m)=>(0, import_util.has)(val, m))) {
            Object.assign(args, val);
        }
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            const arr = o[k] ||= [];
            const prev = arr.slice(0, args.$slice || arr.length);
            const oldsize = arr.length;
            const pos = (0, import_util.isNumber)(args.$position) ? args.$position : arr.length;
            arr.splice(pos, 0, ...(0, import_internal.clone)(options.cloneMode, args.$each));
            if (args.$sort) {
                const sortKey = (0, import_util.isObject)(args.$sort) ? Object.keys(args.$sort || {}).pop() : "";
                const order = !sortKey ? args.$sort : args.$sort[sortKey];
                const f = !sortKey ? (a)=>a : (a)=>(0, import_util.resolve)(a, sortKey);
                arr.sort((a, b)=>order * (0, import_util.compare)(f(a), f(b)));
            }
            if ((0, import_util.isNumber)(args.$slice)) {
                if (args.$slice < 0) arr.splice(0, arr.length + args.$slice);
                else arr.splice(args.$slice);
            }
            return oldsize != arr.length || !(0, import_util.isEqual)(prev, arr);
        }, {
            descendArray: true,
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $push
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/set.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var set_exports = {};
__export(set_exports, {
    $set: ()=>$set
});
module.exports = __toCommonJS(set_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $set = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            if ((0, import_util.isEqual)(o[k], val)) return false;
            o[k] = (0, import_internal.clone)(options.cloneMode, val);
            return true;
        }, {
            buildGraph: true
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $set
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/rename.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var rename_exports = {};
__export(rename_exports, {
    $rename: ()=>$rename
});
module.exports = __toCommonJS(rename_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
var import_set = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/set.js [app-ssr] (ecmascript)");
const $rename = (obj, expr, arrayFilters = [], options = {})=>{
    const res = [];
    const changed = (0, import_internal.walkExpression)(expr, arrayFilters, options, (val, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            if (!(0, import_util.has)(o, k)) return false;
            res.push(...(0, import_set.$set)(obj, {
                [val]: o[k]
            }, arrayFilters, options));
            delete o[k];
            return true;
        });
    });
    return Array.from(new Set(changed.concat(res)));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $rename
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/unset.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var unset_exports = {};
__export(unset_exports, {
    $unset: ()=>$unset
});
module.exports = __toCommonJS(unset_exports);
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
var import_internal = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/_internal.js [app-ssr] (ecmascript)");
const $unset = (obj, expr, arrayFilters = [], options = {})=>{
    return (0, import_internal.walkExpression)(expr, arrayFilters, options, (_, node, queries)=>{
        return (0, import_internal.applyUpdate)(obj, node, queries, (o, k)=>{
            if (!(0, import_util.has)(o, k)) return false;
            if ((0, import_util.isArray)(o)) {
                o[k] = null;
            } else {
                delete o[k];
            }
            return true;
        });
    });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    $unset
});
}}),
"[project]/node_modules/mingo/dist/cjs/operators/update/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var update_exports = {};
module.exports = __toCommonJS(update_exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/addToSet.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/bit.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/currentDate.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/inc.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/max.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/min.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/mul.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pop.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pull.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pullAll.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/push.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/rename.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/set.js [app-ssr] (ecmascript)"), module.exports);
__reExport(update_exports, __turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/unset.js [app-ssr] (ecmascript)"), module.exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/addToSet.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/bit.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/currentDate.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/inc.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/max.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/min.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/mul.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pop.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pull.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/pullAll.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/push.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/rename.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/set.js [app-ssr] (ecmascript)"),
    ...__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/unset.js [app-ssr] (ecmascript)")
});
}}),
"[project]/node_modules/mingo/dist/cjs/updater.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", {
        value: mod,
        enumerable: true
    }) : target, mod));
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var updater_exports = {};
__export(updater_exports, {
    createUpdater: ()=>createUpdater,
    update: ()=>update,
    updateObject: ()=>updateObject
});
module.exports = __toCommonJS(updater_exports);
var import_core = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/core.js [app-ssr] (ecmascript)");
var booleanOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/boolean/index.js [app-ssr] (ecmascript)"));
var comparisonOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/expression/comparison/index.js [app-ssr] (ecmascript)"));
var queryOperators = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/query/index.js [app-ssr] (ecmascript)"));
var UPDATE_OPERATORS = __toESM(__turbopack_require__("[project]/node_modules/mingo/dist/cjs/operators/update/index.js [app-ssr] (ecmascript)"));
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_util = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/util.js [app-ssr] (ecmascript)");
function createUpdater(defaultOptions) {
    defaultOptions = defaultOptions || {};
    defaultOptions = {
        ...defaultOptions,
        queryOptions: (0, import_core.initOptions)(defaultOptions.queryOptions)
    };
    defaultOptions.queryOptions.context.addQueryOps(queryOperators).addExpressionOps(booleanOperators).addExpressionOps(comparisonOperators);
    return (obj, expr, arrayFilters = [], condition = {}, options = {})=>{
        const opts = Object.assign({
            cloneMode: "copy"
        }, defaultOptions, options);
        Object.assign(opts, {
            queryOptions: (0, import_core.initOptions)(Object.assign({
                useStrictMode: false
            }, opts?.queryOptions))
        });
        const entry = Object.entries(expr);
        (0, import_util.assert)(entry.length === 1, "Update expression must contain only one operator.");
        const [op, args] = entry[0];
        (0, import_util.assert)((0, import_util.has)(UPDATE_OPERATORS, op), `Update operator '${op}' is not supported.`);
        const mutate = UPDATE_OPERATORS[op];
        if (Object.keys(condition).length) {
            const q = condition instanceof import_query.Query ? condition : new import_query.Query(condition, opts.queryOptions);
            if (!q.test(obj)) return [];
        }
        return mutate(obj, args, arrayFilters, opts);
    };
}
const update = createUpdater();
const updateObject = update;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    createUpdater,
    update,
    updateObject
});
}}),
"[project]/node_modules/mingo/dist/cjs/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all)=>{
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = (to, from, except, desc)=>{
    if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
            get: ()=>from[key],
            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
    }
    return to;
};
var __toCommonJS = (mod)=>__copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
var index_exports = {};
__export(index_exports, {
    Aggregator: ()=>import_aggregator2.Aggregator,
    Query: ()=>import_query2.Query,
    aggregate: ()=>aggregate,
    createUpdater: ()=>import_updater2.createUpdater,
    default: ()=>index_default,
    find: ()=>find,
    remove: ()=>remove,
    update: ()=>import_updater2.update
});
module.exports = __toCommonJS(index_exports);
var import_basic = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/init/basic.js [app-ssr] (ecmascript)");
var import_aggregator = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_query = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_updater = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/updater.js [app-ssr] (ecmascript)");
var import_aggregator2 = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/aggregator.js [app-ssr] (ecmascript)");
var import_query2 = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/query.js [app-ssr] (ecmascript)");
var import_updater2 = __turbopack_require__("[project]/node_modules/mingo/dist/cjs/updater.js [app-ssr] (ecmascript)");
function find(collection, criteria, projection, options) {
    return new import_query.Query(criteria, options).find(collection, projection);
}
function remove(collection, criteria, options) {
    return new import_query.Query(criteria, options).remove(collection);
}
function aggregate(collection, pipeline, options) {
    return new import_aggregator.Aggregator(pipeline, options).run(collection);
}
var index_default = {
    Aggregator: import_aggregator.Aggregator,
    Query: import_query.Query,
    aggregate,
    createUpdater: import_updater.createUpdater,
    find,
    remove,
    update: import_updater.update
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    Aggregator,
    Query,
    aggregate,
    createUpdater,
    find,
    remove,
    update
});
}}),

};

//# sourceMappingURL=node_modules_mingo_dist_cjs_dc4b15._.js.map