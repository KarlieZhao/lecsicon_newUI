"use strict";(()=>{var e={};e.id=1,e.ids=[1],e.modules={75600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},87984:e=>{e.exports=import("openai")},96762:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},86427:(e,t,n)=>{n.a(e,async(e,r)=>{try{n.r(t),n.d(t,{config:()=>l,default:()=>c,routeModule:()=>d});var o=n(89947),a=n(2706),i=n(96762),s=n(29550),u=e([s]);s=(u.then?(await u)():u)[0];let c=(0,i.M)(s,"default"),l=(0,i.M)(s,"config"),d=new o.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/openai",pathname:"/api/openai",bundlePath:"",filename:""},userland:s});r()}catch(e){r(e)}})},29550:(e,t,n)=>{n.a(e,async(e,r)=>{try{n.r(t),n.d(t,{default:()=>i});var o=n(87984),a=e([o]);let s=new(o=(a.then?(await a)():a)[0]).OpenAI({apiKey:process.env.OPENAI_API_KEY});async function i(e,t){if("POST"!==e.method){t.status(405).json({error:"Method Not Allowed"});return}let{inputValue:n}=e.body;if(!n){t.status(400).json({error:"Input value is required"});return}try{let e=`Make an acrostic sentence for "${n}".`,r=await s.chat.completions.create({model:"gpt-4o-mini",messages:[{role:"system",content:`I will give you a word. Write a sentence in which the first letter of each word sequentially spells out my word, like an acrostic sentence.
Your sentence should not contain my word or any of the variations of my word. 
Your response should only contain the sentence you make.
Your sentence should have a semantic connection with my word.`},{role:"user",content:e}],store:!1});t.status(200).json(r)}catch(e){console.error("Error communicating with OpenAI:",e),t.status(500).json({error:"Internal Server Error"})}}r()}catch(e){r(e)}})},2706:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return n}});var n=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},89947:(e,t,n)=>{e.exports=n(75600)}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=86427);module.exports=n})();